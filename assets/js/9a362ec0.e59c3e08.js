"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[30489],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,m=p["".concat(i,".").concat(f)]||p[f]||u[f]||o;return n?r.createElement(m,s(s({ref:t},d),{},{components:n})):r.createElement(m,s({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},98824:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=["components"],c={id:"state-sender",title:"StateSender",sidebar_label:"StateSender",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},i=void 0,l={unversionedId:"supernets/interfaces/network/state-sender",id:"supernets/interfaces/network/state-sender",title:"StateSender",description:"Learn about the access control module and how to allowlist validators.",source:"@site/docs/supernets/interfaces/network/state-sender.md",sourceDirName:"supernets/interfaces/network",slug:"/supernets/interfaces/network/state-sender",permalink:"/matic-docs/docs/supernets/interfaces/network/state-sender",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/interfaces/network/state-sender.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"state-sender",title:"StateSender",sidebar_label:"StateSender",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},sidebar:"supernets",previous:{title:"StateReceiver",permalink:"/matic-docs/docs/supernets/interfaces/network/state-receiver"},next:{title:"Validators",permalink:"/matic-docs/docs/category/validators"}},d={},u=[{value:"Functions",id:"functions",level:2},{value:"syncState()",id:"syncstate",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Usage",id:"usage",level:4}],p={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"IStateSender")," interface provides a way to send state updates from one contract to another, often between different layers of a network, such as L1 and L2. This user guide will help you understand how to interact with the functions provided by the ",(0,o.kt)("inlineCode",{parentName:"p"},"IStateSender")," interface."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"syncstate"},"syncState()"),(0,o.kt)("p",null,"This function sends a state update to a specified contract, allowing the receiving contract to process the changes in the state."),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"receiver")," (address): The contract address will receive the state update."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"data")," (bytes): The calldata associated with the state update to be sent.")),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("p",null,"You'll need to call the syncState() function to send a state update from your contract. This function will send the state update to the specified receiver contract."),(0,o.kt)("p",null,"For example, you might use the ",(0,o.kt)("inlineCode",{parentName:"p"},"syncState()")," function as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"contract MyStateSender is IStateSender {\n    function sendStateUpdate(address receiver, bytes calldata data) public {\n        // Send the state update to the specified receiver contract\n        syncState(receiver, data);\n    }\n}\n")),(0,o.kt)("p",null,"This function enables your contract to communicate state updates to other contracts, facilitating cross-contract and cross-layer communication. By implementing the IStateSender interface, you can ensure your contract can send state updates to other parts of the ecosystem."))}f.isMDXComponent=!0}}]);