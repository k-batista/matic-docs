"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[46346],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),u=r,h=p["".concat(i,".").concat(u)]||p[u]||m[u]||c;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<c;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},80383:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return m}});var a=n(87462),r=n(63366),c=(n(67294),n(3905)),o=["components"],s={id:"state-sync",title:"State Sync Mechanism",description:"Mechanism to read Ethereum data from Matic EVM chain",keywords:["docs","matic","state sync","mechanism","read ethereum data"],image:"https://matic.network/banners/matic-network-16x9.png"},i="State Sync Mechanism",l={unversionedId:"pos/state-sync/state-sync",id:"pos/state-sync/state-sync",title:"State Sync Mechanism",description:"Mechanism to read Ethereum data from Matic EVM chain",source:"@site/docs/pos/state-sync/state-sync-mechanism.md",sourceDirName:"pos/state-sync",slug:"/pos/state-sync/state-sync",permalink:"/matic-docs/docs/pos/state-sync/state-sync",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/state-sync/state-sync-mechanism.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"state-sync",title:"State Sync Mechanism",description:"Mechanism to read Ethereum data from Matic EVM chain",keywords:["docs","matic","state sync","mechanism","read ethereum data"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"State Sync",permalink:"/matic-docs/docs/category/state-sync"},next:{title:"How does State Sync work?",permalink:"/matic-docs/docs/pos/state-sync/how-state-sync-works"}},d={},m=[],p={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,c.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"state-sync-mechanism"},"State Sync Mechanism"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"State Sync")," is the native mechanism to read Ethereum data from Matic EVM chain. "),(0,c.kt)("p",null,"Validators on the Heimdall layer pickup the ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/contracts/blob/a4c26d59ca6e842af2b8d2265be1da15189e29a4/contracts/root/stateSyncer/StateSender.sol#L24"},"StateSynced")," event and pass it on to the Bor layer (read more about the architecture ",(0,c.kt)("a",{parentName:"p",href:"/docs/pos/bor/overview"},"here"),". "),(0,c.kt)("p",null,"The receiver contract inherits ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/genesis-contracts/blob/master/contracts/IStateReceiver.sol"},"IStateReceiver"),", and custom logic sits inside ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/genesis-contracts/blob/05556cfd91a6879a8190a6828428f50e4912ee1a/contracts/IStateReceiver.sol#L5"},"onStateReceive")," function."),(0,c.kt)("p",null,"This is the flow required from dapps / users to work with state-sync:"),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},"Call the smart contract function present here: ",(0,c.kt)("a",{parentName:"li",href:"https://github.com/maticnetwork/contracts/blob/19163ddecf91db17333859ae72dd73c91bee6191/contracts/root/stateSyncer/StateSender.sol#L33"},"https://github.com/maticnetwork/contracts/blob/19163ddecf91db17333859ae72dd73c91bee6191/contracts/root/stateSyncer/StateSender.sol#L33")),(0,c.kt)("li",{parentName:"ol"},"Which emits an event called ",(0,c.kt)("inlineCode",{parentName:"li"},"StateSynced(uint256 indexed id, address indexed contractAddress, bytes data);")),(0,c.kt)("li",{parentName:"ol"},"All the validators on the Heimdall chain receive this event and one of them, whoever wishes to get the tx fees for state sync sends this transaction to Heimdall."),(0,c.kt)("li",{parentName:"ol"},"Once ",(0,c.kt)("inlineCode",{parentName:"li"},"state-sync")," transaction on Heimdall has been included in a block, it is added to pending state-sync list."),(0,c.kt)("li",{parentName:"ol"},"After every sprint on ",(0,c.kt)("inlineCode",{parentName:"li"},"bor"),", the Bor node fetches the pending state-sync events from Heimdall via an API call."),(0,c.kt)("li",{parentName:"ol"},"The receiver contract inherits ",(0,c.kt)("inlineCode",{parentName:"li"},"IStateReceiver")," interface, and custom logic of decoding the data bytes and performing any action sits inside ",(0,c.kt)("inlineCode",{parentName:"li"},"onStateReceive")," function: ",(0,c.kt)("a",{parentName:"li",href:"https://github.com/maticnetwork/genesis-contracts/blob/master/contracts/IStateReceiver.sol"},"https://github.com/maticnetwork/genesis-contracts/blob/master/contracts/IStateReceiver.sol"))))}u.isMDXComponent=!0}}]);