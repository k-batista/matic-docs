"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[40993],{3905:function(e,t,o){o.d(t,{Zo:function(){return c},kt:function(){return f}});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var d=n.createContext({}),l=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(o),f=a,h=u["".concat(d,".").concat(f)]||u[f]||p[f]||r;return o?n.createElement(h,i(i({ref:t},c),{},{components:o})):n.createElement(h,i({ref:t},c))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=o[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},26828:function(e,t,o){o.r(t),o.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var n=o(87462),a=o(63366),r=(o(67294),o(3905)),i=["components"],s={id:"poa",title:"Proof of Authority (PoA)",description:"Explanation and instructions regarding Proof of Autority.",keywords:["docs","polygon","edge","PoA","autorithy"]},d=void 0,l={unversionedId:"edge/consensus/poa",id:"edge/consensus/poa",title:"Proof of Authority (PoA)",description:"Explanation and instructions regarding Proof of Autority.",source:"@site/docs/edge/consensus/poa.md",sourceDirName:"edge/consensus",slug:"/edge/consensus/poa",permalink:"/matic-docs/docs/edge/consensus/poa",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/edge/consensus/poa.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"poa",title:"Proof of Authority (PoA)",description:"Explanation and instructions regarding Proof of Autority.",keywords:["docs","polygon","edge","PoA","autorithy"]},sidebar:"edge",previous:{title:"Consensus",permalink:"/matic-docs/docs/category/consensus"},next:{title:"Proof of Stake",permalink:"/matic-docs/docs/edge/consensus/pos-concepts"}},c={},p=[{value:"Overview",id:"overview",level:2},{value:"Adding a validator to the validator-set",id:"adding-a-validator-to-the-validator-set",level:2},{value:"Step 1: Initialize data folders for IBFT and generate validator keys\u200b for the new node",id:"step-1-initialize-data-folders-for-ibft-and-generate-validator-keys-for-the-new-node",level:3},{value:"Step 2: Propose a new candidate from other validator nodes",id:"step-2-propose-a-new-candidate-from-other-validator-nodes",level:3},{value:"Step 3: Run the client node",id:"step-3-run-the-client-node",level:3},{value:"Removing a validator from the validator-set",id:"removing-a-validator-from-the-validator-set",level:2}],u={toc:p};function f(e){var t=e.components,o=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The IBFT PoA is the default consensus mechanism in the Polygon Edge. In PoA, validators are the ones responsible for creating the blocks and adding them to the blockchain in a series."),(0,r.kt)("p",null,"All of the validators make up a dynamic validator-set, where validators can be added to or removed from the set by employing a voting mechanism. This means that validators can be voted in/out from the validators-set if the majority (51%) of the validator nodes vote to add/drop a certain validator to/from the set. In this way, malicious validators can be recognized and removed from the network, while new trusted validators can be added to the network."),(0,r.kt)("p",null,"All of the validators take turns in proposing the next block (round-robin), and for the block to be validated/inserted in the blockchain, a supermajority (more than 2/3) of the validators must approve the said block."),(0,r.kt)("p",null,"Besides validators, there are non-validators who do not participate in the block creation but do participate in the block validation process."),(0,r.kt)("h2",{id:"adding-a-validator-to-the-validator-set"},"Adding a validator to the validator-set"),(0,r.kt)("p",null,"This guide describes how to add a new validator node to an active IBFT network with 4 validator nodes.\nIf you need help setting up the network refer to the ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/edge/get-started/set-up-ibft-locally"},"Local Setup")," / ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/edge/get-started/set-up-ibft-on-the-cloud"},"Cloud Setup")," sections."),(0,r.kt)("h3",{id:"step-1-initialize-data-folders-for-ibft-and-generate-validator-keys-for-the-new-node"},"Step 1: Initialize data folders for IBFT and generate validator keys\u200b for the new node"),(0,r.kt)("p",null,"In order to get up and running with IBFT on the new node, you first need to initialize the data folders and generate the keys:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge secrets init --data-dir test-chain-5\n")),(0,r.kt)("p",null,"This command will print the validator key (address) and the node ID. You will need the validator key (address) for the next step."),(0,r.kt)("h3",{id:"step-2-propose-a-new-candidate-from-other-validator-nodes"},"Step 2: Propose a new candidate from other validator nodes"),(0,r.kt)("p",null,"For a new node to become a validator at least 51% of validators need to propose him."),(0,r.kt)("p",null,"Example of how to propose a new validator (",(0,r.kt)("inlineCode",{parentName:"p"},"0x8B15464F8233F718c8605B16eBADA6fc09181fC2"),") from the existing validator node on grpc address: 127.0.0.1:10000:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge ibft propose --grpc-address 127.0.0.1:10000 --addr 0x8B15464F8233F718c8605B16eBADA6fc09181fC2 --bls 0x9952735ca14734955e114a62e4c26a90bce42b4627a393418372968fa36e73a0ef8db68bba11ea967ff883e429b3bfdf --vote auth\n")),(0,r.kt)("p",null,"The structure of the IBFT commands is covered in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/get-started/cli-commands"},"CLI Commands")," section."),(0,r.kt)("admonition",{title:"BLS public key",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"BLS public key is only necessary if the network is running with the BLS, for the network not running in BLS mode ",(0,r.kt)("inlineCode",{parentName:"p"},"--bls")," is unnecessary")),(0,r.kt)("h3",{id:"step-3-run-the-client-node"},"Step 3: Run the client node"),(0,r.kt)("p",null,"Because in this example we are attempting to run the network where all nodes are on the same machine, we need to take care to avoid port conflicts. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge server --data-dir ./test-chain-5 --chain genesis.json --grpc-address :50000 --libp2p :50001 --jsonrpc :50002 --seal\n")),(0,r.kt)("p",null,"After fetching all blocks, inside your console you will notice that a new node is participating in the validation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2021-12-01T14:56:48.369+0100 [INFO]  polygon.consensus.ibft.acceptState: Accept state: sequence=4004\n2021-12-01T14:56:48.369+0100 [INFO]  polygon.consensus.ibft: current snapshot: validators=5 votes=0\n2021-12-01T14:56:48.369+0100 [INFO]  polygon.consensus.ibft: proposer calculated: proposer=0x8B15464F8233F718c8605B16eBADA6fc09181fC2 block=4004\n")),(0,r.kt)("admonition",{title:"Promoting a non-validator to a validator ",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Naturally, a non-validator can become a validator by the voting process, but for it to be successfully included in the validator-set after the voting process, the node has to be restarted with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--seal")," flag.")),(0,r.kt)("h2",{id:"removing-a-validator-from-the-validator-set"},"Removing a validator from the validator-set"),(0,r.kt)("p",null,"This operation is fairly simple. To remove a validator node from the validator-set, this command needs to be performed for the majority of the validator nodes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge ibft propose --grpc-address 127.0.0.1:10000 --addr 0x8B15464F8233F718c8605B16eBADA6fc09181fC2 --bls 0x9952735ca14734955e114a62e4c26a90bce42b4627a393418372968fa36e73a0ef8db68bba11ea967ff883e429b3bfdf --vote drop\n")),(0,r.kt)("admonition",{title:"BLS public key",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"BLS public key is only necessary if the network is running with the BLS, for the network not running in BLS mode ",(0,r.kt)("inlineCode",{parentName:"p"},"--bls")," is unnecessary")),(0,r.kt)("p",null,"After the commands are performed, observe that the number of validators has dropped (in this log example from 4 to 3)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2021-12-15T19:20:51.014+0100 [INFO]  polygon.consensus.ibft.acceptState: Accept state: sequence=2399 round=1\n2021-12-15T19:20:51.014+0100 [INFO]  polygon.consensus.ibft: current snapshot: validators=4 votes=2\n2021-12-15T19:20:51.015+0100 [INFO]  polygon.consensus.ibft.acceptState: we are the proposer: block=2399\n2021-12-15T19:20:51.015+0100 [INFO]  polygon.consensus.ibft: picked out txns from pool: num=0 remaining=0\n2021-12-15T19:20:51.015+0100 [INFO]  polygon.consensus.ibft: build block: number=2399 txns=0\n2021-12-15T19:20:53.002+0100 [INFO]  polygon.consensus.ibft: state change: new=ValidateState\n2021-12-15T19:20:53.009+0100 [INFO]  polygon.consensus.ibft: state change: new=CommitState\n2021-12-15T19:20:53.009+0100 [INFO]  polygon.blockchain: write block: num=2399 parent=0x768b3bdf26cdc770525e0be549b1fddb3e389429e2d302cb52af1722f85f798c\n2021-12-15T19:20:53.011+0100 [INFO]  polygon.blockchain: new block: number=2399 hash=0x6538286881d32dc7722dd9f64b71ec85693ee9576e8a2613987c4d0ab9d83590 txns=0 generation_time_in_sec=2\n2021-12-15T19:20:53.011+0100 [INFO]  polygon.blockchain: new head: hash=0x6538286881d32dc7722dd9f64b71ec85693ee9576e8a2613987c4d0ab9d83590 number=2399\n2021-12-15T19:20:53.011+0100 [INFO]  polygon.consensus.ibft: block committed: sequence=2399 hash=0x6538286881d32dc7722dd9f64b71ec85693ee9576e8a2613987c4d0ab9d83590 validators=4 rounds=1 committed=3\n2021-12-15T19:20:53.012+0100 [INFO]  polygon.consensus.ibft: state change: new=AcceptState\n2021-12-15T19:20:53.012+0100 [INFO]  polygon.consensus.ibft.acceptState: Accept state: sequence=2400 round=1\n2021-12-15T19:20:53.012+0100 [INFO]  polygon.consensus.ibft: current snapshot: validators=3 votes=0\n2021-12-15T19:20:53.012+0100 [INFO]  polygon.consensus.ibft: proposer calculated: proposer=0xea21efC826F4f3Cb5cFc0f986A4d69C095c2838b block=2400\n")))}f.isMDXComponent=!0}}]);