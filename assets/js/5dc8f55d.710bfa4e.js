"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[44698],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,f=c["".concat(s,".").concat(u)]||c[u]||d[u]||o;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},66843:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],l={id:"terraform-aws-deployment",title:"Terraform AWS Deployment",description:"Deploy Polygon Edge network on AWS cloud provider using Terraform",keywords:["docs","polygon","edge","deployment","terraform","aws","script"]},s=void 0,p={unversionedId:"edge/get-started/terraform-aws-deployment",id:"edge/get-started/terraform-aws-deployment",title:"Terraform AWS Deployment",description:"Deploy Polygon Edge network on AWS cloud provider using Terraform",source:"@site/docs/edge/get-started/terraform-aws-deployment.md",sourceDirName:"edge/get-started",slug:"/edge/get-started/terraform-aws-deployment",permalink:"/matic-docs/docs/edge/get-started/terraform-aws-deployment",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/edge/get-started/terraform-aws-deployment.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"terraform-aws-deployment",title:"Terraform AWS Deployment",description:"Deploy Polygon Edge network on AWS cloud provider using Terraform",keywords:["docs","polygon","edge","deployment","terraform","aws","script"]},sidebar:"edge",previous:{title:"CLI Commands",permalink:"/matic-docs/docs/edge/get-started/cli-commands"},next:{title:"Google Cloud Deployment",permalink:"/matic-docs/docs/edge/get-started/gcp-marketplace-deployment"}},m={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"System tools",id:"system-tools",level:3},{value:"Terraform variables",id:"terraform-variables",level:3},{value:"Deployment information",id:"deployment-information",level:2},{value:"Deployed resources",id:"deployed-resources",level:3},{value:"Fault tolerance",id:"fault-tolerance",level:3},{value:"Command line access",id:"command-line-access",level:3},{value:"Base AMI upgrade",id:"base-ami-upgrade",level:3},{value:"Deployment procedure",id:"deployment-procedure",level:2},{value:"Pre deployment steps",id:"pre-deployment-steps",level:3},{value:"<code>main.tf</code> example",id:"maintf-example",level:4},{value:"<code>terraform.tfvars</code> example",id:"terraformtfvars-example",level:4},{value:"Deployment steps",id:"deployment-steps",level:3},{value:"Post deployment steps",id:"post-deployment-steps",level:3},{value:"Destroy procedure",id:"destroy-procedure",level:2}],c={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Production deployment guide",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This is the official, production ready, fully automated, AWS deployment guide.   "),(0,o.kt)("p",{parentName:"admonition"},"Manual deployments to the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},(0,o.kt)("a",{parentName:"em",href:"set-up-ibft-on-the-cloud"},"Cloud")))," or ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},(0,o.kt)("a",{parentName:"em",href:"set-up-ibft-locally"},"Local"))),"\nare recommended for testing and/or if your cloud provider is not AWS.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This deployment is PoA only.",(0,o.kt)("br",{parentName:"p"}),"\n","If PoS mechanism is needed, just follow this ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},(0,o.kt)("a",{parentName:"em",href:"/docs/edge/consensus/migration-to-pos"},"guide")))," on now to make a switch from PoA to PoS.")),(0,o.kt)("p",null,"This guide will, in detail, describe the process of deploying a Polygon Edge blockchain network on the AWS cloud provider,\nthat is production ready as the validator nodes are spanned across multiple availability zones."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("h3",{id:"system-tools"},"System tools"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.terraform.io/"},"terraform")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"},"aws cli")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-prereqs.html#getting-started-prereqs-keys"},"aws access key ID and secret access key"))),(0,o.kt)("h3",{id:"terraform-variables"},"Terraform variables"),(0,o.kt)("p",null,"Two variables that must be provided, before running the deployment:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"alb_ssl_certificate")," - the ARN of the certificate from AWS Certificate Manager to be used by ALB for https protocol.",(0,o.kt)("br",{parentName:"li"}),"The certificate must be generated before starting the deployment, and it must have ",(0,o.kt)("strong",{parentName:"li"},"Issued")," status"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"premine")," - the account that will receive pre mined native currency.\nValue must follow the official ",(0,o.kt)("a",{parentName:"li",href:"/docs/edge/get-started/cli-commands#genesis-flags"},"CLI")," flag specification")),(0,o.kt)("h2",{id:"deployment-information"},"Deployment information"),(0,o.kt)("h3",{id:"deployed-resources"},"Deployed resources"),(0,o.kt)("p",null,"High level overview of the resources that will be deployed:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Dedicated VPC"),(0,o.kt)("li",{parentName:"ul"},"4 validator nodes (which are also boot nodes)"),(0,o.kt)("li",{parentName:"ul"},"4 NAT gateways to allow nodes outbound internet traffic"),(0,o.kt)("li",{parentName:"ul"},"Lambda function used for generating the first (genesis) block and starting the chain"),(0,o.kt)("li",{parentName:"ul"},"Dedicated security groups and IAM roles"),(0,o.kt)("li",{parentName:"ul"},"S3 bucket used for storing genesis.json file"),(0,o.kt)("li",{parentName:"ul"},"Application Load Balancer used for exposing the JSON-RPC endpoint")),(0,o.kt)("h3",{id:"fault-tolerance"},"Fault tolerance"),(0,o.kt)("p",null,"Only regions that have 4 availability zones are required for this deployment. Each node is deployed in a single AZ."),(0,o.kt)("p",null,"By placing each node in a single AZ, the whole blockchain cluster is fault-tolerant to a single node (AZ) failure, as Polygon Edge implements IBFT\nconsensus which allows a single node to fail in a 4 validator node cluster."),(0,o.kt)("h3",{id:"command-line-access"},"Command line access"),(0,o.kt)("p",null,"Validator nodes are not exposed in any way to the public internet (JSON-PRC is accessed only via ALB)\nand they don't even have public IP addresses attached to them.",(0,o.kt)("br",{parentName:"p"}),"\n","Node command line access is possible only via ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/systems-manager/features/"},"AWS Systems Manager - Session Manager"),"."),(0,o.kt)("h3",{id:"base-ami-upgrade"},"Base AMI upgrade"),(0,o.kt)("p",null,"This deployment uses ",(0,o.kt)("inlineCode",{parentName:"p"},"ubuntu-focal-20.04-amd64-server")," AWS AMI. It will ",(0,o.kt)("strong",{parentName:"p"},"not")," trigger EC2 ",(0,o.kt)("em",{parentName:"p"},"redeployment")," if the AWS AMI gets updated."),(0,o.kt)("p",null,"If, for some reason, base AMI is required to get updated,\nit can be achieved by running the ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform taint")," command for each instance, before ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply"),".",(0,o.kt)("br",{parentName:"p"}),"\n","Instances can be tainted by running the",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"terraform taint module.instances[<instance_number>].aws_instance.polygon_edge_instance")," command."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"terraform taint module.instances[0].aws_instance.polygon_edge_instance\nterraform taint module.instances[1].aws_instance.polygon_edge_instance\nterraform taint module.instances[2].aws_instance.polygon_edge_instance\nterraform taint module.instances[3].aws_instance.polygon_edge_instance\nterraform apply\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"In a production environment ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform taint")," should be run one-by-one in order to keep the blockchain network functional.")),(0,o.kt)("h2",{id:"deployment-procedure"},"Deployment procedure"),(0,o.kt)("h3",{id:"pre-deployment-steps"},"Pre deployment steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"read through the ",(0,o.kt)("a",{parentName:"li",href:"https://registry.terraform.io/modules/aws-ia/polygon-technology-edge/aws"},"polygon-technology-edge")," terraform registry readme"),(0,o.kt)("li",{parentName:"ul"},"add the ",(0,o.kt)("inlineCode",{parentName:"li"},"polygon-technology-edge")," module to your ",(0,o.kt)("inlineCode",{parentName:"li"},"main.tf")," file using ",(0,o.kt)("em",{parentName:"li"},"provision instructions")," on the modules' readme page"),(0,o.kt)("li",{parentName:"ul"},"run the ",(0,o.kt)("inlineCode",{parentName:"li"},"terraform init")," command to install all necessary Terraform dependencies"),(0,o.kt)("li",{parentName:"ul"},"provide a new certificate in ",(0,o.kt)("a",{parentName:"li",href:"https://aws.amazon.com/certificate-manager/"},"AWS Certificate Manager")),(0,o.kt)("li",{parentName:"ul"},"make sure that the provided certificate is in the ",(0,o.kt)("strong",{parentName:"li"},"Issued")," state and take a note of the certificate's ",(0,o.kt)("strong",{parentName:"li"},"ARN")),(0,o.kt)("li",{parentName:"ul"},"set up your output statement in order to get modules' output in the cli")),(0,o.kt)("h4",{id:"maintf-example"},(0,o.kt)("inlineCode",{parentName:"h4"},"main.tf")," example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'module "polygon-edge" {\n  source  = "aws-ia/polygon-technology-edge/aws"\n  version = ">=0.0.1"\n\n  premine             = var.premine\n  alb_ssl_certificate = var.alb_ssl_certificate\n}\n\noutput "json_rpc_dns_name" {\n  value       = module.polygon-edge.jsonrpc_dns_name\n  description = "The dns name for the JSON-RPC API"\n}\n\nvariable "premine" {\n  type        = string\n  description = "Public account that will receive premined native currency"\n}\n\nvariable "alb_ssl_certificate" {\n  type        = string\n  description = "The ARN of SSL certificate that will be placed on JSON-RPC ALB"\n}\n')),(0,o.kt)("h4",{id:"terraformtfvars-example"},(0,o.kt)("inlineCode",{parentName:"h4"},"terraform.tfvars")," example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-terraform"},'premine             = "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"\nalb_ssl_certificate = "arn:aws:acm:us-west-2:123456789:certificate/64c7f117-61f5-435e-878b-83186676a8af"\n')),(0,o.kt)("h3",{id:"deployment-steps"},"Deployment steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"create the ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform.tfvars")," file")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"set the required terraform variables in this file (as explained above)."),(0,o.kt)("admonition",{parentName:"li",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"There are other non-mandatory variables that can fully customize this deployment.\nYou can override the default values by adding your own to the ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform.tfvars")," file.   "),(0,o.kt)("p",{parentName:"admonition"},"Specification of all available variables can be found in modules' Terraform ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},(0,o.kt)("a",{parentName:"em",href:"https://registry.terraform.io/modules/aws-ia/polygon-technology-edge/aws"},"registry")))))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"make sure that you've set up an aws cli authentication properly by running ",(0,o.kt)("inlineCode",{parentName:"p"},"aws s3 ls")," - there should be no errors")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"deploy the infrastructure ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")))),(0,o.kt)("h3",{id:"post-deployment-steps"},"Post deployment steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"once the deployment is finished, take note of the ",(0,o.kt)("inlineCode",{parentName:"li"},"json_rpc_dns_name")," variable value printed in the cli"),(0,o.kt)("li",{parentName:"ul"},"create a public dns cname record pointing your domain name to the provided ",(0,o.kt)("inlineCode",{parentName:"li"},"json_rpc_dns_name")," value. For example:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# BIND syntax\n# NAME                            TTL       CLASS   TYPE      CANONICAL NAME\nrpc.my-awsome-blockchain.com.               IN      CNAME     jrpc-202208123456879-123456789.us-west-2.elb.amazonaws.com.\n"))),(0,o.kt)("li",{parentName:"ul"},"once the cname record propagates, check if the chain is working properly by calling your JSON-PRC endpoint.",(0,o.kt)("br",{parentName:"li"}),"From the example above:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'  curl  https://rpc.my-awsome-blockchain.com -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":1}\'\n')))),(0,o.kt)("h2",{id:"destroy-procedure"},"Destroy procedure"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"The following procedure will permanently delete your entire infrastructure deployed with these terraform scripts.",(0,o.kt)("br",{parentName:"p"}),"\n","Make sure you have proper ",(0,o.kt)("a",{parentName:"p",href:"docs/edge/working-with-node/backup-restore"},"blockchain data backups")," and/or you're working with a testing environment.")),(0,o.kt)("p",null,"If you need to remove the whole infrastructure, run the following command ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform destroy"),".",(0,o.kt)("br",{parentName:"p"}),"\n","Additionally, you will need to manually remove secrets stored in AWS ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/systems-manager/features/"},"Parameter Store"),"\nfor the region the deployment took place."))}u.isMDXComponent=!0}}]);