"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[87622],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return p}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=l(r),p=o,f=u["".concat(s,".").concat(p)]||u[p]||d[p]||i;return r?n.createElement(f,a(a({ref:t},m),{},{components:r})):n.createElement(f,a({ref:t},m))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},94378:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={id:"mem",title:"Memory Procedures",sidebar_label:"Memory Procedures",description:"Mem Module contains a set of utility procedures for working with random access memory.",keywords:["docs","polygon","wiki","miden","mem"],image:"https://wiki.polygon.technology/img/thumbnail/polygon-miden.png"},s=void 0,l={unversionedId:"miden/user_docs/stdlib/mem",id:"miden/user_docs/stdlib/mem",title:"Memory Procedures",description:"Mem Module contains a set of utility procedures for working with random access memory.",source:"@site/docs/miden/user_docs/stdlib/mem.md",sourceDirName:"miden/user_docs/stdlib",slug:"/miden/user_docs/stdlib/mem",permalink:"/matic-docs/docs/miden/user_docs/stdlib/mem",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/miden/user_docs/stdlib/mem.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"mem",title:"Memory Procedures",sidebar_label:"Memory Procedures",description:"Mem Module contains a set of utility procedures for working with random access memory.",keywords:["docs","polygon","wiki","miden","mem"],image:"https://wiki.polygon.technology/img/thumbnail/polygon-miden.png"},sidebar:"miden",previous:{title:"System Procedures",permalink:"/matic-docs/docs/miden/user_docs/stdlib/sys"}},m={},d=[],u={toc:d};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Module ",(0,i.kt)("inlineCode",{parentName:"p"},"std::mem")," contains a set of utility procedures for working with random access memory."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Procedure"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"memcopy"),(0,i.kt)("td",{parentName:"tr",align:null},"Copies ",(0,i.kt)("inlineCode",{parentName:"td"},"n")," words from ",(0,i.kt)("inlineCode",{parentName:"td"},"read_ptr")," to ",(0,i.kt)("inlineCode",{parentName:"td"},"write_ptr"),".",(0,i.kt)("br",null),(0,i.kt)("br",null),"Stack transition looks as follows:",(0,i.kt)("br",null),(0,i.kt)("br",null),"[n, read_ptr, write_ptr, ...]"," -> ","[...]",(0,i.kt)("br",null),(0,i.kt)("br",null),"Cycles: 15 + 16n")))))}p.isMDXComponent=!0}}]);