"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[29290],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,h=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return n?r.createElement(h,l(l({ref:t},d),{},{components:n})):r.createElement(h,l({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76739:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),l=["components"],i={id:"clerk",title:"Clerk",description:"Module that manages generic state-sync from Ethereum to Bor",keywords:["docs","matic","module","state sync","clerk","heimdall"],image:"https://matic.network/banners/matic-network-16x9.png"},s="Clerk",c={unversionedId:"pos/heimdall/modules/clerk",id:"pos/heimdall/modules/clerk",title:"Clerk",description:"Module that manages generic state-sync from Ethereum to Bor",source:"@site/docs/pos/heimdall/modules/Clerk.md",sourceDirName:"pos/heimdall/modules",slug:"/pos/heimdall/modules/clerk",permalink:"/matic-docs/docs/pos/heimdall/modules/clerk",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/heimdall/modules/Clerk.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"clerk",title:"Clerk",description:"Module that manages generic state-sync from Ethereum to Bor",keywords:["docs","matic","module","state sync","clerk","heimdall"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"Topup",permalink:"/matic-docs/docs/pos/heimdall/modules/topup"},next:{title:"Chain Manager",permalink:"/matic-docs/docs/pos/heimdall/modules/chainmanager"}},d={},m=[{value:"Messages",id:"messages",level:2},{value:"MsgEventRecord",id:"msgeventrecord",level:3},{value:"CLI Commands",id:"cli-commands",level:2},{value:"Send state record transaction",id:"send-state-record-transaction",level:3},{value:"To query already validated state event record",id:"to-query-already-validated-state-event-record",level:3},{value:"REST APIs",id:"rest-apis",level:2}],u={toc:m};function p(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"clerk"},"Clerk"),(0,o.kt)("p",null,"Clerk manages generic state-sync from Ethereum chain to Bor chain. Heimdall agrees on state sync, which is initiated on the Ethereum chain using the Clerk module."),(0,o.kt)("p",null,"More details are available in ",(0,o.kt)("a",{parentName:"p",href:"/matic-docs/docs/pos/bor/core_concepts#state-management-state-sync"},"state sync mechanism")),(0,o.kt)("h2",{id:"messages"},"Messages"),(0,o.kt)("h3",{id:"msgeventrecord"},"MsgEventRecord"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MsgEventRecord")," transaction is responsible for validating events from ",(0,o.kt)("inlineCode",{parentName:"p"},"StateSender.sol"),"  and storing the state on Heimdall for Bor to use."),(0,o.kt)("p",null,"Handler for this transaction validates for any given ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.TxHash")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.LogIndex"),". It throws ",(0,o.kt)("inlineCode",{parentName:"p"},"Older invalid tx found")," error if trying to process the transaction more than once."),(0,o.kt)("p",null,"Here is the structure for the transaction message:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// MsgEventRecord - state msg\ntype MsgEventRecord struct {\n    From     types.HeimdallAddress `json:"from"`\n    TxHash   types.HeimdallHash    `json:"tx_hash"`\n    LogIndex uint64                `json:"log_index"`\n    ID       uint64                `json:"id"`\n    ChainID  string                `json:"bor_chain_id"`\n}\n')),(0,o.kt)("h2",{id:"cli-commands"},"CLI Commands"),(0,o.kt)("h3",{id:"send-state-record-transaction"},"Send state record transaction"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"heimdallcli tx clerk record\n    --log-index <log-index> \n    --tx-hash <transaction-hash> \n    --bor-chain-id <bor-chain-id>\n    --chain-id <heimdall-chain-id>\n")),(0,o.kt)("h3",{id:"to-query-already-validated-state-event-record"},"To query already validated state event record"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"heimdallcli query clerk record --id <state-record-id>\n")),(0,o.kt)("h2",{id:"rest-apis"},"REST APIs"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Method"),(0,o.kt)("th",{parentName:"tr",align:null},"Endpoint"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Event record details"),(0,o.kt)("td",{parentName:"tr",align:null},"GET"),(0,o.kt)("td",{parentName:"tr",align:null},"/clerk/event-record/<record-id",">")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"All event records"),(0,o.kt)("td",{parentName:"tr",align:null},"GET"),(0,o.kt)("td",{parentName:"tr",align:null},"/clerk/event-record/list")))))}p.isMDXComponent=!0}}]);