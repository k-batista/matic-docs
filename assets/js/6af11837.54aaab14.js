"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[11801],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},36593:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],s={id:"json-rpc-bridge",title:"Bridge",description:"List of Bridge JSON RPC commands for Polygon Edge.",keywords:["docs","polygon","edge","json","rpc","commands"]},c=void 0,p={unversionedId:"supernets/api/json-rpc-bridge",id:"supernets/api/json-rpc-bridge",title:"Bridge",description:"List of Bridge JSON RPC commands for Polygon Edge.",source:"@site/docs/supernets/api/json-rpc-bridge.md",sourceDirName:"supernets/api",slug:"/supernets/api/json-rpc-bridge",permalink:"/matic-docs/docs/supernets/api/json-rpc-bridge",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/api/json-rpc-bridge.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"json-rpc-bridge",title:"Bridge",description:"List of Bridge JSON RPC commands for Polygon Edge.",keywords:["docs","polygon","edge","json","rpc","commands"]},sidebar:"supernets",previous:{title:"Debug",permalink:"/matic-docs/docs/supernets/api/json-rpc-debug"},next:{title:"Frequently Asked Questions",permalink:"/matic-docs/docs/supernets/supernets-faq"}},l={},u=[{value:"bridge_generateExitProof",id:"bridge_generateexitproof",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"bridge_getStateSyncProof",id:"bridge_getstatesyncproof",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"bridge_generateexitproof"},"bridge_generateExitProof"),(0,a.kt)("p",null,"Returns the proof for a given exit event. Used by users that want to exit the L2 chain and withdraw tokens to L1."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"exitID")," - ID of the exit event submitted by L2StateSender contract when the user wants to exit the L2 contract."),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Object")," - A proof object containing:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Array of hashes")," - representing the proof of membership of a given exit event on some checkpoint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Map")," - containing a leaf index of given exit event in the Merkle tree, Exit event and block number in which checkpoint that contains a given exit event was submitted to the rootchain.")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"bridge_getstatesyncproof"},"bridge_getStateSyncProof"),(0,a.kt)("p",null,"Returns the proof for a given state sync event. Used by users (Relayer) when they want to execute a state change on the childchain (for example, depositing funds from L1 to L2)."),(0,a.kt)("h3",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"stateSyncID")," - ID of the state sync event submitted by StateSender contract."),(0,a.kt)("h3",{id:"returns-1"},"Returns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Object")," - A proof object containing:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Array of hashes")," - representing the proof of membership of a given state sync event on some commitment."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Map")," - containing the state sync event data.")))))}m.isMDXComponent=!0}}]);