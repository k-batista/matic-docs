"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[73055],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||h[u]||r;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1670:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return h}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),i=["components"],s={id:"eth",title:"ETH Deposit and Withdraw Guide",sidebar_label:"ETH",description:"Deposit and withdraw ETH tokens on the Polygon network.",keywords:["docs","matic","ether","withdraw","deposit"],image:"https://matic.network/banners/matic-network-16x9.png"},l=void 0,p={unversionedId:"develop/ethereum-polygon/pos/using-sdk/eth",id:"develop/ethereum-polygon/pos/using-sdk/eth",title:"ETH Deposit and Withdraw Guide",description:"Deposit and withdraw ETH tokens on the Polygon network.",source:"@site/docs/develop/ethereum-polygon/pos/using-sdk/eth.md",sourceDirName:"develop/ethereum-polygon/pos/using-sdk",slug:"/develop/ethereum-polygon/pos/using-sdk/eth",permalink:"/matic-docs/docs/develop/ethereum-polygon/pos/using-sdk/eth",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/ethereum-polygon/pos/using-sdk/eth.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"eth",title:"ETH Deposit and Withdraw Guide",sidebar_label:"ETH",description:"Deposit and withdraw ETH tokens on the Polygon network.",keywords:["docs","matic","ether","withdraw","deposit"],image:"https://matic.network/banners/matic-network-16x9.png"}},c={},h=[{value:"Quick Summary",id:"quick-summary",level:2},{value:"Introduction",id:"introduction",level:2},{value:"High Level Flow",id:"high-level-flow",level:2},{value:"Steps",id:"steps",level:2},{value:"Deposit",id:"deposit",level:3},{value:"Burn",id:"burn",level:3},{value:"Exit",id:"exit",level:3}],d={toc:h};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Check out the latest ",(0,r.kt)("a",{parentName:"p",href:"https://maticnetwork.github.io/matic.js/docs/pos/deposit-ether/"},"Matic.js documentation on ETH"),"."),(0,r.kt)("h2",{id:"quick-summary"},"Quick Summary"),(0,r.kt)("p",null,"This section of the docs deals with how to deposit and withdraw ERC20 tokens on the Polygon network. Common functions exist between the ETH, ERC20, ERC721 and ERC1155 sections of the docs with variances in the naming and implementation patterns as befitting the standards. The most important prerequisite to using this section of the docs is mapping your assets, so please submit your mapping request ",(0,r.kt)("a",{parentName:"p",href:"https://docs.polygon.technology/docs/develop/ethereum-polygon/submit-mapping-request/"},"here"),"."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This guide uses the Polygon Testnet (Mumbai) which in itself is mapped to the Goerli Network to demonstrate asset transfer between the two blockchains. It's important to note that for the purposes of this tutorial, you should use a proxy address whenever is possible. This is because while the implementation contract address is liable to change when a new update is added to the contract code, the proxy never changes and it redirects all the incoming calls to the latest implementation. In essence, if you use the proxy address, you won't need to worry about any changes happening on the implementation contract before you're ready."),(0,r.kt)("p",null,"For example, please use the ",(0,r.kt)("inlineCode",{parentName:"p"},"RootChainManagerProxy")," address for interactions instead of the ",(0,r.kt)("inlineCode",{parentName:"p"},"RootChainManager")," address. Deployment details like the PoS contract addresses, ABI, and Test Token Addresses can be found ",(0,r.kt)("a",{parentName:"p",href:"/docs/develop/ethereum-polygon/pos/deployment/"},"here"),"."),(0,r.kt)("p",null,"Mapping your assets is a necessary step for integrating the PoS bridge on your application so if you haven't done it, please submit a mapping request ",(0,r.kt)("a",{parentName:"p",href:"https://docs.polygon.technology/docs/develop/ethereum-polygon/submit-mapping-request/"},"here"),". For the purposes of this tutorial, the team has deployed test tokens and mapped them to the PoS bridge. Request the asset you want to use on the ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.polygon.technology/"},"faucet")," and if the test tokens are unavailable, reach out to the team on ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/invite/0xPolygon"},"Discord"),". We'll make sure to reply you immediately."),(0,r.kt)("p",null,"In the upcoming tutorial, every step will be explained in detail along with a few code snippets. However, you can always refer to this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic.js/tree/master/examples"},"repository")," which will have all the ",(0,r.kt)("strong",{parentName:"p"},"example source code")," that can help you to integrate and understand the working of PoS bridge."),(0,r.kt)("h2",{id:"high-level-flow"},"High Level Flow"),(0,r.kt)("p",null,"Deposit ETH -"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"depositEtherFor"))," call on ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"RootChainManager"))," and ",(0,r.kt)("strong",{parentName:"li"},"send "),"the required ether.")),(0,r.kt)("p",null,"Withdraw ETH -"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Burn"))," tokens on Polygon chain."),(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"exit"))," function on ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"RootChainManager"))," to submit proof of burn transaction. This call can be made ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"after checkpoint"))," is submitted for the block containing burn transaction.")),(0,r.kt)("h2",{id:"steps"},"Steps"),(0,r.kt)("h3",{id:"deposit"},"Deposit"),(0,r.kt)("p",null,"ETH can be deposited to the Polygon chain by calling ",(0,r.kt)("strong",{parentName:"p"},"depositEtherFor")," on the ",(0,r.kt)("strong",{parentName:"p"},"RootChainManager")," contract. The Polygon PoS client exposes the ",(0,r.kt)("strong",{parentName:"p"},"depositEther")," method to make this call."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const result = await posClient.depositEther(<amount>);\nconst txHash = await result.getTransactionHash();\nconst txReceipt = await result.getReceipt();\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Deposits from Ethereum to Polygon happen using the ",(0,r.kt)("strong",{parentName:"p"},"State Sync")," Mechanism and this takes about 22-30 minutes. After waiting for this time interval, it is recommended to check the balance using the web3.js/matic.js library or using Metamask. The explorer will show the balance only if at least one asset transfer has happened on the child chain. This ",(0,r.kt)("a",{parentName:"p",href:"/docs/develop/ethereum-polygon/pos/deposit-withdraw-event-pos/"},(0,r.kt)("ins",null,"link"))," explains how to track deposit events.")),(0,r.kt)("h3",{id:"burn"},"Burn"),(0,r.kt)("p",null,"ETH is deposited as an ERC20 token on the Polygon chain. Withdrawing follows the same process as withdrawing ERC20 tokens."),(0,r.kt)("p",null,"To burn the tokens and engage the withdrawal process, call the withdraw function of the MaticWETH contract. Since Ether is an ERC20 token on the Polygon chain, you need to initiate the ",(0,r.kt)("strong",{parentName:"p"},"ERC20")," token from the Polygon PoS client and then call the ",(0,r.kt)("inlineCode",{parentName:"p"},"withdrawStart()")," method to start the burn process."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const erc20Token = posClient.erc20(<token address>);\n\n// start withdraw process for 100 amount\nconst result = await erc20Token.withdrawStart(100);\n\nconst txHash = await result.getTransactionHash();\n\nconst txReceipt = await result.getReceipt();\n\n")),(0,r.kt)("p",null,"Store the transaction hash for this call and use it while generating burn proof."),(0,r.kt)("h3",{id:"exit"},"Exit"),(0,r.kt)("p",null,"Once the ",(0,r.kt)("strong",{parentName:"p"},"checkpoint")," has been submitted for the block containing the burn transaction, the user should call the ",(0,r.kt)("strong",{parentName:"p"},"exit")," function of ",(0,r.kt)("inlineCode",{parentName:"p"},"RootChainManager")," contract and submit the proof of burn. Upon submitting valid proof tokens are transferred to the user. Polygon POS client ",(0,r.kt)("inlineCode",{parentName:"p"},"erc20")," exposes ",(0,r.kt)("inlineCode",{parentName:"p"},"withdrawExit")," method to make this call. This function can be called only after the checkpoint is included in the main chain. The checkpoint inclusion can be tracked by following this ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/develop/ethereum-polygon/pos/deposit-withdraw-event-pos#checkpoint-events"},"guide"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// token address can be null for native tokens like ethereum or matic\nconst erc20RootToken = posClient.erc20(<token address>, true);\n\nconst result = await erc20Token.withdrawExit(<burn tx hash>);\n\nconst txHash = await result.getTransactionHash();\n\nconst txReceipt = await result.getReceipt();\n\n")))}u.isMDXComponent=!0}}]);