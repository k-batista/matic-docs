"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[12896],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(a),u=o,h=c["".concat(p,".").concat(u)]||c[u]||m[u]||r;return a?n.createElement(h,l(l({ref:t},d),{},{components:a})):n.createElement(h,l({ref:t},d))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},88398:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var n=a(87462),o=a(63366),r=(a(67294),a(3905)),l=["components"],i={id:"governance",title:"Governance",sidebar_label:"Governance",description:"System with a 1 token - 1 vote basis",keywords:["docs","matic","one token","one vote","governance","heimdall"],image:"https://matic.network/banners/matic-network-16x9.png"},p="Governance",s={unversionedId:"pos/heimdall/modules/governance",id:"pos/heimdall/modules/governance",title:"Governance",description:"System with a 1 token - 1 vote basis",source:"@site/docs/pos/heimdall/modules/governance.md",sourceDirName:"pos/heimdall/modules",slug:"/pos/heimdall/modules/governance",permalink:"/matic-docs/docs/pos/heimdall/modules/governance",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/heimdall/modules/governance.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"governance",title:"Governance",sidebar_label:"Governance",description:"System with a 1 token - 1 vote basis",keywords:["docs","matic","one token","one vote","governance","heimdall"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"Bank",permalink:"/matic-docs/docs/pos/heimdall/modules/bank"},next:{title:"Staking",permalink:"/matic-docs/docs/pos/heimdall/modules/staking"}},d={},m=[{value:"Param change proposal",id:"param-change-proposal",level:3},{value:"CLI Commands",id:"cli-commands",level:2},{value:"Query gov params",id:"query-gov-params",level:3},{value:"Submit proposal",id:"submit-proposal",level:3},{value:"Query proposal",id:"query-proposal",level:3},{value:"Vote on proposal",id:"vote-on-proposal",level:3},{value:"REST APIs",id:"rest-apis",level:2}],c={toc:m};function u(e){var t=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"governance"},"Governance"),(0,r.kt)("p",null,"Heimdall governance works exactly the same as ",(0,r.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/master/modules/gov/"},"Cosmos-sdk ",(0,r.kt)("inlineCode",{parentName:"a"},"x/gov")," module"),"."),(0,r.kt)("p",null,"In this system, holders of the native staking token of the chain can vote on proposals on a ",(0,r.kt)("inlineCode",{parentName:"p"},"1 token = 1 vote")," basis. Here is a list of features the module currently supports:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Proposal submission:"),"\xa0Validators can submit proposals with a deposit. Once the minimum deposit is reached, proposal enters voting period. Valdiators that deposited on proposals can recover their deposits once the proposal is rejected or accepted."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vote:"),"\xa0Validators can vote on proposals that reached MinDeposit.")),(0,r.kt)("p",null,"There are deposit period and voting period as params in ",(0,r.kt)("inlineCode",{parentName:"p"},"gov")," module. Minimum deposit has to be achieved before deposit period ends, otherwise proposal will be automatically rejected. "),(0,r.kt)("p",null,"Once minimum deposits reached within deposit period, voting period starts. In voting period, all validators should vote their choices for the proposal. After voting period ends, ",(0,r.kt)("inlineCode",{parentName:"p"},"gov/Endblocker.go")," executes ",(0,r.kt)("inlineCode",{parentName:"p"},"tally"),"  function and accepts or rejects proposal based on ",(0,r.kt)("inlineCode",{parentName:"p"},"tally_params")," \u2014 ",(0,r.kt)("inlineCode",{parentName:"p"},"quorum"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"threshold")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"veto"),". "),(0,r.kt)("p",null,"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/heimdall/blob/develop/gov/endblocker.go"},"https://github.com/maticnetwork/heimdall/blob/develop/gov/endblocker.go")),(0,r.kt)("p",null,"There are different types of proposals that can be implemented in Heimdall. As of now, it supports only the ",(0,r.kt)("strong",{parentName:"p"},"Param change proposal"),"."),(0,r.kt)("h3",{id:"param-change-proposal"},"Param change proposal"),(0,r.kt)("p",null,"Using this type of proposal, validators can change any ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," in any ",(0,r.kt)("inlineCode",{parentName:"p"},"module")," of Heimdall."),(0,r.kt)("p",null,"Example: change minimum ",(0,r.kt)("inlineCode",{parentName:"p"},"tx_fees")," for the transaction in ",(0,r.kt)("inlineCode",{parentName:"p"},"auth")," module. When the proposal gets accepted, it automatically changes the ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," in Heimdall state. No extra TX is needed. "),(0,r.kt)("h2",{id:"cli-commands"},"CLI Commands"),(0,r.kt)("h3",{id:"query-gov-params"},"Query gov params"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"heimdallcli query gov params --trust-node\n")),(0,r.kt)("p",null,"This shows all params for governance module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'voting_params:\n  voting_period: 48h0m0s\ntally_params:\n  quorum: "334000000000000000"\n  threshold: "500000000000000000"\n  veto: "334000000000000000"\ndeposit_parmas:\n  min_deposit:\n  - denom: matic\n    amount:\n      i: "10000000000000000000"\n  max_deposit_period: 48h0m0s\n')),(0,r.kt)("h3",{id:"submit-proposal"},"Submit proposal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"heimdallcli tx gov submit-proposal \\\n    --validator-id 1 param-change proposal.json \\\n    --chain-id <heimdall-chain-id>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"proposal.json")," is a file which includes proposal in json format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Auth Param Change",\n  "description": "Update max tx gas",\n  "changes": [\n    {\n      "subspace": "auth",\n      "key": "MaxTxGas",\n      "value": "2000000"\n    }\n  ],\n  "deposit": [\n    {\n      "denom": "matic",\n      "amount": "1000000000000000000"\n    }\n  ]\n}\n')),(0,r.kt)("h3",{id:"query-proposal"},"Query proposal"),(0,r.kt)("p",null,"To query all proposals:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"heimdallcli query gov proposals --trust-node\n")),(0,r.kt)("p",null,"To query a particular proposal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"heimdallcli query gov proposals 1 --trust-node\n")),(0,r.kt)("h3",{id:"vote-on-proposal"},"Vote on proposal"),(0,r.kt)("p",null,"To vote on a particular proposal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'heimdallcli tx gov vote 1 "Yes" --validator-id 1  --chain-id <heimdal-chain-id>\n')),(0,r.kt)("p",null,"Proposal will be automatically tallied after voting period."),(0,r.kt)("h2",{id:"rest-apis"},"REST APIs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Endpoint"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get all proposals"),(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},"/gov/proposals")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get proposal details"),(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},"/gov/proposals/",(0,r.kt)("inlineCode",{parentName:"td"},"proposal-id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get all votes for the proposal"),(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},"/gov/proposals/",(0,r.kt)("inlineCode",{parentName:"td"},"proposal-id"),"/votes")))))}u.isMDXComponent=!0}}]);