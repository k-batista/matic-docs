"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[84590],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},46216:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var a=n(87462),o=n(63366),i=(n(67294),n(3905)),r=["components"],s={id:"eip1559",title:"How to Send EIP1559 Transactions",sidebar_label:"EIP1559 Transactions",description:"Learn about EIP1559 transactions.",keywords:["docs","polygon","matic","transaction","eip1559","ethereum improvement proposal"],image:"https://wiki.polygon.technology/img/polygon-logo.png",slug:"eip1559-transactions/how-to-send-eip1559-transactions"},c=void 0,l={unversionedId:"develop/eip1559",id:"develop/eip1559",title:"How to Send EIP1559 Transactions",description:"Learn about EIP1559 transactions.",source:"@site/docs/develop/eip1559.md",sourceDirName:"develop",slug:"/develop/eip1559-transactions/how-to-send-eip1559-transactions",permalink:"/matic-docs/docs/develop/eip1559-transactions/how-to-send-eip1559-transactions",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/eip1559.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"eip1559",title:"How to Send EIP1559 Transactions",sidebar_label:"EIP1559 Transactions",description:"Learn about EIP1559 transactions.",keywords:["docs","polygon","matic","transaction","eip1559","ethereum improvement proposal"],image:"https://wiki.polygon.technology/img/polygon-logo.png",slug:"eip1559-transactions/how-to-send-eip1559-transactions"},sidebar:"develop",previous:{title:"Transactions",permalink:"/matic-docs/docs/category/transactions"},next:{title:"Account Abstraction",permalink:"/matic-docs/docs/category/account-abstraction"}},p={},d=[{value:"How legacy transactions (Type 0) work",id:"how-legacy-transactions-type-0-work",level:2},{value:"Sending Type 2 transactions with EIP1559",id:"sending-type-2-transactions-with-eip1559",level:2},{value:"Sending Legacy transactions",id:"sending-legacy-transactions",level:2},{value:"Sending EIP1559 transactions",id:"sending-eip1559-transactions",level:2},{value:"Add maxPriorityFeePerGas field",id:"add-maxpriorityfeepergas-field",level:3},{value:"See also",id:"see-also",level:2}],u={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://blog.polygon.technology/eip-1559-upgrades-are-going-live-on-polygon-mainnet/"},"London hard fork")," introduced a new ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1559"},"EIP")," that modifies how gas estimation and costs work for transactions on Polygon."),(0,i.kt)("p",null,"Due to this, there is a change in how the transaction object is formed when sending transactions on Polygon. A new transaction type called ",(0,i.kt)("strong",{parentName:"p"},"Type 2 Transaction")," has been introduced. The legacy type transactions will still be compatible but it is recommended to shift to the new style. You can navigate to the end of this document to directly peek into the code."),(0,i.kt)("h2",{id:"how-legacy-transactions-type-0-work"},"How legacy transactions (Type 0) work"),(0,i.kt)("p",null,"When you submit a transaction, you also send a ",(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," which is an amount you are offering to pay per gas consumed. Then, when you submit the transaction, miners can decide to include your transaction or not based on your ",(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," bid. Miners will prioritize the highest gas prices."),(0,i.kt)("h2",{id:"sending-type-2-transactions-with-eip1559"},"Sending Type 2 transactions with EIP1559"),(0,i.kt)("p",null,"It is a similar concept, the ",(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," will be split into a ",(0,i.kt)("inlineCode",{parentName:"p"},"baseFee")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"priorityFee"),"."),(0,i.kt)("p",null,"Every transaction needs to pay the ",(0,i.kt)("inlineCode",{parentName:"p"},"base fee"),", which is calculated based on how full the previous block was. Transactions can also offer the miner a ",(0,i.kt)("inlineCode",{parentName:"p"},"priorityFee")," to incentivize the miner to include the transaction in the block."),(0,i.kt)("h2",{id:"sending-legacy-transactions"},"Sending Legacy transactions"),(0,i.kt)("p",null,"Only the ",(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," needed to be mentioned in the legacy transaction prior to the London fork."),(0,i.kt)("p",null,"The following code example shows sending transaction using a type 0 transaction:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const sendLegacyTransaction = async () => {\n    const web3 = new Web3('https://polygon-rpc.com');\n\n    await web3.eth.sendTransactions({\n        from: 0x05158d7a59FA8AC5007B3C8BabAa216568Fd32B3,\n        to: 0xD7Fbe63Db5201f71482Fa47ecC4Be5e5B125eF07,\n        value: 1000000000000000000,\n        gasPrice: 200000000000\n    })\n}\n")),(0,i.kt)("h2",{id:"sending-eip1559-transactions"},"Sending EIP1559 transactions"),(0,i.kt)("h3",{id:"add-maxpriorityfeepergas-field"},"Add maxPriorityFeePerGas field"),(0,i.kt)("p",null,"The closest analogy to the ",(0,i.kt)("inlineCode",{parentName:"p"},"gas"),":",(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," combination is ",(0,i.kt)("inlineCode",{parentName:"p"},"gas"),":",(0,i.kt)("inlineCode",{parentName:"p"},"maxPriorityFeePerGas"),". Since the ",(0,i.kt)("inlineCode",{parentName:"p"},"baseFee")," needs to be paid regardless, we can just submit a bid on the ",(0,i.kt)("em",{parentName:"p"},'"tip"')," for the miner. Note that the Polygon Gas Station V2 can be used to get the gas fee estimates."),(0,i.kt)("p",null,"The following code example shows sending transaction in Type 2 method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"// Example for\nconst sendEIP1559Transaction = async () => {\n    const web3 = new Web3('https://polygon-rpc.com');\n\n    await web3.eth.sendTransactions({\n        from: 0xFd71Dc9721d9ddCF0480A582927c3dCd42f3064C,\n        to: 0x8C400f640447A5Fc61BFf7FdcE00eCf20b85CcAd,\n        value: 1000000000000000000,\n        maxPriorityFeePerGas: 40000000000\n    })\n}\n")),(0,i.kt)("p",null,"The Polygon Gas Station V2 can be used to get the gas fee estimates."),(0,i.kt)("p",null,"Polygon Gas Station V2 Endpoint:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"https://gasstation-mainnet.matic.network/v2\n")),(0,i.kt)("p",null,"Polygon Gas Station V2 Response:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "safeLow": {\n        "maxPriorityFee": 37.181444553750005,\n        "maxFee": 326.2556979087\n    },\n    "standard": {\n        "maxPriorityFee": 49.575259405,\n        "maxFee": 435.00759721159994\n    },\n    "fast": {\n        "maxPriorityFee": 61.96907425625,\n        "maxFee": 543.7594965144999\n    },\n    "estimatedBaseFee": 275.308812719,\n    "blockTime": 6,\n    "blockNumber": 23948420\n}\n')),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("p",null,"Please read the following articles to get a better understanding of sending EIP-1559 transactions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.alchemy.com/alchemy/guides/eip-1559/send-tx-eip-1559"},"How to Send Transactions with EIP 1559"),", this tutorial will walk you through both the legacy and new (EIP-1559) way to estimate gas and send transactions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.quicknode.com/guides/web3-sdks/how-to-send-an-eip-1559-transaction"},"Learn how to send an EIP-1559 transaction using ethers.js"))))}m.isMDXComponent=!0}}]);