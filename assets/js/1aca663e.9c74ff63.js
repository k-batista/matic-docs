"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[68360],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?o.createElement(h,r(r({ref:t},p),{},{components:n})):o.createElement(h,r({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var u=2;u<l;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},75246:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var o=n(87462),a=n(63366),l=(n(67294),n(3905)),r=["components"],i={id:"governance-pos",title:"Polygon PoS Consensus and Governance",sidebar_label:"PoS Governance",description:"Common governance terms and processes for the Polygon PoS blockchain.",keywords:["docs","matic","polygon","DAO","governance"],slug:"governance-pos",image:"https://wiki.polygon.technology/img/polygon-logo.png"},s=void 0,u={unversionedId:"maintain/govern/governance-pos",id:"maintain/govern/governance-pos",title:"Polygon PoS Consensus and Governance",description:"Common governance terms and processes for the Polygon PoS blockchain.",source:"@site/docs/maintain/govern/governance-posv1.md",sourceDirName:"maintain/govern",slug:"/maintain/govern/governance-pos",permalink:"/matic-docs/docs/maintain/govern/governance-pos",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/maintain/govern/governance-posv1.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"governance-pos",title:"Polygon PoS Consensus and Governance",sidebar_label:"PoS Governance",description:"Common governance terms and processes for the Polygon PoS blockchain.",keywords:["docs","matic","polygon","DAO","governance"],slug:"governance-pos",image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"govern",previous:{title:"Community Guidelines",permalink:"/matic-docs/docs/maintain/govern/pips/pips-community-guidelines"}},p={},d=[{value:"Heimdall",id:"heimdall",level:2},{value:"Bor",id:"bor",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Hardfork",id:"hardfork",level:3},{value:"Softfork",id:"softfork",level:3},{value:"Rough Consensus",id:"rough-consensus",level:3},{value:"Governance module",id:"governance-module",level:3},{value:"Polygon Improvement Proposal (PIP)",id:"polygon-improvement-proposal-pip",level:3}],c={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,r);return(0,l.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This page includes common governance terms and processes for the Polygon PoS blockchain."),(0,l.kt)("h2",{id:"heimdall"},"Heimdall"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Upgrade Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Softfork/Hardfork"),(0,l.kt)("th",{parentName:"tr",align:null},"Proposal"),(0,l.kt)("th",{parentName:"tr",align:null},"Consensus Options"),(0,l.kt)("th",{parentName:"tr",align:null},"Implementation Flow"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Software upgrades"),(0,l.kt)("td",{parentName:"tr",align:null},"Both"),(0,l.kt)("td",{parentName:"tr",align:null},"PIP proposed via community forum (recommended)"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus:  ",(0,l.kt)("ol",null,(0,l.kt)("li",null,"Development and testing on local dev machines"),(0,l.kt)("li",null,"Multi-node testing on devnet"),"  ",(0,l.kt)("li",null,"Rolling out the release on a few Mumbai nodes (testnet)")," ",(0,l.kt)("li",null,"Rolling out the release on a few Mainnet nodes")," ",(0,l.kt)("li",null,"Full roll-out on Mumbai (testnet)")," ",(0,l.kt)("li",null," Full roll-out on Mainnet")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Consensus rules"),(0,l.kt)("td",{parentName:"tr",align:null},"Hardfork only"),(0,l.kt)("td",{parentName:"tr",align:null},"PIP proposed via community forum (recommended)"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus:  ",(0,l.kt)("ol",null,(0,l.kt)("li",null,"Development and testing on local dev machines"),(0,l.kt)("li",null,"Multi-node testing on devnet"),"  ",(0,l.kt)("li",null,"Rolling out the release on a few Mumbai nodes (testnet)")," ",(0,l.kt)("li",null,"Rolling out the release on a few Mainnet nodes")," ",(0,l.kt)("li",null,"Full roll-out on Mumbai (testnet)")," ",(0,l.kt)("li",null,"Full roll-out on Mainnet")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://forum.polygon.technology/t/overview-of-governance-on-matic/8191"},"Governance module")),(0,l.kt)("td",{parentName:"tr",align:null},"Both"),(0,l.kt)("td",{parentName:"tr",align:null},"PIP proposed via community forum (recommended)"),(0,l.kt)("td",{parentName:"tr",align:null},"Governance module vote"),(0,l.kt)("td",{parentName:"tr",align:null},"Governance module:  ",(0,l.kt)("ol",null,(0,l.kt)("li",null,"Proposal submission: Validators can submit proposals with a deposit. Once the minimum deposit is reached, the proposal enters the voting period. Validators that deposited on proposals can recover their deposits once the proposal is rejected or accepted.")," ",(0,l.kt)("li",null,"Vote: Validators can vote on proposals that reached MinDeposit")," ",(0,l.kt)("li",null,"Once the voting parameters needed to pass the proposal are met, the change is simultaneously carried out across the network")))))),(0,l.kt)("h2",{id:"bor"},"Bor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Upgrade Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Softfork/Hardfork"),(0,l.kt)("th",{parentName:"tr",align:null},"Proposal"),(0,l.kt)("th",{parentName:"tr",align:null},"Consensus Options"),(0,l.kt)("th",{parentName:"tr",align:null},"Implementation Flow"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Software upgrades"),(0,l.kt)("td",{parentName:"tr",align:null},"Both"),(0,l.kt)("td",{parentName:"tr",align:null},"PIP proposed via community forum (recommended)"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus:  ",(0,l.kt)("ol",null,(0,l.kt)("li",null,"Development and testing on local dev machines"),(0,l.kt)("li",null,"Multi-node testing on devnet"),"  ",(0,l.kt)("li",null,"Rolling out the release on a few Mumbai nodes (testnet)")," ",(0,l.kt)("li",null,"Rolling out the release on a few Mainnet nodes")," ",(0,l.kt)("li",null,"Full roll-out on Mumbai (testnet)")," ",(0,l.kt)("li",null,"Full roll-out on Mainnet")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Consensus rules"),(0,l.kt)("td",{parentName:"tr",align:null},"Hardfork only"),(0,l.kt)("td",{parentName:"tr",align:null},"Upgrades are made in line with the  ",(0,l.kt)("a",{parentName:"td",href:"https://github.com/ethereum/go-ethereum"},"geth")," implementation"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus"),(0,l.kt)("td",{parentName:"tr",align:null},"Rough consensus:  ",(0,l.kt)("ol",null,(0,l.kt)("li",null,"Development and testing on local dev machines"),(0,l.kt)("li",null,"Multi-node testing on devnet"),"  ",(0,l.kt)("li",null,"Rolling out the release on a few Mumbai nodes (testnet)")," ",(0,l.kt)("li",null,"Rolling out the release on a few Mainnet nodes")," ",(0,l.kt)("li",null,"Full roll-out on Mumbai (testnet)")," ",(0,l.kt)("li",null,"Full roll-out on Mainnet")))))),(0,l.kt)("h2",{id:"definitions"},"Definitions"),(0,l.kt)("h3",{id:"hardfork"},"Hardfork"),(0,l.kt)("p",null,"A hardfork happens when the node software changes, so the new version is no longer\nbackward-compatible with earlier blocks. This is usually the result of a change in the consensus\ncalculation, meaning that blocks validated using the new calculation will produce a different hash."),(0,l.kt)("p",null,"In the current style of change implementation, hardfork block numbers\nare broadcasted by the Polygon team after an initial staggered rollout to the larger nodes. A block\nnumber is selected before which all nodes in the network should have upgraded to the new\nversion. Nodes running the old version will stop working (will be disconnected from the canonical\nchain after the hardfork block)."),(0,l.kt)("p",null,"Should there be \u2153+1 staked MATIC in disagreement with the fork, two canonical chains will temporarily\nform until the end of the current span. After this, Bor will stop producing blocks, and the chain will\nhalt until consensus is reached."),(0,l.kt)("h3",{id:"softfork"},"Softfork"),(0,l.kt)("p",null,"This type of change is backward-compatible with the pre-fork blocks. This protocol change does\nnot require nodes to upgrade before a deadline. Therefore multiple versions of the node software can\nbe running at once and be able to validate transactions."),(0,l.kt)("h3",{id:"rough-consensus"},"Rough Consensus"),(0,l.kt)("p",null,"Defined as the 'dominant view' of a group as determined by the current consensus framework.\nWithout a vote that can carry out a synchronous update across the network, the 'dominant view.'\nis defined by the node software used by each validator, weighted by its total stake."),(0,l.kt)("p",null,"In the case of the Polygon PoS chain, this is programmatically defined by \u2154+1 of total staked MATIC."),(0,l.kt)("h3",{id:"governance-module"},"Governance module"),(0,l.kt)("p",null,"The Polygon PoS consensus engine (Heimdall) has an inbuilt governance module that can synchronously\ncarry consensus parameter changes across the network. Users can submit proposals to the module\nalong with a deposit containing the proposed changes. Each validator tallies votes cast by validators.\nOnce the defined voting parameters are met, each validator automatically updates itself\nwith the proposal data."),(0,l.kt)("p",null,"The current voting parameters (denominated in staked MATIC):"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Quorum: 33.4%"),(0,l.kt)("li",{parentName:"ul"},"Threshold: 50%"),(0,l.kt)("li",{parentName:"ul"},"Veto: 33.4%")),(0,l.kt)("p",null,"A list of the changeable parameters by the Heimdall governance module is available ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/heimdall/blob/develop/auth/types/params.go"},"here"),"."),(0,l.kt)("h3",{id:"polygon-improvement-proposal-pip"},"Polygon Improvement Proposal (PIP)"),(0,l.kt)("p",null,"The PIP process, as defined in ",(0,l.kt)("a",{parentName:"p",href:"https://forum.polygon.technology/t/pip-1-pip-purpose-and-guidelines/11356"},"PIP-1"),", outlined a preliminary approach for allowing the community\nto put forward-protocol upgrades that improve the network."),(0,l.kt)("p",null,"This takes inspiration from the ",(0,l.kt)("a",{parentName:"p",href:"https://peps.python.org/pep-0001/"},"PEP process"),", which has become a standard used for open source\nprojects, including ",(0,l.kt)("a",{parentName:"p",href:"https://forum.polygon.technology/t/pip-1-pip-purpose-and-guidelines/11356"},"Ethereum")," and ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips"},"Bitcoin"),"."),(0,l.kt)("p",null,"As a guiding rule, it is recommended that all changes originate from the ",(0,l.kt)("a",{parentName:"p",href:"https://forum.polygon.technology/"},"Polygon community Forum")," and the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/Polygon-Improvement-Proposals"},"PIP Github repository"),", in the form of a proposal written in line with PIP-1."),(0,l.kt)("p",null,"On the Polygon PoS chain, different classifications of PIPs have different implementation flows. Thus, it is suggested to consult with the Governance processes board regarding the implementation of different types of PIPs."))}m.isMDXComponent=!0}}]);