"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[70129],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},68598:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={id:"childerc721",title:"ChildERC721 Interface",sidebar_label:"ChildERC721",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},s=void 0,c={unversionedId:"supernets/interfaces/erc721/childerc721",id:"supernets/interfaces/erc721/childerc721",title:"ChildERC721 Interface",description:"Learn about the access control module and how to allowlist validators.",source:"@site/docs/supernets/interfaces/erc721/childerc721.md",sourceDirName:"supernets/interfaces/erc721",slug:"/supernets/interfaces/erc721/childerc721",permalink:"/matic-docs/docs/supernets/interfaces/erc721/childerc721",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/interfaces/erc721/childerc721.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"childerc721",title:"ChildERC721 Interface",sidebar_label:"ChildERC721",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},sidebar:"supernets",previous:{title:"ERC-721",permalink:"/matic-docs/docs/category/erc-721"},next:{title:"ChildERC721 Predicate",permalink:"/matic-docs/docs/supernets/interfaces/erc721/childerc721-predicate"}},d={},u=[{value:"Functions",id:"functions",level:2},{value:"initialize()",id:"initialize",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Usage",id:"usage",level:4},{value:"predicate()",id:"predicate",level:3},{value:"Usage",id:"usage-1",level:4},{value:"rootToken()",id:"roottoken",level:3},{value:"Usage",id:"usage-2",level:4},{value:"mint()",id:"mint",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Usage",id:"usage-3",level:4},{value:"mintBatch()",id:"mintbatch",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Usage",id:"usage-4",level:4},{value:"burn()",id:"burn",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Usage",id:"usage-5",level:4},{value:"burnBatch()",id:"burnbatch",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Usage",id:"usage-6",level:4}],p={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"IChildERC721")," interface is designed to work with ERC721-compliant NFT tokens on a childchain. It provides functionality for minting, burning, and managing NFTs. This user guide will explain how to interact with the functions provided by the ",(0,i.kt)("inlineCode",{parentName:"p"},"IChildERC721")," interface."),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"initialize"},"initialize()"),(0,i.kt)("p",null,"This function initializes the child token contract with the root token address, name, and symbol."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rootToken_")," (address): The root token address."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name_")," (string): The name of the token."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"symbol_")," (string): The symbol of the token.")),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("p",null,"To initialize the IChildERC721 instance, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"initialize()")," function with the required parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"IChildERC721.instance.initialize(rootToken_, name_, symbol_);\n")),(0,i.kt)("h3",{id:"predicate"},"predicate()"),(0,i.kt)("p",null,"This function returns the predicate address controlling the child token."),(0,i.kt)("h4",{id:"usage-1"},"Usage"),(0,i.kt)("p",null,"To get the predicate address, call the predicate() function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address predicateAddress = IChildERC721.instance.predicate();\n")),(0,i.kt)("h3",{id:"roottoken"},"rootToken()"),(0,i.kt)("p",null,"This function returns the address of the token on the rootchain."),(0,i.kt)("h4",{id:"usage-2"},"Usage"),(0,i.kt)("p",null,"To get the root token address, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"rootToken()")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"address rootTokenAddress = IChildERC721.instance.rootToken();\n")),(0,i.kt)("h3",{id:"mint"},"mint()"),(0,i.kt)("p",null,"This function mints an NFT token to a specific address."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"account")," (address): The recipient address."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenId")," (uint256): The token identifier.")),(0,i.kt)("h4",{id:"usage-3"},"Usage"),(0,i.kt)("p",null,"To mint an NFT token to a specific address, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"mint()")," function with the required parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool success = IChildERC721.instance.mint(account, tokenId);\n")),(0,i.kt)("h3",{id:"mintbatch"},"mintBatch()"),(0,i.kt)("p",null,"This function mints multiple NFT tokens in one transaction."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"accounts")," (address[]): An array of recipient addresses."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenIds")," (uint256[]): An array of token identifiers.")),(0,i.kt)("h4",{id:"usage-4"},"Usage"),(0,i.kt)("p",null,"To mint multiple NFT tokens in one transaction, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"mintBatch()")," function with the required parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool success = IChildERC721.instance.mintBatch(accounts, tokenIds);\n")),(0,i.kt)("h3",{id:"burn"},"burn()"),(0,i.kt)("p",null,"This function burns an NFT token from a specific address."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"account")," (address): The address to burn the NFT from."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenId")," (uint256): The token identifier.")),(0,i.kt)("h4",{id:"usage-5"},"Usage"),(0,i.kt)("p",null,"To burn an NFT token from a specific address, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"burn()")," function with the required parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool success = IChildERC721.instance.burn(account, tokenId);\n")),(0,i.kt)("h3",{id:"burnbatch"},"burnBatch()"),(0,i.kt)("p",null,"This function burns multiple NFT tokens from a specific address in one transaction."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"account")," (address): The address to burn the NFTs from."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenIds")," (uint256[]): An array of token identifiers.")),(0,i.kt)("h4",{id:"usage-6"},"Usage"),(0,i.kt)("p",null,"To burn multiple NFT tokens from a specific address in one transaction, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"burnBatch()")," function with the required parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bool success = IChildERC721.instance.burnBatch(account, tokenIds);\n")))}m.isMDXComponent=!0}}]);