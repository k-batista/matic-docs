"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[70833],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return h}});var a=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=a.createContext({}),s=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=s(t.components);return a.createElement(c.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=s(n),h=o,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||r;return n?a.createElement(m,i(i({ref:e},p),{},{components:n})):a.createElement(m,i({ref:e},p))}));function h(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},17266:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),i=["components"],l={id:"chainstack",title:"Deploy a Smart Contract Using Chainstack and Foundry",sidebar_label:"Using Chainstack",description:"Use Chainstack and Foundry to develop a Smart Contract on Polygon",keywords:["docs","matic","polygon","build","deploy smart contract","chainstack","foundry"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},c=void 0,s={unversionedId:"develop/chainstack",id:"develop/chainstack",title:"Deploy a Smart Contract Using Chainstack and Foundry",description:"Use Chainstack and Foundry to develop a Smart Contract on Polygon",source:"@site/docs/develop/chainstack.md",sourceDirName:"develop",slug:"/develop/chainstack",permalink:"/matic-docs/docs/develop/chainstack",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/chainstack.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"chainstack",title:"Deploy a Smart Contract Using Chainstack and Foundry",sidebar_label:"Using Chainstack",description:"Use Chainstack and Foundry to develop a Smart Contract on Polygon",keywords:["docs","matic","polygon","build","deploy smart contract","chainstack","foundry"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"develop",previous:{title:"Using QuickNode",permalink:"/matic-docs/docs/develop/quicknode"},next:{title:"Using ChainIDE",permalink:"/matic-docs/docs/develop/chainide"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"What you will learn",id:"what-you-will-learn",level:2},{value:"What you will do",id:"what-you-will-do",level:2},{value:"Deploy a Polygon Mumbai Node",id:"deploy-a-polygon-mumbai-node",level:2},{value:"Install Foundry",id:"install-foundry",level:2},{value:"Initialize with Foundry",id:"initialize-with-foundry",level:2},{value:"Fund Your Account",id:"fund-your-account",level:2},{value:"Create the Hello World contract",id:"create-the-hello-world-contract",level:2},{value:"Deploy the Contract",id:"deploy-the-contract",level:2},{value:"Test the Contract",id:"test-the-contract",level:2}],u={toc:d};function h(t){var e=t.components,l=(0,o.Z)(t,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Content disclaimer",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please view the third-party content disclaimer ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic-docs/blob/master/CONTENT_DISCLAIMER.md"},(0,r.kt)("ins",null,"here")),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This section guides you through deploying a Hello World contract using ",(0,r.kt)("a",{parentName:"p",href:"https://chainstack.com/build-better-with-polygon/"},"Chainstack")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gakonst/foundry/"},"Foundry")," on the Polygon Mumbai testnet."),(0,r.kt)("p",null,"Chainstack provides infrastructure for Ethereum-based applications and other blockchains. They maintain nodes and guarantee their connection to the network and also offer an interface to interact with mainnet and testnets."),(0,r.kt)("p",null,"Foundry is a fast toolkit for Ethereum application development written in Rust. It provides testing, interaction with EVM smart contracts, sending transactions, and blockchain data retrieval."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you have any questions, reach out in the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/invite/Cymtg2f7pX"},(0,r.kt)("ins",null,"Chainstack Discord"))," server.")),(0,r.kt)("h2",{id:"what-you-will-learn"},"What you will learn"),(0,r.kt)("p",null,"Create a Hello World contract, using Chainstack to deploy a Polygon node and Foundry to deploy the contract."),(0,r.kt)("h2",{id:"what-you-will-do"},"What you will do"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Deploy a Polygon node using Chainstack"),(0,r.kt)("li",{parentName:"ol"},"Set up Foundry"),(0,r.kt)("li",{parentName:"ol"},"Create the smart contract"),(0,r.kt)("li",{parentName:"ol"},"Deploy the smart contract.")),(0,r.kt)("h2",{id:"deploy-a-polygon-mumbai-node"},"Deploy a Polygon Mumbai Node"),(0,r.kt)("p",null,"You need a node to deploy a smart contract to the blockchain network. Follow the steps below to get your node up and running:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 1 ","\u2192")," Sign up with ",(0,r.kt)("a",{parentName:"p",href:"https://console.chainstack.com/user/account/create"},"Chainstack")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"img",src:n(90939).Z,width:"2496",height:"1074"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2 ","\u2192")," Follow the instructions on how to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.chainstack.com/platform/join-a-public-network#join-a-polygon-pos-network"},"deploy a Mumbai node")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"img",src:n(77445).Z,width:"1363",height:"1120"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 3 ","\u2192")," Get the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.chainstack.com/platform/view-node-access-and-credentials"},"deployed node\u2019s HTTPS endpoint")),(0,r.kt)("h2",{id:"install-foundry"},"Install Foundry"),(0,r.kt)("p",null,"Foundry is a development toolkit to work with smart contracts. To begin working with it, you need to install the Rust coding language first."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"Install Rust"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/gakonst/foundry/"},"Install Foundry"),".")),(0,r.kt)("h2",{id:"initialize-with-foundry"},"Initialize with Foundry"),(0,r.kt)("p",null,"To create a boilerplate project, navigate to your working directory and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"forge init PROJECT_NAME\n// PROJECT_NAME - name of project\n")),(0,r.kt)("h2",{id:"fund-your-account"},"Fund Your Account"),(0,r.kt)("p",null,"You will need a wallet account to deploy the smart contract. You can use ",(0,r.kt)("a",{parentName:"p",href:"https://metamask.io/"},"Metamask")," for that. You also need to pay gas on the network to deploy the contract. Just copy your wallet address and get Mumbai MATIC token ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.polygon.technology/"},"through the faucet"),"."),(0,r.kt)("h2",{id:"create-the-hello-world-contract"},"Create the Hello World contract"),(0,r.kt)("p",null,"In the initialized Foundry project in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/"),", create ",(0,r.kt)("inlineCode",{parentName:"p"},"HelloWorld.sol"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// SPDX-License-Identifier: None\n\n// Specifies the version of Solidity, using semantic versioning.\n// Learn more: https://solidity.readthedocs.io/en/v0.5.10/layout-of-source-files.html#pragma\npragma solidity >=0.8.9;\n\n// Defines a contract named `HelloWorld`.\n// A contract is a collection of functions and data (its state). Once deployed, a contract resides at a specific address on the Ethereum blockchain. Learn more: https://solidity.readthedocs.io/en/v0.5.10/structure-of-a-contract.html\ncontract HelloWorld {\n\n   //Emitted when update function is called\n   //Smart contract events are a way for your contract to communicate that something happened on the blockchain to your app front-end, which can be 'listening' for certain events and take action when they happen.\n   event UpdatedMessages(string oldStr, string newStr);\n\n   // Declares a state variable `message` of type `string`.\n   // State variables are variables whose values are permanently stored in contract storage. The keyword `public` makes variables accessible from outside a contract and creates a function that other contracts or clients can call to access the value.\n   string public message;\n\n   // Similar to many class-based object-oriented languages, a constructor is a special function that is only executed upon contract creation.\n   // Constructors are used to initialize the contract's data. Learn more:https://solidity.readthedocs.io/en/v0.5.10/contracts.html#constructors\n   constructor(string memory initMessage) {\n\n      // Accepts a string argument `initMessage` and sets the value into the contract's `message` storage variable).\n      message = initMessage;\n   }\n\n   // A public function that accepts a string argument and updates the `message` storage variable.\n   function update(string memory newMessage) public {\n      string memory oldMsg = message;\n      message = newMessage;\n      emit UpdatedMessages(oldMsg, newMessage);\n   }\n}\n")),(0,r.kt)("h2",{id:"deploy-the-contract"},"Deploy the Contract"),(0,r.kt)("p",null,"At this point, you are ready to deploy your contract:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You have your own node on the Polygon Mumbai network through which you will deploy the contract."),(0,r.kt)("li",{parentName:"ul"},"You have Foundry that you will use to deploy the contract."),(0,r.kt)("li",{parentName:"ul"},"You have a funded account that will deploy the contract.")),(0,r.kt)("p",null,"To deploy the contract, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'forge create HelloWorld --constructor-args "Hello" --contracts CONTRACT_PATH --private-key PRIVATE_KEY --rpc-url HTTPS_ENDPOINT\n')),(0,r.kt)("p",null,"Here,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CONTRACT_PATH \u2014 path to your ",(0,r.kt)("inlineCode",{parentName:"li"},"HelloWorld.sol")," file."),(0,r.kt)("li",{parentName:"ul"},"PRIVATE_KEY \u2014 the private key from your account."),(0,r.kt)("li",{parentName:"ul"},"HTTPS_ENDPOINT \u2014 ",(0,r.kt)("a",{parentName:"li",href:"https://docs.chainstack.com/platform/view-node-access-and-credentials"},"your node's endpoint"),".")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'forge create HelloWorld --constructor-args "Hello" --contracts /root/foundry/src/HelloWorld.sol --private-key d8936f6eae35c73a14ea7c1aabb8d068e16889a7f516c8abc482ba4e1489f4cd --rpc-url https://nd-123-456-789.p2pify.com/3c6e0b8a9c15224a8228b9a98ca1531d\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can always check the contract's deployment on ",(0,r.kt)("a",{parentName:"p",href:"https://mumbai.polygonscan.com/"},(0,r.kt)("ins",null,"Mumbai Polygonscan"))," using the newly-generated hash from the last step.")),(0,r.kt)("h2",{id:"test-the-contract"},"Test the Contract"),(0,r.kt)("p",null,"There is a ",(0,r.kt)("inlineCode",{parentName:"p"},"forge test")," command in case you need to check whether the contract is working fine. Foundry provides many ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-test"},"options")," (flags) for more specific tests. Learn more about writing tests, advanced testing and other features at ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/forge/tests"},"Foundry's documentation"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Congratulations! You have deployed your Hello World smart contract on Polygon.")),(0,r.kt)("p",null,"See also Chainstack docs for more Polygon-related ",(0,r.kt)("a",{parentName:"p",href:"https://docs.chainstack.com/tutorials/polygon/"},(0,r.kt)("ins",null,"tutorials"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.chainstack.com/operations/polygon/tools"},(0,r.kt)("ins",null,"tools")),"."))}h.isMDXComponent=!0},77445:function(t,e,n){e.Z=n.p+"assets/images/join-network-df50ec3652b3f390fb4245580d2c6b7a.png"},90939:function(t,e,n){e.Z=n.p+"assets/images/sign-up-7e59ef0129f328b25e13bbd5e0e38105.png"}}]);