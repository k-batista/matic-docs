"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[8013],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return d}});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(o),d=a,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||r;return o?n.createElement(m,i(i({ref:t},p),{},{components:o})):n.createElement(m,i({ref:t},p))}));function d(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},3797:function(e,t,o){o.r(t),o.d(t,{assets:function(){return h},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var n=o(87462),a=o(63366),r=(o(67294),o(3905)),i=o(44996),l=["components"],s={id:"polygon-architecture",title:"Introduction to Polygon PoS",sidebar_label:"Introduction",description:"Introduction to the architecture of Polygon PoS blockchain.",keywords:["architecture","polygon","pos","wiki","research"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},c=void 0,p={unversionedId:"pos/polygon-architecture",id:"pos/polygon-architecture",title:"Introduction to Polygon PoS",description:"Introduction to the architecture of Polygon PoS blockchain.",source:"@site/docs/pos/polygon-architecture.md",sourceDirName:"pos",slug:"/pos/polygon-architecture",permalink:"/matic-docs/docs/pos/polygon-architecture",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/polygon-architecture.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"polygon-architecture",title:"Introduction to Polygon PoS",sidebar_label:"Introduction",description:"Introduction to the architecture of Polygon PoS blockchain.",keywords:["architecture","polygon","pos","wiki","research"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"pos",next:{title:"Architecture",permalink:"/matic-docs/docs/category/architecture"}},h={},u=[{value:"Staking Contracts",id:"staking-contracts",level:2},{value:"Heimdall",id:"heimdall",level:2},{value:"Bor",id:"bor",level:2},{value:"Resources",id:"resources",level:2}],d={toc:u};function m(e){var t=e.components,o=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Polygon")," is a blockchain application platform that provides hybrid Proof-of-Stake and Plasma-enabled sidechains."),(0,r.kt)("p",null,"Architecturally, the beauty of Polygon is its elegant design, which features a generic validation layer separated from varying execution environments like Plasma enabled chains, full-blown EVM sidechains, and in the future, other Layer 2 approaches such as Optimistic Rollups."),(0,r.kt)("p",null,"The Polygon PoS Network has a three-layer architecture:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ethereum layer")," \u2014 a set of contracts on the Ethereum mainnet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Heimdall layer")," \u2014 a set of proof-of-stake Heimdall nodes running parallel to the Ethereum mainnet, monitoring the set of staking contracts deployed on the Ethereum mainnet and committing the Polygon Network checkpoints to the Ethereum mainnet. Heimdall is based on Tendermint."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Bor layer")," \u2014 a set of block-producing Bor nodes shuffled by Heimdall nodes. Bor is based on Go Ethereum.")),(0,r.kt)("img",{src:(0,i.Z)("img/staking/architecture.png")}),(0,r.kt)("p",null,"Currently, developers can use ",(0,r.kt)("strong",{parentName:"p"},"Plasma")," for specific state transitions for which Plasma predicates have\nbeen written, such as ERC20, ERC721, asset swaps, or other custom predicates. For arbitrary state transitions,\nthey can use PoS. Or both! This is made possible by Polygon's hybrid construction."),(0,r.kt)("p",null,"To enable the PoS mechanism on our platform, a set of ",(0,r.kt)("strong",{parentName:"p"},"staking")," management contracts are deployed on\nEthereum, and a set of incentivized validators running ",(0,r.kt)("strong",{parentName:"p"},"Heimdall")," and ",(0,r.kt)("strong",{parentName:"p"},"Bor")," nodes. Ethereum is\nthe first basechain Polygon supports, but Polygon intends to offer support for additional basechains to\nenable an interoperable decentralized Layer 2 blockchain platform based on community suggestions and consensus."),(0,r.kt)("img",{src:(0,i.Z)("img/matic/Architecture.png")}),(0,r.kt)("h2",{id:"staking-contracts"},"Staking Contracts"),(0,r.kt)("p",null,"To enable the ",(0,r.kt)("a",{parentName:"p",href:"docs/home/polygon-basics/what-is-proof-of-stake"},"Proof of Stake (PoS)")," mechanism on Polygon,\nthe system employs a set of ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/glossary#staking"},"staking")," management contracts on the Ethereum mainnet."),(0,r.kt)("p",null,"The staking contracts implement the following features:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anyone can stake MATIC tokens on the staking contracts on the Ethereum mainnet and join the system as a ",(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/glossary#validator"},"validator"),"."),(0,r.kt)("li",{parentName:"ul"},"Earn staking rewards for validating state transitions on the Polygon Network."),(0,r.kt)("li",{parentName:"ul"},"Save ",(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/glossary#checkpoint-transaction"},"checkpoints")," on the Ethereum mainnet.")),(0,r.kt)("p",null,"The PoS mechanism also acts as a mitigation to the data unavailability problem for the Polygon sidechains."),(0,r.kt)("h2",{id:"heimdall"},"Heimdall"),(0,r.kt)("p",null,"Heimdall is the proof of stake validation layer that handles the aggregation of blocks produced\nby ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/glossary#bor"},"Bor")," into a Merkle tree and publishes the Merkle root periodically to the\nroot chain. The periodic publishing of snapshots of the Bor sidechain is called ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/glossary#checkpoint-transaction"},"checkpoints"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Validates all the blocks since the last checkpoint."),(0,r.kt)("li",{parentName:"ol"},"Creates a Merkle tree of the block hashes."),(0,r.kt)("li",{parentName:"ol"},"Publishes the Merkle root hash to the Ethereum mainnet.")),(0,r.kt)("p",null,"Checkpoints are important for two reasons:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Providing finality on the root chain."),(0,r.kt)("li",{parentName:"ol"},"Providing proof of burn in withdrawal of assets.")),(0,r.kt)("p",null,"An overview of the process:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A subset of active validators from the pool is selected to act as ",(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/glossary#block-producer"},"block producers")," for a ",(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/glossary#span"},"span"),". These block producers are responsible for creating blocks and broadcasting the created blocks on the network."),(0,r.kt)("li",{parentName:"ul"},"A checkpoint includes the Merkle root hash of all blocks created during any given interval. All nodes validate the Merkle root hash and attach their signature to it."),(0,r.kt)("li",{parentName:"ul"},"A selected ",(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/glossary#proposer"},"proposer")," from the validator set is responsible for collecting all signatures for a particular checkpoint and committing the checkpoint on the Ethereum mainnet."),(0,r.kt)("li",{parentName:"ul"},"The responsibility of creating blocks and proposing checkpoints is variably dependent on a validator\u2019s stake ratio in the overall pool.")),(0,r.kt)("p",null,"More details on Heimdall are available on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/pos/heimdall/overview"},"Heimdall architecture")," guide."),(0,r.kt)("h2",{id:"bor"},"Bor"),(0,r.kt)("p",null,"Bor is Polygon's sidechain block producer layer - the entity responsible for aggregating transactions into blocks.  Currently, it is a basic Geth implementation with custom changes done to the consensus algorithm."),(0,r.kt)("p",null,"Block producers are a subnet of the validators and are periodically shuffled via committee selection on ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/glossary#heimdall"},"Heimdall")," in durations termed\nas a ",(0,r.kt)("inlineCode",{parentName:"p"},"span")," in Polygon. Blocks are produced at the ",(0,r.kt)("strong",{parentName:"p"},"Bor")," node, and the sidechain VM is EVM-compatible.\nBlocks produced on Bor are also validated periodically by Heimdall nodes, and a checkpoint consisting of\nthe Merkle tree hash of a set of blocks on Bor is committed to Ethereum periodically."),(0,r.kt)("p",null,"More details are available on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/pos/bor/overview"},"Bor architecture")," guide."),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.polygon.technology/docs/pos/bor"},"Bor Architecture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://forum.polygon.technology/t/matic-system-overview-heimdall/8323"},"Heimdall Architecture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://forum.polygon.technology/t/checkpoint-mechanism-on-heimdall/7160"},"Checkpoint Mechanism"))))}m.isMDXComponent=!0}}]);