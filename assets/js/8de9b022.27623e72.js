"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[70817],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(67294),r=a(86010),o="tabItem_Ymn6";function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},74866:function(e,t,a){a.d(t,{Z:function(){return w}});var n=a(87462),r=a(67294),o=a(86010),i=a(12466),s=a(76775),l=a(91980),u=a(67392),p=a(50012);function c(e){return function(e){return r.Children.map(e,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:c(a);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,o=(0,s.k6)(),i=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,l._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function f(e){var t,a,n,o,i=e.defaultValue,s=e.queryString,l=void 0!==s&&s,u=e.groupId,c=d(e),f=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:c})})),g=f[0],k=f[1],y=h({queryString:l,groupId:u}),v=y[0],b=y[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,p.Nk)(t),n=a[0],o=a[1],[n,(0,r.useCallback)((function(e){t&&o.set(e)}),[t,o])]),w=N[0],_=N[1],S=function(){var e=null!=v?v:w;return m({value:e,tabValues:c})?e:null}();return(0,r.useLayoutEffect)((function(){S&&k(S)}),[S]),{selectedValue:g,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);k(e),b(e),_(e)}),[b,_,c]),tabValues:c}}var g=a(72389),k="tabList__CuJ",y="tabItem_LNqP";function v(e){var t=e.className,a=e.block,s=e.selectedValue,l=e.selectValue,u=e.tabValues,p=[],c=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==s&&(c(t),l(n))},m=function(e){var t,a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var n,r=p.indexOf(e.currentTarget)+1;a=null!=(n=p[r])?n:p[0];break;case"ArrowLeft":var o,i=p.indexOf(e.currentTarget)-1;a=null!=(o=p[i])?o:p[p.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return p.push(e)},onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",y,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=a?a:t)})))}function b(e){var t=e.lazy,a=e.children,n=e.selectedValue;if(a=Array.isArray(a)?a:[a],t){var o=a.find((function(e){return e.props.value===n}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function N(e){var t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(b,(0,n.Z)({},e,t)))}function w(e){var t=(0,g.Z)();return r.createElement(N,(0,n.Z)({key:String(t)},e))}},43490:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=(a(74866),a(85162),["components"]),s={id:"supernets-deploy-index",title:"Get Started",sidebar_label:"Get Started",description:"Learn how to deploy a local test Supernet.",keywords:["docs","polygon","edge","supernets","network","modular"]},l=void 0,u={unversionedId:"supernets/operate/deploy/supernets-deploy-index",id:"supernets/operate/deploy/supernets-deploy-index",title:"Get Started",description:"Learn how to deploy a local test Supernet.",source:"@site/docs/supernets/operate/deploy/index.md",sourceDirName:"supernets/operate/deploy",slug:"/supernets/operate/deploy/",permalink:"/matic-docs/docs/supernets/operate/deploy/",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/operate/deploy/index.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"supernets-deploy-index",title:"Get Started",sidebar_label:"Get Started",description:"Learn how to deploy a local test Supernet.",keywords:["docs","polygon","edge","supernets","network","modular"]},sidebar:"supernets",previous:{title:"Build a Local Private Supernet",permalink:"/matic-docs/docs/category/build-a-local-private-supernet"},next:{title:"How to Spawn a New Childchain",permalink:"/matic-docs/docs/supernets/operate/deploy/supernets-spawn-test-chain"}},p={};(0,o.kt)("script",{src:"./dataline.js",type:"module"});var c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:2},{value:"What you&#39;ll do",id:"what-youll-do",level:2}],d={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This serves as an index for the Supernet deployment guides.\nThe guides explain the end-to-end process for setting up and deploying a local Supernet."),(0,o.kt)("admonition",{title:"Breaking changes",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Supernets are rapidly evolving towards their production-ready state, and, as a result, instructions and concepts in these documents are subject to change."),(0,o.kt)("p",{parentName:"admonition"},"Test releases include breaking changes and are not backward compatibility. Use the current test releases for testing and familiarization only."),(0,o.kt)("p",{parentName:"admonition"},"It is highly recommended that reach out to the Supernets team for support.")),(0,o.kt)("admonition",{title:"No more non-bridge mode deployment",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},'The latest v0.9 test release of Supernets no longer makes a distinction between "bridge mode" and "non-bridge mode". The bridge is now included by default and must be used when running Supernets.'),(0,o.kt)("p",{parentName:"admonition"},'The latest release aligns with the original vision of creating "Super networks" that achieves network scalability and sovereignty with an associated rootchain.'),(0,o.kt)("p",{parentName:"admonition"},"If you require a standalone Supernet instance, custom configuration is necessary.")),(0,o.kt)("admonition",{title:"Not backwards compatible with v0.8",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Supernets v0.9 is not backward compatible at this time. You must either start a new blockchain from scratch or wait for future migration scripts to support migration from previous versions.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Before diving into any of the tutorials, make sure your environment meets the necessary prerequisites. They can be found ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/matic-docs/docs/supernets/operate/supernets-requirements"},(0,o.kt)("ins",null,"here"))),"."),(0,o.kt)("admonition",{title:"Don't use the develop branch for deployments",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Please ensure that you are not running on the ",(0,o.kt)("inlineCode",{parentName:"p"},"develop")," branch, which is the active development branch and include changes that are still being tested and not compatible with the current process."),(0,o.kt)("p",{parentName:"admonition"},"Instead, use the ",(0,o.kt)("a",{parentName:"p",href:"/matic-docs/docs/supernets/operate/supernets-install"},(0,o.kt)("ins",null,"latest release"))," for deployments.")),(0,o.kt)("admonition",{title:"Key management and secure values",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When passing values, it is important to keep sensitive values like private keys and API keys secure."),(0,o.kt)("b",null,"The sample commands provided in this guide use sample private keys for demonstration purposes only, in order to show the format and expected value of the parameter. It is important to note that hardcoding or directly passing private keys should never be done in a development or production environment."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Here are some options for securely storing and retrieving private keys \u2193"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("ins",null,"Environment Variables"),":")," You can store the private key as an environment variable and access it in your code. For example, in Linux, you can set an environment variable like this: ",(0,o.kt)("inlineCode",{parentName:"p"},'export PRIVATE_KEY="my_private_key"'),". Then, in your code, you can retrieve the value of the environment variable using ",(0,o.kt)("inlineCode",{parentName:"p"},'os.Getenv("PRIVATE_KEY")'),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("ins",null,"Configuration Files"),":")," You can store the private key in a configuration file and read it in your session. Be sure to keep the configuration file in a secure location and restrict access to it.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("ins",null,"Vaults and Key Management Systems"),":")," If you are working with sensitive data, you might consider using a vault or key management system like a keystore to store your private keys. These systems provide additional layers of security and can help ensure that your private keys are kept safe.")))),(0,o.kt)("p",{parentName:"admonition"},"Regardless of how a private key is stored and retrieved, it's important to keep it secure and not expose it unnecessarily.")),(0,o.kt)("h2",{id:"what-youll-learn"},"What you'll learn"),(0,o.kt)("p",null,"In this tutorial, you will learn how to set up and initialize a Supernet with multiple nodes. You will learn the complete end-to-end genesis workflow of building a Supernet, including:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Generating private keys for PolyBFT nodes."),(0,o.kt)("li",{parentName:"ul"},"Deploying and initializing rootchain contracts."),(0,o.kt)("li",{parentName:"ul"},"Configuring the rootchain by allowlisting and registering validators, performing initial staking, and finalizing the validator set."),(0,o.kt)("li",{parentName:"ul"},"Generating the genesis file and chain configuration."),(0,o.kt)("li",{parentName:"ul"},"Funding validators on the rootchain."),(0,o.kt)("li",{parentName:"ul"},"Running a (Supernet) cluster consisting of multiple PolyBFT nodes.")),(0,o.kt)("p",null,"By the end of this tutorial, you will have a fully functional Supernet test network that can be used to process transactions with high throughput and low latency."),(0,o.kt)("h2",{id:"what-youll-do"},"What you'll do"),(0,o.kt)("p",null,"This tutorial will cover the following steps. If you are deploying a local Supernet for the first time, please navigate each section in order. "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/supernets-spawn-test-chain"},"Spawn a new Supernet chain")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/supernets-how-to-generate-genesis"},"Configure the new Supernet chain")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/supernets-how-to-configure-rootchain"},"Configure the rootchain")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/access-control/supernets-how-to-allowlist"},"Allowlist addresses")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/staking/supernets-how-to-stake"},"Stake on the rootchain")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/matic-docs/docs/supernets/operate/deploy/supernets-how-to-start"},"Start the new Supernet chain"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Fast-track guide \u2193"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Here's the fast-track guide if you're looking for a quick guide on the essential commands needed to set up a local Supernet.")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Init secrets:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge polybft-secrets --data-dir test-chain- --num 4\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create chain configuration:"),(0,o.kt)("p",{parentName:"li"},"Single host:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge genesis --block-gas-limit 10000000 --epoch-size 10 [--validators-path ./] [--validators-prefix test-chain-] [--consensus polybft] [--reward-wallet address:amount]\n\nMulti-host:\n\n```bash\n./polygon-edge genesis --block-gas-limit 10000000 --epoch-size 10 --validators /ip4/127.0.0.1/tcp/30301/p2p/16Uiu2HAmV5hqAp77untfJRorxqKmyUxgaVn8YHFjBJm9gKMms3mr:0xDcBe0024206ec42b0Ef4214Ac7B71aeae1A11af0:1cf134e02c6b2afb2ceda50bf2c9a01da367ac48f7783ee6c55444e1cab418ec0f52837b90a4d8cf944814073fc6f2bd96f35366a3846a8393e3cb0b19197cde23e2b40c6401fa27ff7d0c36779d9d097d1393cab6fc1d332f92fb3df850b78703b2989d567d1344e219f0667a1863f52f7663092276770cf513f9704b5351c4:11b18bde524f4b02258a8d196b687f8d8e9490d536718666dc7babca14eccb631c238fb79aa2b44a5a4dceccad2dd797f537008dda185d952226a814c1acf7c2]\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Deploy and initialize rootchain contracts:"),(0,o.kt)("p",{parentName:"li"},"[FOR GETH ONLY]"," Start rootchain server:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge rootchain server\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge rootchain deploy --deployer-key <hex_encoded_rootchain_account_private_key> [--genesis ./genesis.json] [--json-rpc http://127.0.0.1:8545] [--test]\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Fund validators on rootchain:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge rootchain fund --data-dir ./test-chain-1\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Allowlist validators on rootchain:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge polybft whitelist-validators --private-key <hex_encoded_rootchain_account_private_key_of_supernetManager_deployer> --addresses <addresses_of_validators> --supernet-manager <address_of_SupernetManager_contract>\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Register validators on rootchain:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge polybft register-validator --data-dir ./test-chain-1 --supernet-manager <address_of_SupernetManager_contract>\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Initial staking on rootchain:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge polybft stake --data-dir ./test-chain-1 --chain-id <id_of_child_chain_from_genesis> --amount <amount_of_tokens_to_stake> --stake-manager <address_of_StakeManager_contract> --native-root-token <address_of_native_root_token>\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Finalize genesis validator set on rootchain:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," ./polygon-edge polybft supernet --private-key <hex_encoded_rootchain_account_private_key_of_supernetManager_deployer> \\\n --genesis <path_to_genesis_file> \\\n --supernet-manager <address_of_SupernetManager_contract> \\\n --stake-manager <address_of_StakeManager_contract> \\\n --finalize-genesis --enable-staking\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run (child chain) cluster:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge server --data-dir ./test-chain-1 --chain genesis.json --grpc-address :5001 --libp2p :30301 --jsonrpc :10001 \\\n--seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-2 --chain genesis.json --grpc-address :5002 --libp2p :30302 --jsonrpc :10002 \\\n--seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-3 --chain genesis.json --grpc-address :5003 --libp2p :30303 --jsonrpc :10003 \\\n--seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-4 --chain genesis.json --grpc-address :5004 --libp2p :30304 --jsonrpc :10004 \\\n--seal --log-level DEBUG\n")),(0,o.kt)("p",{parentName:"li"},"Starting node in relayer mode:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge server --data-dir ./test-chain-1 --chain genesis.json --grpc-address :5001 --libp2p :30301 --jsonrpc :10001 \\\n--seal --log-level DEBUG --relayer\n"))))))}m.isMDXComponent=!0}}]);