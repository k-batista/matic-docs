"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[66886],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return h}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(a),h=i,u=m["".concat(s,".").concat(h)]||m[h]||c[h]||l;return a?n.createElement(u,r(r({ref:t},p),{},{components:a})):n.createElement(u,r({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},49868:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var n=a(87462),i=a(63366),l=(a(67294),a(3905)),r=(a(44996),["components"]),o={id:"run-validator-binaries",title:"Run Validator Node from Binaries",sidebar_label:"Using Binaries",description:"Use binaries to set up your validator node",keywords:["docs","matic","polygon","binary","node","validator","sentry"],slug:"run-validator-binaries",image:"https://wiki.polygon.technology/img/polygon-logo.png"},s=void 0,d={unversionedId:"maintain/validate/run-validator-binaries",id:"maintain/validate/run-validator-binaries",title:"Run Validator Node from Binaries",description:"Use binaries to set up your validator node",source:"@site/docs/maintain/validate/run-validator-binaries.md",sourceDirName:"maintain/validate",slug:"/maintain/validate/run-validator-binaries",permalink:"/matic-docs/docs/maintain/validate/run-validator-binaries",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/maintain/validate/run-validator-binaries.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"run-validator-binaries",title:"Run Validator Node from Binaries",sidebar_label:"Using Binaries",description:"Use binaries to set up your validator node",keywords:["docs","matic","polygon","binary","node","validator","sentry"],slug:"run-validator-binaries",image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"maintain",previous:{title:"System Requirements",permalink:"/matic-docs/docs/maintain/validate/validator-node-system-requirements"},next:{title:"Using Ansible",permalink:"/matic-docs/docs/maintain/validate/run-validator-ansible"}},p={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"Installing the Binaries",id:"installing-the-binaries",level:2},{value:"Installing Heimdall",id:"installing-heimdall",level:3},{value:"Installing Bor",id:"installing-bor",level:3},{value:"Setting Up Node Files",id:"setting-up-node-files",level:2},{value:"Fetching the launch repository",id:"fetching-the-launch-repository",level:3},{value:"Setting up the launch directory",id:"setting-up-the-launch-directory",level:3},{value:"On the sentry machine",id:"on-the-sentry-machine",level:4},{value:"On the validator machine",id:"on-the-validator-machine",level:4},{value:"Setting up the network directories",id:"setting-up-the-network-directories",level:3},{value:"Setting up Heimdall",id:"setting-up-heimdall",level:4},{value:"Setting up Bor",id:"setting-up-bor",level:4},{value:"Setting Up the Services",id:"setting-up-the-services",level:2},{value:"Configuring the Sentry Node",id:"configuring-the-sentry-node",level:2},{value:"Configuring the Heimdall services",id:"configuring-the-heimdall-services",level:3},{value:"Configuring the Bor Service",id:"configuring-the-bor-service",level:3},{value:"Configuring a firewall",id:"configuring-a-firewall",level:3},{value:"Starting the Sentry Node",id:"starting-the-sentry-node",level:2},{value:"Starting the Heimdall service",id:"starting-the-heimdall-service",level:3},{value:"Starting the Bor service",id:"starting-the-bor-service",level:3},{value:"Configuring the Validator Node",id:"configuring-the-validator-node",level:2},{value:"Configuring the Heimdall service",id:"configuring-the-heimdall-service",level:3},{value:"Configuring the Bor service",id:"configuring-the-bor-service-1",level:3},{value:"Setting the Owner and Signer Key",id:"setting-the-owner-and-signer-key",level:2},{value:"Generating a Heimdall private key",id:"generating-a-heimdall-private-key",level:3},{value:"Generating a Bor keystore file",id:"generating-a-bor-keystore-file",level:3},{value:"Add password.txt",id:"add-passwordtxt",level:3},{value:"Add your Ethereum address",id:"add-your-ethereum-address",level:3},{value:"Starting the Validator Node",id:"starting-the-validator-node",level:2},{value:"Starting the Heimdall service",id:"starting-the-heimdall-service-1",level:3},{value:"Starting the Bor service",id:"starting-the-bor-service-1",level:3},{value:"Seed nodes and bootnodes",id:"seed-nodes-and-bootnodes",level:3},{value:"Health Checks with the Community",id:"health-checks-with-the-community",level:2},{value:"Next Steps: Staking",id:"next-steps-staking",level:2}],m={toc:c};function h(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{title:"Snapshots",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Steps in this guide involve waiting for the ",(0,l.kt)("strong",{parentName:"p"},"Heimdall")," and ",(0,l.kt)("strong",{parentName:"p"},"Bor")," services to fully sync. Alternatively, you can use a maintained snapshot, which will reduce the sync time to a few hours.\nFor detailed instructions, see ",(0,l.kt)("a",{parentName:"p",href:"https://forum.polygon.technology/t/snapshot-instructions-for-heimdall-and-bor/9233"},(0,l.kt)("ins",null,"Snapshot Instructions for Heimdall and Bor")),"."),(0,l.kt)("p",{parentName:"admonition"},"For snapshot download links, see ",(0,l.kt)("a",{parentName:"p",href:"https://snapshot.polygon.technology/"},(0,l.kt)("ins",null,"Polygon Chains Snapshots")),".")),(0,l.kt)("p",null,"This guide will walk you through running a Polygon validator node from binaries."),(0,l.kt)("p",null,"For system requirements, follow the ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validate/validator-node-system-requirements"},"Validator Node System Requirements")," guide."),(0,l.kt)("p",null,"If you would like to start and run the validator node through Ansible, see ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validate/run-validator-ansible"},"Run a Validator Node with Ansible"),"."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"There is limited space for accepting new validators. New validators can only join the active set when an already active validator unbonds.")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Two machines \u2014 one ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/glossary#sentry"},"sentry")," and one ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/glossary#validator"},"validator"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"build-essential")," installed on both the sentry and the validator machines."),(0,l.kt)("p",{parentName:"li"},"To install:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install build-essential\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Go 1.19 installed on both the sentry and the validator machines."),(0,l.kt)("p",{parentName:"li"},"To install:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"wget https://raw.githubusercontent.com/maticnetwork/node-ansible/master/go-install.sh\nbash go-install.sh\nsudo ln -nfs ~/.go/bin/go /usr/bin/go\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"RabbitMQ installed on both the sentry and the validator machines."),(0,l.kt)("p",{parentName:"li"},"Here are the commands to install RabbitMQ:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get update\nsudo apt install build-essential\nsudo apt install erlang\nwget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.10.8/rabbitmq-server_3.10.8-1_all.deb\nsudo dpkg -i rabbitmq-server_3.10.8-1_all.deb\n\n")),(0,l.kt)("admonition",{parentName:"li",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Check more information about downloading and installing RabbitMQ ",(0,l.kt)("a",{parentName:"p",href:"https://www.rabbitmq.com/download.html"},(0,l.kt)("ins",null,"here")),".")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Please follow the steps on ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validate/bloxroute"},(0,l.kt)("ins",null,"bloXroute instructions"))," to connect your nodes to the bloXroute gateways.")),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"To get to a running validator node, conduct the following in this ",(0,l.kt)("strong",{parentName:"p"},"exact sequence of steps"),":"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"You will run into configuration issues if these steps are performed out of sequence.\nIt is important to keep in mind that a sentry node must always be set up before the validator node.")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Prepare two machines, one for the sentry node and one for the validator node."),(0,l.kt)("li",{parentName:"ol"},"Install the Heimdall and Bor binaries on the sentry and validator machines."),(0,l.kt)("li",{parentName:"ol"},"Set up the Heimdall and Bor service files on the sentry and validator machines."),(0,l.kt)("li",{parentName:"ol"},"Set up the Heimdall and Bor services on the sentry and validator machines."),(0,l.kt)("li",{parentName:"ol"},"Configure the sentry node."),(0,l.kt)("li",{parentName:"ol"},"Start the sentry node."),(0,l.kt)("li",{parentName:"ol"},"Configure the validator node."),(0,l.kt)("li",{parentName:"ol"},"Set the owner and signer keys."),(0,l.kt)("li",{parentName:"ol"},"Start the validator node."),(0,l.kt)("li",{parentName:"ol"},"Check node health with the community.")),(0,l.kt)("h2",{id:"installing-the-binaries"},"Installing the Binaries"),(0,l.kt)("p",null,"Install the binaries for both on the sentry and validator machines."),(0,l.kt)("h3",{id:"installing-heimdall"},"Installing Heimdall"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/pos/heimdall/overview"},"Heimdall")," is the Proof-of-Stake verifier layer\nresponsible for checkpointing the representation of the Plasma blocks to the Ethereum mainnet."),(0,l.kt)("p",null,"The latest version, ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/heimdall/releases/tag/v0.3.3"},"Heimdall v.0.3.3"),", contains a few enhancements such as:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Restricting data size in state sync txs to:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"30Kb")," when represented in ",(0,l.kt)("strong",{parentName:"li"},"bytes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"60Kb")," when represented as ",(0,l.kt)("strong",{parentName:"li"},"string"),"."))),(0,l.kt)("li",{parentName:"ol"},"Increasing the ",(0,l.kt)("strong",{parentName:"li"},"delay time")," between the contract events of different validators to ensure that the mempool doesn't get filled very quickly in case of a burst of events which can hamper the progress of the chain.")),(0,l.kt)("p",null,"The following example shows how the data size is restricted:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Data - "abcd1234"\nLength in string format - 8\nHex Byte representation - [171 205 18 52]\nLength in byte format - 4\n')),(0,l.kt)("p",null,"Clone the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/heimdall/"},"Heimdall repository"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/maticnetwork/heimdall\n")),(0,l.kt)("p",null,"Navigate to the correct ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/heimdall/releases"},"release version"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout RELEASE_TAG\n")),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"RELEASE_TAG")," is the tag of the release version that you install."),(0,l.kt)("p",null,"For instance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout v0.3.3\n")),(0,l.kt)("p",null,"Once you are on the correct release, install Heimdall:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"make install\nsource ~/.profile\n")),(0,l.kt)("p",null,"Check the Heimdall installation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"heimdalld version --long\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Before proceeding, Heimdall should be installed on both the sentry and validator machines.")),(0,l.kt)("h3",{id:"installing-bor"},"Installing Bor"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/pos/bor"},"Bor")," is the sidechain operator that acts as the block production layer, which syncs with Heimdall to select block producers and verifiers for each ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/glossary#span"},"span")," and ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/glossary#sprint"},"sprint"),"."),(0,l.kt)("p",null,"Clone the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/bor"},"Bor repository"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/maticnetwork/bor\n")),(0,l.kt)("p",null,"Navigate to the correct ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/bor/releases"},"release version"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout RELEASE_TAG\n")),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"RELEASE_TAG")," is the tag of the release version that you install."),(0,l.kt)("p",null,"For instance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout v0.3.9\n")),(0,l.kt)("p",null,"Install Bor:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"make bor-all\n")),(0,l.kt)("p",null,"Create symlinks:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ln -nfs ~/bor/build/bin/bor /usr/bin/bor\nsudo ln -nfs ~/bor/build/bin/bootnode /usr/bin/bootnode\n")),(0,l.kt)("p",null,"Check the Bor installation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"bor version\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Before proceeding, Bor should be installed on both the sentry and validator machines.")),(0,l.kt)("h2",{id:"setting-up-node-files"},"Setting Up Node Files"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Node files need to be set up on both the sentry and validator machines.")),(0,l.kt)("h3",{id:"fetching-the-launch-repository"},"Fetching the launch repository"),(0,l.kt)("p",null,"Clone the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/launch"},"launch repository"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/maticnetwork/launch\n")),(0,l.kt)("h3",{id:"setting-up-the-launch-directory"},"Setting up the launch directory"),(0,l.kt)("h4",{id:"on-the-sentry-machine"},"On the sentry machine"),(0,l.kt)("p",null,"Create a ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir -p node\n")),(0,l.kt)("p",null,"Copy the files and scripts from the ",(0,l.kt)("inlineCode",{parentName:"p"},"launch")," directory to the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cp -rf launch/mainnet-v1/sentry/sentry ~/node\ncp launch/mainnet-v1/service.sh ~/node\n")),(0,l.kt)("h4",{id:"on-the-validator-machine"},"On the validator machine"),(0,l.kt)("p",null,"Create a ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir -p node\n")),(0,l.kt)("p",null,"Copy the files and scripts from the ",(0,l.kt)("inlineCode",{parentName:"p"},"launch")," directory to the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cp -rf launch/mainnet-v1/sentry/validator ~/node\ncp launch/mainnet-v1/service.sh ~/node\n")),(0,l.kt)("h3",{id:"setting-up-the-network-directories"},"Setting up the network directories"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Run this section both on the sentry and validator machines.")),(0,l.kt)("h4",{id:"setting-up-heimdall"},"Setting up Heimdall"),(0,l.kt)("p",null,"Change to the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~/node/heimdall\n")),(0,l.kt)("p",null,"Run the setup script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"bash setup.sh\n")),(0,l.kt)("h4",{id:"setting-up-bor"},"Setting up Bor"),(0,l.kt)("p",null,"Change to the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~/node/bor\n")),(0,l.kt)("p",null,"Run the setup script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"bash setup.sh\n")),(0,l.kt)("h2",{id:"setting-up-the-services"},"Setting Up the Services"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Run this section both on the sentry and validator machines.")),(0,l.kt)("p",null,"Navigate to the ",(0,l.kt)("inlineCode",{parentName:"p"},"node")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~/node\n")),(0,l.kt)("p",null,"Run the setup script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"bash service.sh\n")),(0,l.kt)("p",null,"Copy the service file to the system directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo cp *.service /etc/systemd/system/\n")),(0,l.kt)("h2",{id:"configuring-the-sentry-node"},"Configuring the Sentry Node"),(0,l.kt)("p",null,"Start by logging in to the remote sentry machine."),(0,l.kt)("h3",{id:"configuring-the-heimdall-services"},"Configuring the Heimdall services"),(0,l.kt)("p",null,"Open the Heimdall configuration file for editing:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"vi ~/.heimdalld/config/config.toml\n")),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml"),", change the following parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"moniker")," \u2014 any name. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'moniker = "my-sentry-node"'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"seeds")," \u2014 the seed node addresses consisting of a node ID, an IP address, and a port."),(0,l.kt)("p",{parentName:"li"},"Use the following values:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-toml"},'seeds="f4f605d60b8ffaaf15240564e58a81103510631c@159.203.9.164:26656,4fb1bc820088764a564d4f66bba1963d47d82329@44.232.55.71:26656,2eadba4be3ce47ac8db0a3538cb923b57b41c927@35.199.4.13:26656,3b23b20017a6f348d329c102ddc0088f0a10a444@35.221.13.28:26656,25f5f65a09c56e9f1d2d90618aa70cd358aa68da@35.230.116.151:26656"\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"pex")," \u2014 set the value to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to enable the peer exchange. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"pex = true"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"private_peer_ids")," \u2014 the node ID of Heimdall set up on the validator machine."),(0,l.kt)("p",{parentName:"li"},"To get the node ID of Heimdall on the validator machine:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Log in to the validator machine."),(0,l.kt)("li",{parentName:"ol"},"Run:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"heimdalld tendermint show-node-id\n")))),(0,l.kt)("p",{parentName:"li"},"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'private_peer_ids = "0ee1de0515f577700a6a4b6ad882eff1eb15f066"'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"prometheus")," \u2014 set the value to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to enable the Prometheus metrics. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"prometheus = true"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"max_open_connections")," \u2014 set the value to ",(0,l.kt)("inlineCode",{parentName:"p"},"100"),". Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"max_open_connections = 100"),"."))),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml"),"."),(0,l.kt)("h3",{id:"configuring-the-bor-service"},"Configuring the Bor Service"),(0,l.kt)("p",null,"Open the Bor configuration file for editing:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"`vi ~/node/bor/start.sh`\n")),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"start.sh"),", add the boot node addresses consisting of a node ID, an IP address, and a port\nby adding the following line at the end of the file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-config"},'--bootnodes "enode://0cb82b395094ee4a2915e9714894627de9ed8498fb881cec6db7c65e8b9a5bd7f2f25cc84e71e89d0947e51c76e85d0847de848c7782b13c0255247a6758178c@44.232.55.71:30303,enode://88116f4295f5a31538ae409e4d44ad40d22e44ee9342869e7d68bdec55b0f83c1530355ce8b41fbec0928a7d75a5745d528450d30aec92066ab6ba1ee351d710@159.203.9.164:30303,enode://3178257cd1e1ab8f95eeb7cc45e28b6047a0432b2f9412cff1db9bb31426eac30edeb81fedc30b7cd3059f0902b5350f75d1b376d2c632e1b375af0553813e6f@35.221.13.28:30303,enode://16d9a28eadbd247a09ff53b7b1f22231f6deaf10b86d4b23924023aea49bfdd51465b36d79d29be46a5497a96151a1a1ea448f8a8666266284e004306b2afb6e@35.199.4.13:30303,enode://ef271e1c28382daa6ac2d1006dd1924356cfd843dbe88a7397d53396e0741ca1a8da0a113913dee52d9071f0ad8d39e3ce87aa81ebc190776432ee7ddc9d9470@35.230.116.151:30303"\n')),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"start.sh"),"."),(0,l.kt)("h3",{id:"configuring-a-firewall"},"Configuring a firewall"),(0,l.kt)("p",null,"The sentry machine must have the following ports open to the world ",(0,l.kt)("inlineCode",{parentName:"p"},"0.0.0.0/0"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"26656"),"- Your Heimdall service will connect your node to other nodes Heimdall service.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"30303"),"- Your Bor service will connect your node to other nodes Bor service.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"22")," - Open this port if your node is servicing validators. You will likely want to restrict what traffic can access this port as it is a sensitive port."))),(0,l.kt)("h2",{id:"starting-the-sentry-node"},"Starting the Sentry Node"),(0,l.kt)("p",null,"You will first start the Heimdall service. Once the Heimdall service syncs, you will start the Bor service."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"As mentioned earlier, the Heimdall service takes several days to sync from scratch fully."),(0,l.kt)("p",{parentName:"admonition"},"Alternatively, you can use a maintained snapshot, which will reduce the sync time to a few hours.\nFor detailed instructions, see ",(0,l.kt)("a",{parentName:"p",href:"https://forum.polygon.technology/t/snapshot-instructions-for-heimdall-and-bor/9233"},(0,l.kt)("ins",null,"Snapshot Instructions for Heimdall and Bor")),"."),(0,l.kt)("p",{parentName:"admonition"},"For snapshot download links, see ",(0,l.kt)("a",{parentName:"p",href:"https://snapshot.polygon.technology/"},"Polygon Chains Snapshots"),".")),(0,l.kt)("h3",{id:"starting-the-heimdall-service"},"Starting the Heimdall service"),(0,l.kt)("p",null,"Start the Heimdall service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service heimdalld start\n")),(0,l.kt)("p",null,"Start the Heimdall rest-server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service heimdalld-rest-server start\n")),(0,l.kt)("p",null,"Check the Heimdall service logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u heimdalld.service -f\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"In the logs, you may see the following errors:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Stopping peer for error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MConnection flush failed")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"use of closed network connection"))),(0,l.kt)("p",{parentName:"admonition"},"These logs mean that one of the nodes on the network refused a connection to your node.\nWait for your node to crawl more nodes on the network; you do not need to do anything\nto address these errors.")),(0,l.kt)("p",null,"Check the Heimdall rest-server logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u heimdalld-rest-server.service -f\n")),(0,l.kt)("p",null,"Check the sync status of Heimdall:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"curl localhost:26657/status\n")),(0,l.kt)("p",null,"In the output, the ",(0,l.kt)("inlineCode",{parentName:"p"},"catching_up")," value is:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"true")," \u2014 the Heimdall service is syncing."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"false")," \u2014 the Heimdall service is fully synced.")),(0,l.kt)("p",null,"Wait for the Heimdall service to sync fully."),(0,l.kt)("h3",{id:"starting-the-bor-service"},"Starting the Bor service"),(0,l.kt)("p",null,"Once the Heimdall service syncs, start the Bor service."),(0,l.kt)("p",null,"Start the Bor service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service bor start\n")),(0,l.kt)("p",null,"Check the Bor service logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u bor.service -f\n")),(0,l.kt)("h2",{id:"configuring-the-validator-node"},"Configuring the Validator Node"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"To complete this section, you must have an RPC endpoint of your fully synced Ethereum mainnet\nnode ready.")),(0,l.kt)("h3",{id:"configuring-the-heimdall-service"},"Configuring the Heimdall service"),(0,l.kt)("p",null,"Log in to the remote validator machine."),(0,l.kt)("p",null,"Open for editing ",(0,l.kt)("inlineCode",{parentName:"p"},"vi ~/.heimdalld/config/config.toml"),"."),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml"),", change the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"moniker")," \u2014 any name. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'moniker = "my-validator-node"'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"pex")," \u2014 set the value to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," to disable the peer exchange. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"pex = false"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"private_peer_ids")," \u2014 comment out the value to disable it. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'# private_peer_ids = ""'),"."),(0,l.kt)("p",{parentName:"li"},"To get the node ID of Heimdall on the sentry machine:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Log in to the sentry machine."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"heimdalld tendermint show-node-id"),".")))),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'persistent_peers = "sentry_machineNodeID@sentry_instance_ip:26656"')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"prometheus")," \u2014 set the value to ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," to enable the Prometheus metrics. Example: ",(0,l.kt)("inlineCode",{parentName:"li"},"prometheus = true"),".")),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml"),"."),(0,l.kt)("p",null,"Open for editing ",(0,l.kt)("inlineCode",{parentName:"p"},"vi ~/.heimdalld/config/heimdall-config.toml"),"."),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"heimdall-config.toml"),", change the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eth_rpc_url")," \u2014 an RPC endpoint for a fully synced Ethereum mainnet node,\ni.e Infura. ",(0,l.kt)("inlineCode",{parentName:"li"},"eth_rpc_url =<insert Infura or any full node RPC URL to Ethereum>"))),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'eth_rpc_url = "https://nd-123-456-789.p2pify.com/60f2a23810ba11c827d3da642802412a"')),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"heimdall-config.toml"),"."),(0,l.kt)("h3",{id:"configuring-the-bor-service-1"},"Configuring the Bor service"),(0,l.kt)("p",null,"Open for editing ",(0,l.kt)("inlineCode",{parentName:"p"},"vi ~/.bor/data/bor/static-nodes.json"),"."),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"static-nodes.json"),", change the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},'"<replace with enode://sentry_machine_enodeID@sentry_machine_ip:30303>"')," \u2014 the node ID and\nIP address of Bor set up on the sentry machine."),(0,l.kt)("p",{parentName:"li"},"To get the node ID of Bor on the sentry machine:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Log in to the sentry machine."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"bootnode -nodekey ~/.bor/data/bor/nodekey -writeaddress"),".")),(0,l.kt)("p",{parentName:"li"},"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},'"enode://a8024075291c0dd3467f5af51a05d531f9e518d6cd229336156eb6545581859e8997a80bc679fdb7a3bd7473744c57eeb3411719b973b2d6c69eff9056c0578f@188.166.216.25:30303"'),"."))),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"static-nodes.json"),"."),(0,l.kt)("h2",{id:"setting-the-owner-and-signer-key"},"Setting the Owner and Signer Key"),(0,l.kt)("p",null,"On Polygon, it is recommended that you keep the owner and signer keys different."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Signer \u2014 the address that signs the\n",(0,l.kt)("a",{parentName:"li",href:"/matic-docs/docs/maintain/glossary#checkpoint-transaction"},"checkpoint transactions"),". The recommendation is\nto keep at least 1 ETH on the signer address."),(0,l.kt)("li",{parentName:"ul"},"Owner \u2014 the address that does the staking transactions. The recommendation is to keep the MATIC\ntokens on the owner address.")),(0,l.kt)("h3",{id:"generating-a-heimdall-private-key"},"Generating a Heimdall private key"),(0,l.kt)("p",null,"You must generate a Heimdall private key only on the validator machine. Do not generate a Heimdall\nprivate key on the sentry machine."),(0,l.kt)("p",null,"To generate the private key, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"heimdallcli generate-validatorkey ETHEREUM_PRIVATE_KEY\n")),(0,l.kt)("p",null,"where"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ETHEREUM_PRIVATE_KEY \u2014 your Ethereum wallet\u2019s private key.")),(0,l.kt)("p",null,"This will generate ",(0,l.kt)("inlineCode",{parentName:"p"},"priv_validator_key.json"),". Move the generated JSON file to the Heimdall configuration\ndirectory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"mv ./priv_validator_key.json ~/.heimdalld/config\n")),(0,l.kt)("h3",{id:"generating-a-bor-keystore-file"},"Generating a Bor keystore file"),(0,l.kt)("p",null,"You must generate a Bor keystore file only on the validator machine. Do not generate a Bor keystore file\non the sentry machine."),(0,l.kt)("p",null,"To generate the private key, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"heimdallcli generate-keystore ETHEREUM_PRIVATE_KEY\n")),(0,l.kt)("p",null,"where"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ETHEREUM_PRIVATE_KEY \u2014 your Ethereum wallet\u2019s private key.")),(0,l.kt)("p",null,"When prompted, set up a password to the keystore file."),(0,l.kt)("p",null,"This will generate a ",(0,l.kt)("inlineCode",{parentName:"p"},"UTC-<time>-<address>")," keystore file."),(0,l.kt)("p",null,"Move the generated keystore file to the Bor configuration directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"mv ./UTC-<time>-<address> ~/.bor/keystore/\n")),(0,l.kt)("h3",{id:"add-passwordtxt"},"Add password.txt"),(0,l.kt)("p",null,"Make sure to create a ",(0,l.kt)("inlineCode",{parentName:"p"},"password.txt")," file then add the Bor keystore file password right in the\n",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bor/password.txt")," file."),(0,l.kt)("h3",{id:"add-your-ethereum-address"},"Add your Ethereum address"),(0,l.kt)("p",null,"Open for editing ",(0,l.kt)("inlineCode",{parentName:"p"},"vi /etc/matic/metadata"),"."),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata"),", add your Ethereum address. Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"VALIDATOR_ADDRESS=0xca67a8D767e45056DC92384b488E9Af654d78DE2"),"."),(0,l.kt)("p",null,"Save the changes in ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata"),"."),(0,l.kt)("h2",{id:"starting-the-validator-node"},"Starting the Validator Node"),(0,l.kt)("p",null,"At this point, you must have:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The Heimdall service on the sentry machine syncs and is running."),(0,l.kt)("li",{parentName:"ul"},"The Bor service on the sentry machine running."),(0,l.kt)("li",{parentName:"ul"},"The Heimdall service and the Bor service on the validator machine configured."),(0,l.kt)("li",{parentName:"ul"},"Your owner and signer keys configured.")),(0,l.kt)("h3",{id:"starting-the-heimdall-service-1"},"Starting the Heimdall service"),(0,l.kt)("p",null,"You will now start the Heimdall service on the validator machine. Once the Heimdall service syncs, you\nwill start the Bor service on the validator machine."),(0,l.kt)("p",null,"Start the Heimdall service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service heimdalld start\n")),(0,l.kt)("p",null,"Start the Heimdall rest-server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service heimdalld-rest-server start\n")),(0,l.kt)("p",null,"Start the Heimdall bridge:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service heimdalld-bridge start\n")),(0,l.kt)("p",null,"Check the Heimdall service logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u heimdalld.service -f\n")),(0,l.kt)("p",null,"Check the Heimdall rest-server logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u heimdalld-rest-server.service -f\n")),(0,l.kt)("p",null,"Check the Heimdall bridge logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u heimdalld-bridge.service -f\n")),(0,l.kt)("p",null,"Check the sync status of Heimdall:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"curl localhost:26657/status\n")),(0,l.kt)("p",null,"In the output, the ",(0,l.kt)("inlineCode",{parentName:"p"},"catching_up")," value is:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"true")," \u2014 the Heimdall service is syncing."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"false")," \u2014 the Heimdall service is synced.")),(0,l.kt)("p",null,"Wait for the Heimdall service to fully sync."),(0,l.kt)("h3",{id:"starting-the-bor-service-1"},"Starting the Bor service"),(0,l.kt)("p",null,"Once the Heimdall service on the validator machine syncs, start the Bor service on\nthe validator machine."),(0,l.kt)("p",null,"Start the Bor service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo service bor start\n")),(0,l.kt)("p",null,"Check the Bor service logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u bor.service -f\n")),(0,l.kt)("h3",{id:"seed-nodes-and-bootnodes"},"Seed nodes and bootnodes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Heimdall seed nodes:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'moniker=<enter unique identifier>\n\n# Mainnet:\nseeds="2a53a15ffc70ad41b6876ecbe05c50a66af01e20@3.211.248.31:26656,6f829065789e5b156cbbf076f9d133b4d7725847@3.212.183.151:26656,7285a532bad665f051c0aadc31054e2e61ca2b3d@3.93.224.197:26656,0b431127d21c8970f1c353ab212be4f1ba86c3bf@184.73.124.158:26656,f4f605d60b8ffaaf15240564e58a81103510631c@159.203.9.164:26656,31b79cf4a628a4619e8e9ae95b72e4354c5a5d90@44.232.55.71:26656,a385dd467d11c4cdb0be8b51d7bfb0990f49abc3@35.199.4.13:26656,daad548c0a163faae1d8d58425f97207acf923fd@35.230.116.151:26656,81c76e82fcc3dc9a0a1554a3edaa09a632795ea8@35.221.13.28:26656"\n\n# Testnet:\nseeds="e72c0466a02ea43b2198bd3a9454b87a3ef0d77e@54.147.31.250:26656,b302d1ddb21102e794b524d05152a7834da05bd1@34.226.134.117:26656,9dfc12d9f39257cefc3d57a4d7302586e59a994e@18.213.200.99:26656"\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Bootnodes:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Mainnet:\nbootnode ["enode://0cb82b395094ee4a2915e9714894627de9ed8498fb881cec6db7c65e8b9a5bd7f2f25cc84e71e89d0947e51c76e85d0847de848c7782b13c0255247a6758178c@44.232.55.71:30303","enode://88116f4295f5a31538ae409e4d44ad40d22e44ee9342869e7d68bdec55b0f83c1530355ce8b41fbec0928a7d75a5745d528450d30aec92066ab6ba1ee351d710@159.203.9.164:30303","enode://4be7248c3a12c5f95d4ef5fff37f7c44ad1072fdb59701b2e5987c5f3846ef448ce7eabc941c5575b13db0fb016552c1fa5cca0dda1a8008cf6d63874c0f3eb7@3.93.224.197:30303","enode://32dd20eaf75513cf84ffc9940972ab17a62e88ea753b0780ea5eca9f40f9254064dacb99508337043d944c2a41b561a17deaad45c53ea0be02663e55e6a302b2@3.212.183.151:30303"]\n\n# Testnet:\nbootnodes ["enode://320553cda00dfc003f499a3ce9598029f364fbb3ed1222fdc20a94d97dcc4d8ba0cd0bfa996579dcc6d17a534741fb0a5da303a90579431259150de66b597251@54.147.31.250:30303","enode://f0f48a8781629f95ff02606081e6e43e4aebd503f3d07fc931fad7dd5ca1ba52bd849a6f6c3be0e375cf13c9ae04d859c4a9ae3546dc8ed4f10aa5dbb47d4998@34.226.134.117:30303"]\n')))),(0,l.kt)("h2",{id:"health-checks-with-the-community"},"Health Checks with the Community"),(0,l.kt)("p",null,"Now that your sentry and validator nodes are in sync and running, head over to\n",(0,l.kt)("a",{parentName:"p",href:"https://discord.com/invite/0xPolygon"},"Discord")," and ask the community to health-check your nodes."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"As validators, it\u2019s mandatory to always have a check of the signer address. If the ETH balance reaches below 0.5 ETH then it should be refilled. Avoiding this will push out nodes from submitting checkpoint transactions.")),(0,l.kt)("h2",{id:"next-steps-staking"},"Next Steps: Staking"),(0,l.kt)("p",null,"Now that you have your sentry and validator nodes are health-checked, proceed to\nthe ",(0,l.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validator/core-components/staking"},"Staking")," guide to start backing the network."))}h.isMDXComponent=!0}}]);