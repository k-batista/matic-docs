"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[3792],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},57578:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=(a(44996),["components"]),l={id:"bandstandarddataset",title:"Band Standard Dataset",sidebar_label:"Standard Dataset",description:"Band Stardard Dataset offers real-time price information for over 196+ symbols spanning across crypto assets, foreign exchange and commodities",keywords:["wiki","polygon","oracles","bandchain","web apis","standard dataset","band protocol"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},s=void 0,d={unversionedId:"develop/oracles/bandstandarddataset",id:"develop/oracles/bandstandarddataset",title:"Band Standard Dataset",description:"Band Stardard Dataset offers real-time price information for over 196+ symbols spanning across crypto assets, foreign exchange and commodities",source:"@site/docs/develop/oracles/bandstandarddataset.md",sourceDirName:"develop/oracles",slug:"/develop/oracles/bandstandarddataset",permalink:"/matic-docs/docs/develop/oracles/bandstandarddataset",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/oracles/bandstandarddataset.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"bandstandarddataset",title:"Band Standard Dataset",sidebar_label:"Standard Dataset",description:"Band Stardard Dataset offers real-time price information for over 196+ symbols spanning across crypto assets, foreign exchange and commodities",keywords:["wiki","polygon","oracles","bandchain","web apis","standard dataset","band protocol"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"develop",previous:{title:"BandChain",permalink:"/matic-docs/docs/develop/oracles/bandchain"},next:{title:"Chainlink",permalink:"/matic-docs/docs/develop/oracles/chainlink"}},p={},c=[{value:"Supported Tokens",id:"supported-tokens",level:2},{value:"Price Pairs",id:"price-pairs",level:2},{value:"Querying Prices",id:"querying-prices",level:3},{value:"Solidity Smart Contract",id:"solidity-smart-contract",level:3},{value:"Contract Addresses",id:"contract-addresses",level:2},{value:"BandChain.JS",id:"bandchainjs",level:2},{value:"Example Usage",id:"example-usage",level:3},{value:"Example Usage",id:"example-usage-1",level:2}],u={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Content disclaimer",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Please view the third-party content disclaimer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic-docs/blob/master/CONTENT_DISCLAIMER.md"},(0,o.kt)("ins",null,"here")),".")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Developers building on Polygon can now leverage Band Protocol's decentralized oracle infrastructure. With Band Protocol's oracle, they now have access to various cryptocurrency price data to integrate into their applications."),(0,o.kt)("h2",{id:"supported-tokens"},"Supported Tokens"),(0,o.kt)("p",null,"Currently, the list of supported symbols can be found at ",(0,o.kt)("a",{parentName:"p",href:"http://data.bandprotcool.com"},"data.bandprotocol.com"),". Going forward, this list will continue to expand based on developer needs and community feedback."),(0,o.kt)("h2",{id:"price-pairs"},"Price Pairs"),(0,o.kt)("p",null,"The following methods can work with any combination of base/quote token pair, as long as the base and quote symbols are supported by the dataset."),(0,o.kt)("h3",{id:"querying-prices"},"Querying Prices"),(0,o.kt)("p",null,"Currently, there are two methods for developers to query prices from Band Protocol's oracle: through Band's ",(0,o.kt)("inlineCode",{parentName:"p"},"StdReference")," smart contract on Polygon and through their ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/%40bandprotocol%2Fbandchain.js"},(0,o.kt)("inlineCode",{parentName:"a"},"bandchain.js"))," JavaScript helper library."),(0,o.kt)("h3",{id:"solidity-smart-contract"},"Solidity Smart Contract"),(0,o.kt)("p",null,"To query prices from Band Protocol's oracle, a smart contract should reference Band's ",(0,o.kt)("inlineCode",{parentName:"p"},"StdReference")," contract, specifically the ",(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceData")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceDatabulk")," methods."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceData")," takes two strings as the inputs, the ",(0,o.kt)("inlineCode",{parentName:"p"},"base")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"quote")," symbol, respectively. It then queries the ",(0,o.kt)("inlineCode",{parentName:"p"},"StdReference")," contract for the latest rates for those two tokens, and returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"ReferenceData")," struct, shown below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"struct ReferenceData {\n    uint256 rate; // base/quote exchange rate, multiplied by 1e18.\n    uint256 lastUpdatedBase; // UNIX epoch of the last time when base price gets updated.\n    uint256 lastUpdatedQuote; // UNIX epoch of the last time when quote price gets updated.\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceDataBulk")," instead takes two lists, one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"base")," tokens, and one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"quotes"),". It then proceeds to similarly query the price for each base/quote pair at each index, and returns an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"ReferenceData")," structs."),(0,o.kt)("p",null,"For example, if we call ",(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceDataBulk")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"['BTC','BTC','ETH']")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"['USD','ETH','BNB']"),", the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"ReferenceData")," array will contain information regarding the pairs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BTC/USD")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BTC/ETH")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ETH/BNB"))),(0,o.kt)("h2",{id:"contract-addresses"},"Contract Addresses"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Blockchain"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Contract Address"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Polygon (Test)"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("inlineCode",{parentName:"td"},"0x56e2898e0ceff0d1222827759b56b28ad812f92f"))))),(0,o.kt)("h2",{id:"bandchainjs"},"BandChain.JS"),(0,o.kt)("p",null,"Band's node helper library ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@bandprotocol/bandchain.js"},(0,o.kt)("inlineCode",{parentName:"a"},"bandchain.js"))," also supports a similar ",(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceData")," function. This function takes one argument, a list of token pairs to query the result. It then returns a list of corresponding rate values."),(0,o.kt)("h3",{id:"example-usage"},"Example Usage"),(0,o.kt)("p",null,"The code below shows an example usage of the function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { Client } = require('@bandprotocol/bandchain.js');\n\n// BandChain's REST Endpoint\nconst endpoint = 'https://rpc.bandchain.org';\nconst client = new Client(endpoint);\n\n// This example demonstrates how to query price data from\n// Band's standard dataset\nasync function exampleGetReferenceData() {\n  const rate = await client.getReferenceData(['BTC/ETH','BAND/EUR']);\n  return rate;\n}\n\n(async () => {\n  console.log(await exampleGetReferenceData());\n})();\n\n")),(0,o.kt)("p",null,"The corresponding result will then be similar to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ node index.js\n[\n    {\n        pair: 'BTC/ETH',\n        rate: 30.998744363906173,\n        updatedAt: { base: 1615866954, quote: 1615866954 },\n        requestID: { base: 2206590, quote: 2206590 }\n    },\n    {\n        pair: 'BAND/EUR',\n        rate: 10.566138918332376,\n        updatedAt: { base: 1615866845, quote: 1615866911 },\n        requestID: { base: 2206539, quote: 2206572 }\n    }\n]\n")),(0,o.kt)("p",null,"For each pair, the following information will be returned:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pair"),": The base/quote symbol pair string"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rate"),": The resulting rate of the given pair"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"updated"),": The timestamp at which the base and quote symbols was last updated on BandChain. For ",(0,o.kt)("inlineCode",{parentName:"li"},"USD"),", this will be the current timestamp."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rawRate"),": This object consists of two parts.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"value")," is the ",(0,o.kt)("inlineCode",{parentName:"li"},"BigInt")," value of the actual rate, multiplied by ",(0,o.kt)("inlineCode",{parentName:"li"},"10^decimals")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"decimals")," is then the exponent by which ",(0,o.kt)("inlineCode",{parentName:"li"},"rate")," was multiplied by to get ",(0,o.kt)("inlineCode",{parentName:"li"},"rawRate"))))),(0,o.kt)("h2",{id:"example-usage-1"},"Example Usage"),(0,o.kt)("p",null,"This ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/tansawit/a66d460d4e896aa94a0790df299251db"},"contract")," demonstrates an example of using Band's ",(0,o.kt)("inlineCode",{parentName:"p"},"StdReference")," contract and the ",(0,o.kt)("inlineCode",{parentName:"p"},"getReferenceData")," function."))}m.isMDXComponent=!0}}]);