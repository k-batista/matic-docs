"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[90682],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return c}});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),p=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},s=function(t){var e=p(t.components);return a.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,o(o({ref:e},s),{},{components:n})):a.createElement(k,o({ref:e},s))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86489:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=["components"],i={id:"supernets-how-to-start",title:"How to Start a Supernet",sidebar_label:"How to Start a Supernet",description:"Learn how to start your new Supernet after configuring the genesis workflow.",keywords:["docs","polygon","edge","supernets","network","modular"]},d=void 0,p={unversionedId:"supernets/operate/deploy/supernets-how-to-start",id:"supernets/operate/deploy/supernets-how-to-start",title:"How to Start a Supernet",description:"Learn how to start your new Supernet after configuring the genesis workflow.",source:"@site/docs/supernets/operate/deploy/start-chain.md",sourceDirName:"supernets/operate/deploy",slug:"/supernets/operate/deploy/supernets-how-to-start",permalink:"/matic-docs/docs/supernets/operate/deploy/supernets-how-to-start",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/operate/deploy/start-chain.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"supernets-how-to-start",title:"How to Start a Supernet",sidebar_label:"How to Start a Supernet",description:"Learn how to start your new Supernet after configuring the genesis workflow.",keywords:["docs","polygon","edge","supernets","network","modular"]},sidebar:"supernets",previous:{title:"How to Unstake on the Rootchain",permalink:"/matic-docs/docs/supernets/operate/deploy/staking/supernets-unstake"},next:{title:"Deploy Your Supernet to the Cloud",permalink:"/matic-docs/docs/supernets/operate/supernets-setup-dev-env"}},s={},m=[],u={toc:m};function c(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Now that we have set up the rootchain and created the chain configuration, we can run the Supernet cluster of Edge clients. In this example, we'll run a cluster of four Edge clients."),(0,l.kt)("p",null,"To run a Supernet cluster, we use the ",(0,l.kt)("inlineCode",{parentName:"p"},"polygon-edge server")," command with the following options:"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Flags \u2193"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--access-control-allow-origins ")),(0,l.kt)("td",{parentName:"tr",align:null},"The CORS header indicating whether any JSON-RPC response can be shared with the specified origin."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--access-control-allow-origins "*"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--block-gas-target")),(0,l.kt)("td",{parentName:"tr",align:null},"The target block gas limit for the chain."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--block-gas-target "0x0" '))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--chain  ")),(0,l.kt)("td",{parentName:"tr",align:null},"The genesis file used for starting the chain."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--chain "./genesis.json"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--config ")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the CLI config."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--config "/path/to/config.json"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--data-dir ")),(0,l.kt)("td",{parentName:"tr",align:null},"The data directory used for storing Polygon Edge client data."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--data-dir "/path/to/data-dir"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--dns")),(0,l.kt)("td",{parentName:"tr",align:null},"The host DNS address which can be used by a remote peer for connection."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--dns "example.com"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--grpc-address")),(0,l.kt)("td",{parentName:"tr",align:null},"The GRPC interface."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--grpc-address "127.0.0.1:9632" '))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json-rpc-batch-request-limit")),(0,l.kt)("td",{parentName:"tr",align:null},"Max length to be considered when handling JSON-RPC batch requests."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json-rpc-batch-request-limit 20"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json-rpc-block-range-limit")),(0,l.kt)("td",{parentName:"tr",align:null},"Max block range to be considered when executing JSON-RPC requests that consider fromBlock/toBlock values."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json-rpc-block-range-limit 1000 "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--jsonrpc")),(0,l.kt)("td",{parentName:"tr",align:null},"The JSON-RPC interface."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--jsonrpc "0.0.0.0:8545"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--libp2p")),(0,l.kt)("td",{parentName:"tr",align:null},"The address and port for the libp2p service."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--libp2p "127.0.0.1:1478" '))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--log-level")),(0,l.kt)("td",{parentName:"tr",align:null},"The log level for console output."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--log-level "INFO"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"`--log-to"),(0,l.kt)("td",{parentName:"tr",align:null},"Write all logs to the file at specified location instead of writing them to console."),(0,l.kt)("td",{parentName:"tr",align:null},'--log-to "/path/to/log-file.log" `')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-enqueued")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of enqueued transactions per account."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-enqueued 128"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-inbound-peers")),(0,l.kt)("td",{parentName:"tr",align:null},"The client's max number of inbound peers allowed."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-inbound-peers 32"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-outbound-peers")),(0,l.kt)("td",{parentName:"tr",align:null},"The client's max number of outbound peers allowed."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-outbound-peers 8"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-peers")),(0,l.kt)("td",{parentName:"tr",align:null},"The client's max number of peers allowed."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-peers 40 "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-slots")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum slots in the pool."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-slots 4096"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--nat ")),(0,l.kt)("td",{parentName:"tr",align:null},"The external IP address without port, as can be seen by peers."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'--nat "203.0.113.1"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--no-discover ")),(0,l.kt)("td",{parentName:"tr",align:null},"Prevent the client from discovering other peers."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--no-discover"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--num-block-confirmations ")),(0,l.kt)("td",{parentName:"tr",align:null},"Minimal number of child blocks required for the parent block to be considered final."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--num-block-confirmations 64 "))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--price-limit")),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum gas price limit to enforce for acceptance into the pool."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--price-limit 0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--prometheus"),(0,l.kt)("td",{parentName:"tr",align:null},"The address and port for the Prometheus instrumentation service. If only port is defined, it will bind to all available network interfaces."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--prometheus 0.0.0.0:9090"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--relayer")),(0,l.kt)("td",{parentName:"tr",align:null},"Start the state sync relayer service. PolyBFT only."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--restore")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the archive blockchain data to restore on initialization."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--restore /path/to/archive"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--seal")),(0,l.kt)("td",{parentName:"tr",align:null},"The flag indicating that the client should seal blocks."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--secrets-config")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the SecretsManager config file. Used for Hashicorp Vault. If omitted, the local FS secrets manager is used."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--secrets-config /path/to/secrets/config"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json")),(0,l.kt)("td",{parentName:"tr",align:null},"Get all outputs in JSON format."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--json")))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"./polygon-edge server --data-dir ./test-chain-1 --chain genesis.json --grpc-address :5001 --libp2p :30301 --jsonrpc :10001 --seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-2 --chain genesis.json --grpc-address :5002 --libp2p :30302 --jsonrpc :10002 --seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-3 --chain genesis.json --grpc-address :5003 --libp2p :30303 --jsonrpc :10003 --seal --log-level DEBUG\n\n./polygon-edge server --data-dir ./test-chain-4 --chain genesis.json --grpc-address :5004 --libp2p :30304 --jsonrpc :10004 --seal --log-level DEBUG\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Dialing output example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[ROOTCHAIN FUND]\nValidator (address) = 0x0D09C4A285fdde3D6e5aD5DE819E3478554646D3\nTransaction (hash)  = 0xb587d3fa31f8bc59ecc807145d95d76a454967e28223d0f3b82abdd6bd84c043\n\n[ROOTCHAIN FUND]\nValidator (address) = 0x30aC45469E94DE3645Eb4D8Ce102a3092ee76157\nTransaction (hash)  = 0x3e9b26da5e89aa8ca2b4935ce35ddedc1f8d9b37c56d5eb0f040787aa84a3bcb\n\n[ROOTCHAIN FUND]\nValidator (address) = 0x9E1bFa593cAcD77BfcF9a8Dda0462da251566ae0\nTransaction (hash)  = 0x1aa158ed2ba1e8ec98b1f4fd649c9a499b72c58a48b1a1dd9978ee16cc7fb741\n\n[ROOTCHAIN FUND]\nValidator (address) = 0x82e3D3e4222Cc872C5552363c86287B796312E27\nTransaction (hash)  = 0xd51e7f8b69071f88b5f7870c31c6942ed78c5c48f88594ed135f096b5f17a540\n"))))}c.isMDXComponent=!0}}]);