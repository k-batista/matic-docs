"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[82278],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),h=a,f=u["".concat(c,".").concat(h)]||u[h]||l[h]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4789:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return l}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"erc721",title:"ERC-721",sidebar_label:"ERC-721",description:"Learn about the predefined token standards on a Supernet.",keywords:["docs","Polygon","edge","supernets","erc","erc721"]},c=void 0,d={unversionedId:"supernets/design/bridge/assets/erc/erc721",id:"supernets/design/bridge/assets/erc/erc721",title:"ERC-721",description:"Learn about the predefined token standards on a Supernet.",source:"@site/docs/supernets/design/bridge/assets/erc/erc721.md",sourceDirName:"supernets/design/bridge/assets/erc",slug:"/supernets/design/bridge/assets/erc/erc721",permalink:"/matic-docs/docs/supernets/design/bridge/assets/erc/erc721",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/design/bridge/assets/erc/erc721.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"erc721",title:"ERC-721",sidebar_label:"ERC-721",description:"Learn about the predefined token standards on a Supernet.",keywords:["docs","Polygon","edge","supernets","erc","erc721"]},sidebar:"supernets",previous:{title:"ERC-20",permalink:"/matic-docs/docs/supernets/design/bridge/assets/erc/erc20"},next:{title:"ERC-1155",permalink:"/matic-docs/docs/supernets/design/bridge/assets/erc/erc1155"}},p={},l=[{value:"ChildERC721",id:"childerc721",level:2},{value:"Predicates",id:"predicates",level:2},{value:"Deposits and Withdrawals",id:"deposits-and-withdrawals",level:2}],u={toc:l};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This document presents an overview on the ERC-721 standard available in Supernets."),(0,o.kt)("p",null,"ERC-721 is a token standard that allows for the creation of unique, non-fungible tokens on a blockchain network. In the context of Supernets, ERC-721 tokens can be used to represent unique assets on the network's Supernet."),(0,o.kt)("h2",{id:"childerc721"},"ChildERC721"),(0,o.kt)("p",null,"Developers can use the ",(0,o.kt)("a",{parentName:"p",href:"/matic-docs/docs/supernets/interfaces/erc721/childerc721"},(0,o.kt)("inlineCode",{parentName:"a"},"ChildERC721"))," token standard to create ERC-721 tokens on the Supernet. To create a new ChildERC721 token, developers can use the ChildERC721 predicate contract as a template and deploy it on the Supernet. The contract requires a name and symbol to determine the unique identity of the token."),(0,o.kt)("p",null,"Once created, ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildERC721")," tokens can be minted and burned on the Supernet through the corresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC721Predicate")," contract. This ensures that the supply of tokens on the rootchain and the Supernet remains in sync. The ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC721Predicate")," contract also allows for the transfer of tokens between the two networks using the native bridge."),(0,o.kt)("h2",{id:"predicates"},"Predicates"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/matic-docs/docs/supernets/interfaces/erc721/rooterc721-predicate"},(0,o.kt)("inlineCode",{parentName:"a"},"RootERC721Predicate")),"  contract serves as the rootchain token predicate contract, while the ",(0,o.kt)("a",{parentName:"p",href:"/matic-docs/docs/supernets/interfaces/erc721/childerc721-predicate"},(0,o.kt)("inlineCode",{parentName:"a"},"ChildERC721Predicate"))," contract serves as the Supernet token predicate contract. When a user wants to deposit an ERC-721 token on the rootchain into the Supernet, they call the ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit")," function on the ",(0,o.kt)("inlineCode",{parentName:"p"},"RootERC721Predicate")," contract with the appropriate parameters, including the token ID, sender, and receiver addresses."),(0,o.kt)("p",null,"When a user deposits a token for the first time, the token mapping between the root and Supernet is created automatically. This mapping allows users to deposit and withdraw tokens between the root and Supernet."),(0,o.kt)("h2",{id:"deposits-and-withdrawals"},"Deposits and Withdrawals"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildERC721Predicate")," contract includes functions for minting and burning child tokens, which are triggered when the deposit and withdrawal functions are called. To withdraw a child token back to the rootchain, a user calls the appropriate function on the ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildERC721Predicate")," contract with the necessary parameters, including the token ID and receiver address. The ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildERC721Predicate")," contract then burns the child token and emits a withdrawal event. The ",(0,o.kt)("inlineCode",{parentName:"p"},"RootERC721Predicate")," contract listens for these events and relays them to the rootchain using the ",(0,o.kt)("inlineCode",{parentName:"p"},"L2StateSender")," contract."))}h.isMDXComponent=!0}}]);