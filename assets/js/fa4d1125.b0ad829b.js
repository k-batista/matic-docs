"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[67551],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return u}});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=o.createContext({}),c=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},m=function(t){var e=c(t.components);return o.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},p=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,l=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),p=c(n),u=a,k=p["".concat(l,".").concat(u)]||p[u]||d[u]||r;return n?o.createElement(k,s(s({ref:e},m),{},{components:n})):o.createElement(k,s({ref:e},m))}));function u(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,s=new Array(r);s[0]=p;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},46548:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return c},default:function(){return k},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return p}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),s=n(44996),i=["components"],l={id:"custom-tokens",title:"Configure Custom Tokens",description:"Configure custom tokens on Metamask.",keywords:["wiki","polygon","custom token"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},c=void 0,m={unversionedId:"develop/metamask/custom-tokens",id:"develop/metamask/custom-tokens",title:"Configure Custom Tokens",description:"Configure custom tokens on Metamask.",source:"@site/docs/develop/metamask/custom-tokens.md",sourceDirName:"develop/metamask",slug:"/develop/metamask/custom-tokens",permalink:"/matic-docs/docs/develop/metamask/custom-tokens",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/metamask/custom-tokens.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"custom-tokens",title:"Configure Custom Tokens",description:"Configure custom tokens on Metamask.",keywords:["wiki","polygon","custom token"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"develop",previous:{title:"Add Polygon Network",permalink:"/matic-docs/docs/develop/metamask/config-polygon-on-metamask"},next:{title:"Create & Import Accounts",permalink:"/matic-docs/docs/develop/metamask/multiple-accounts"}},d={},p=[{value:"Adding a custom token to your MetaMask account",id:"adding-a-custom-token-to-your-metamask-account",level:2},{value:"Tokens and Contract Adresses",id:"tokens-and-contract-adresses",level:3}],u={toc:p};function k(t){var e=t.components,n=(0,a.Z)(t,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Content disclaimer",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please view the third-party content disclaimer ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic-docs/blob/master/CONTENT_DISCLAIMER.md"},(0,r.kt)("ins",null,"here")),".")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"This page demonstrates the process of configuring/adding custom tokens to Metamask."),(0,r.kt)("p",null,"You can use the same process to add any custom tokens to any network on Metamask. You can refer to ",(0,r.kt)("a",{parentName:"p",href:"#tokens-and-contract-adresses"},"this table")," to visualize some examples of test tokens with their respective contract addresses."),(0,r.kt)("h2",{id:"adding-a-custom-token-to-your-metamask-account"},"Adding a custom token to your MetaMask account"),(0,r.kt)("p",null,'First, choose the appropriate network for the new token on your Metamask\'s home screen. Then click on "Import Tokens".'),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"300",src:(0,s.Z)("img/metamask/develop/add-test-token.png")})),(0,r.kt)("br",null),(0,r.kt)("p",null,"It will then navigate you to a new screen. On the Import Tokens screen, copy-paste an address in the Token Address field."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To illustrate this process, we are using an ",(0,r.kt)("strong",{parentName:"p"},"ERC20-TESTV4")," token on the ",(0,r.kt)("strong",{parentName:"p"},"Goerli network"),". Find other test tokens from other networks ",(0,r.kt)("a",{parentName:"p",href:"#tokens-and-contract-adresses"},(0,r.kt)("ins",null,"here")),".")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"300",src:(0,s.Z)("img/metamask/develop/token-contract-address.png")})),(0,r.kt)("p",null,"The other fields will auto-populate. Click on Add Custom Tokens and then click on Import Tokens. The ",(0,r.kt)("inlineCode",{parentName:"p"},"TEST")," token should now be displayed on your account on Metamask."),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{width:"300",src:(0,s.Z)("img/metamask/develop/added-token.png")})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Adding a test ERC1155 token to your MetaMask account")),(0,r.kt)("p",null,"While the Polygon network supports ERC1155, ",(0,r.kt)("a",{parentName:"p",href:"https://metamask.zendesk.com/hc/en-us/articles/360058488651-Does-MetaMask-support-ERC-1155-"},"Metamask does not yet support the standard"),". This update is expected in the fourth quarter of 2021."),(0,r.kt)("h3",{id:"tokens-and-contract-adresses"},"Tokens and Contract Adresses"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Token"),(0,r.kt)("th",{parentName:"tr",align:null},"Network"),(0,r.kt)("th",{parentName:"tr",align:null},"Contract Address"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ERC20-TESTV4"),(0,r.kt)("td",{parentName:"tr",align:null},"Goerli"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0x3f152B63Ec5CA5831061B2DccFb29a874C317502"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MATIC-TST"),(0,r.kt)("td",{parentName:"tr",align:null},"Mumbai"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0x2d7882beDcbfDDce29Ba99965dd3cdF7fcB10A1e"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ERC721-TESTV4"),(0,r.kt)("td",{parentName:"tr",align:null},"Goerli"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0xfA08B72137eF907dEB3F202a60EfBc610D2f224b"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ERC721-TESTV4"),(0,r.kt)("td",{parentName:"tr",align:null},"Mumbai"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0x33FC58F12A56280503b04AC7911D1EceEBcE179c"))))))}k.isMDXComponent=!0}}]);