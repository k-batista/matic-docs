"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[71857],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},67170:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var a=t(87462),r=t(63366),o=(t(67294),t(3905)),i=["components"],s={id:"query-json-rpc",title:"Query JSON RPC endpoints",description:"Query data and start the chain with a premined account.",keywords:["docs","polygon","edge","query","premine","node"]},c=void 0,l={unversionedId:"main-edge/working-with-node/query-json-rpc",id:"main-edge/working-with-node/query-json-rpc",title:"Query JSON RPC endpoints",description:"Query data and start the chain with a premined account.",source:"@site/docs/main-edge/working-with-node/query-json-rpc.md",sourceDirName:"main-edge/working-with-node",slug:"/main-edge/working-with-node/query-json-rpc",permalink:"/matic-docs/docs/main-edge/working-with-node/query-json-rpc",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/main-edge/working-with-node/query-json-rpc.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"query-json-rpc",title:"Query JSON RPC endpoints",description:"Query data and start the chain with a premined account.",keywords:["docs","polygon","edge","query","premine","node"]}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Step 1: Create a genesis file with a premined account",id:"step-1-create-a-genesis-file-with-a-premined-account",level:2},{value:"Step 2: Start the Polygon Edge in dev mode",id:"step-2-start-the-polygon-edge-in-dev-mode",level:2},{value:"Step 3: Query the account balance",id:"step-3-query-the-account-balance",level:2},{value:"Step 4: Send a transfer transaction",id:"step-4-send-a-transfer-transaction",level:2}],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The JSON-RPC layer of the Polygon Edge provides developers with the functionality of easily interacting with the blockchain,\nthrough HTTP requests."),(0,o.kt)("p",null,"This example covers using tools like ",(0,o.kt)("strong",{parentName:"p"},"curl")," to query information, as well as starting the chain with a premined account,\nand sending a transaction."),(0,o.kt)("h2",{id:"step-1-create-a-genesis-file-with-a-premined-account"},"Step 1: Create a genesis file with a premined account"),(0,o.kt)("p",null,"To generate a genesis file, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge genesis --premine 0x1010101010101010101010101010101010101010\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"premine")," flag sets the address that should be included with a starting balance in the ",(0,o.kt)("strong",{parentName:"p"},"genesis")," file.",(0,o.kt)("br",null),"\nIn this case, the address ",(0,o.kt)("inlineCode",{parentName:"p"},"0x1010101010101010101010101010101010101010")," will have a starting ",(0,o.kt)("strong",{parentName:"p"},"default balance")," of\n",(0,o.kt)("inlineCode",{parentName:"p"},"0xD3C21BCECCEDA1000000"),"(1 million native currency tokens)."),(0,o.kt)("p",null,"If we wanted to specify a balance, we can separate out the balance and address with a ",(0,o.kt)("inlineCode",{parentName:"p"},":"),", like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge genesis --premine 0x1010101010101010101010101010101010101010:0x123123\n")),(0,o.kt)("p",null,"The balance can be either a ",(0,o.kt)("inlineCode",{parentName:"p"},"hex")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"uint256")," value."),(0,o.kt)("admonition",{title:"Only premine accounts for which you have a private key!",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"If you premine accounts and do not have a private key to access them, you premined balance will not be usable")),(0,o.kt)("h2",{id:"step-2-start-the-polygon-edge-in-dev-mode"},"Step 2: Start the Polygon Edge in dev mode"),(0,o.kt)("p",null,"To start the Polygon Edge in development mode, which is explained in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/edge/get-started/cli-commands"},"CLI Commands")," section,\nrun the following: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge server --chain genesis.json --dev --log-level debug\n")),(0,o.kt)("h2",{id:"step-3-query-the-account-balance"},"Step 3: Query the account balance"),(0,o.kt)("p",null,"Now that the client is up and running in dev mode, using the genesis file generated in ",(0,o.kt)("strong",{parentName:"p"},"step 1"),", we can use a tool like\n",(0,o.kt)("strong",{parentName:"p"},"curl")," to query the account balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{"jsonrpc":"2.0","method":"eth_getBalance","params":["0x1010101010101010101010101010101010101010", "latest"],"id":1}\' localhost:8545\n')),(0,o.kt)("p",null,"The command should return the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "id":1,\n  "result":"0x100000000000000000000000000"\n}\n')),(0,o.kt)("h2",{id:"step-4-send-a-transfer-transaction"},"Step 4: Send a transfer transaction"),(0,o.kt)("p",null,"Now that we've confirmed the account we set up as premined has the correct balance, we can transfer some ether:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'var Web3 = require("web3");\n\nconst web3 = new Web3("<provider\'s websocket jsonrpc address>"); //example: ws://localhost:10002/ws\nweb3.eth.accounts\n  .signTransaction(\n    {\n      to: "<recipient address>",\n      value: web3.utils.toWei("<value in ETH>"),\n      gas: 21000,\n    },\n    "<private key from premined account>"\n  )\n  .then((signedTxData) => {\n    web3.eth\n      .sendSignedTransaction(signedTxData.rawTransaction)\n      .on("receipt", console.log);\n  });\n\n')))}m.isMDXComponent=!0}}]);