"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[5418],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return u}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),d=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(r),u=a,y=m["".concat(o,".").concat(u)]||m[u]||c[u]||s;return r?n.createElement(y,l(l({ref:t},p),{},{components:r})):n.createElement(y,l({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var d=2;d<s;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},50936:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return c}});var n=r(87462),a=r(63366),s=(r(67294),r(3905)),l=["components"],i={id:"types",title:"Types",description:"Description of HeimdallAddress, Pubkey, & HeimdallHash",keywords:["docs","matic","HeimdallAddress","polygon","Pubkey","HeimdallHash"],image:"https://matic.network/banners/matic-network-16x9.png"},o="Types",d={unversionedId:"pos/heimdall/types",id:"pos/heimdall/types",title:"Types",description:"Description of HeimdallAddress, Pubkey, & HeimdallHash",source:"@site/docs/pos/heimdall/types.md",sourceDirName:"pos/heimdall",slug:"/pos/heimdall/types",permalink:"/matic-docs/docs/pos/heimdall/types",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/heimdall/types.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"types",title:"Types",description:"Description of HeimdallAddress, Pubkey, & HeimdallHash",keywords:["docs","matic","HeimdallAddress","polygon","Pubkey","HeimdallHash"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"StdTx",permalink:"/matic-docs/docs/pos/heimdall/stdtx"},next:{title:"Heimdall Validators",permalink:"/matic-docs/docs/pos/heimdall/validators"}},p={},c=[{value:"HeimdallAddress",id:"heimdalladdress",level:2},{value:"PubKey",id:"pubkey",level:2},{value:"HeimdallHash",id:"heimdallhash",level:2}],m={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"types"},"Types"),(0,s.kt)("h2",{id:"heimdalladdress"},"HeimdallAddress"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"HeimdallAddress")," represents address on Heimdall. It uses Ethereum's common library for Address. Length of this address is 20 bytes."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// HeimdallAddress represents Heimdall address\ntype HeimdallAddress common.Address\n")),(0,s.kt)("h2",{id:"pubkey"},"PubKey"),(0,s.kt)("p",null,"It represents public key used in Heimdall, ",(0,s.kt)("inlineCode",{parentName:"p"},"ecdsa")," compatible uncompressed public key."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// PubKey pubkey\ntype PubKey [65]byte\n")),(0,s.kt)("h2",{id:"heimdallhash"},"HeimdallHash"),(0,s.kt)("p",null,"It represents hash in Heimdall. It uses Ethereum's hash for the same. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// HeimdallHash represents heimdall address\ntype HeimdallHash common.Hash\n")))}u.isMDXComponent=!0}}]);