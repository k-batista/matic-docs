"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[72675],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(n),d=r,g=u["".concat(p,".").concat(d)]||u[d]||s[d]||o;return n?a.createElement(g,i(i({ref:t},l),{},{components:n})):a.createElement(g,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},93848:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return s}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],c={id:"abi-manager",title:"ABIManager",keywords:["abi manager, api type, read, write, polygon"],description:"Matic.js's internal ABI manager."},p=void 0,m={unversionedId:"develop/ethereum-polygon/matic-js/advanced/abi-manager",id:"develop/ethereum-polygon/matic-js/advanced/abi-manager",title:"ABIManager",description:"Matic.js's internal ABI manager.",source:"@site/docs/develop/ethereum-polygon/matic-js/advanced/abi-manager.md",sourceDirName:"develop/ethereum-polygon/matic-js/advanced",slug:"/develop/ethereum-polygon/matic-js/advanced/abi-manager",permalink:"/matic-docs/docs/develop/ethereum-polygon/matic-js/advanced/abi-manager",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/ethereum-polygon/matic-js/advanced/abi-manager.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"abi-manager",title:"ABIManager",keywords:["abi manager, api type, read, write, polygon"],description:"Matic.js's internal ABI manager."},sidebar:"maticjs",previous:{title:"Advanced",permalink:"/matic-docs/docs/category/advanced-1"},next:{title:"Plugin",permalink:"/matic-docs/docs/develop/ethereum-polygon/matic-js/advanced/plugin"}},l={},s=[{value:"Change ABI",id:"change-abi",level:2}],u={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"matic.js")," internally uses ",(0,o.kt)("inlineCode",{parentName:"p"},"ABIManager")," for handling ABI management, configuration for you. All of the ABI and config are taken from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/static"},"static repo"),"."),(0,o.kt)("h2",{id:"change-abi"},"Change ABI"),(0,o.kt)("p",null,"Sometimes you are required to change the ABI, particularly when you are developing a contract. You can do so by using ",(0,o.kt)("inlineCode",{parentName:"p"},"ABIManager"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Syntax")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import { ABIManager } from '@maticnetwork/maticjs'\n\n\nconst manager = new ABIManager(<network name>,<version>);\nawait manager.init();\n\n// set abi\n\nmanager.setABI(<contract name>,<bridge type>, <abi value>);\n\n// get abi\n\nmanager.getABI(<contract name>,<bridge type>);\n")),(0,o.kt)("p",null,"The network name, contract name, bridge name etc can be taken from our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/static/tree/master/network"},"official static repo"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"import { ABIManager } from '@maticnetwork/maticjs'\n\n\nconst manager = new ABIManager('testnet','mumbai');\nawait manager.init();\n\n// set abi\n\nmanager.setABI('ERC20PredicateProxy','pos', 'abi value');\n\n// get abi\n\nmanager.getABI('ERC20PredicateProxy','pos');\n")))}d.isMDXComponent=!0}}]);