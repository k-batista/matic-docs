"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[65088],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},52354:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"overview",title:"Architecture Overview",sidebar_label:"Supernets Overview",description:"Introduction to the architecture of Supernets.",keywords:["docs","polygon","edge","architecture","modular","layer","libp2p","extensible"]},l=void 0,p={unversionedId:"supernets/design/overview",id:"supernets/design/overview",title:"Architecture Overview",description:"Introduction to the architecture of Supernets.",source:"@site/docs/supernets/design/overview.md",sourceDirName:"supernets/design",slug:"/supernets/design/overview",permalink:"/matic-docs/docs/supernets/design/overview",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/design/overview.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"overview",title:"Architecture Overview",sidebar_label:"Supernets Overview",description:"Introduction to the architecture of Supernets.",keywords:["docs","polygon","edge","architecture","modular","layer","libp2p","extensible"]},sidebar:"supernets",previous:{title:"Learn about the Supernets Product Suite",permalink:"/matic-docs/docs/category/learn-about-the-supernets-product-suite"},next:{title:"PolyBFT Consensus",permalink:"/matic-docs/docs/category/polybft-consensus"}},c={},u=[{value:"Components",id:"components",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This document provides a system design overview of Polygon Supernets.\nThe diagram below illustrates the major coomponents of Supernets."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{src:"/img/supernets/supernets-overview.excalidraw.png",alt:"Supernets architecture overview",width:"850"})),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("p",null,"The following table breaks down each of these components."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Component"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Link"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"libp2p"),(0,o.kt)("td",{parentName:"tr",align:null},"Provides the networking layer for Supernets and is designed for peer-to-peer network architectures."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-libp2p"},"libp2p overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Bridge"),(0,o.kt)("td",{parentName:"tr",align:null},"An in-built bridging mechanism enabled by PolyBFT that allows message passing between a Supernet and another Proof-of-Stake blockchain without mapping."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/bridge/overview"},"bridge overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Mempool"),(0,o.kt)("td",{parentName:"tr",align:null},"Enables multiple validators to aggregate their signatures to create a single, aggregated signature representing all validators in the pool."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-mempool"},"mempool overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Consensus"),(0,o.kt)("td",{parentName:"tr",align:null},"PolyBFT serves as the consensus mechanism of Polygon Supernets and consists of a consensus engine, IBFT 2.0, and a consensus protocol that includes the bridge, staking, and other utilities."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/category/polybft-consensus"},"PolyBFT overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Blockchain"),(0,o.kt)("td",{parentName:"tr",align:null},"Coordinates everything in the system, curates state transitions, and is responsible for state changes when a new block is added to the chain."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-blockchain"},"blockchain overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Runtime (EVM)"),(0,o.kt)("td",{parentName:"tr",align:null},"Uses the EVM as the runtime environment for executing smart contracts."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/runtime/supernets-runtime"},"runtime overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"TxPool"),(0,o.kt)("td",{parentName:"tr",align:null},"Represents the transaction pool, closely linked with other modules in the system."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-txpool"},"txpool overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"JSON-RPC"),(0,o.kt)("td",{parentName:"tr",align:null},"Facilitates interaction between dApp developers and the blockchain, allowing developers to issue JSON-RPC requests to a Supernet node and receive responses."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-json-rpc"},"JSON-RPC overview"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"gRPC"),(0,o.kt)("td",{parentName:"tr",align:null},"Essential for operator interactions, allowing node operators to interact with the client easily and providing a seamless user experience."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/matic-docs/docs/supernets/design/supernets-grpc"},"gRPC overview"))))))}m.isMDXComponent=!0}}]);