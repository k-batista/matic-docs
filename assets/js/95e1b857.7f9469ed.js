"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[99226],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return h}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(a),h=o,k=m["".concat(s,".").concat(h)]||m[h]||c[h]||r;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},50502:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var n=a(87462),o=a(63366),r=(a(67294),a(3905)),i=["components"],l={id:"glossary",title:"Glossary",description:"Key Polygon terms",keywords:["docs","matic","polygon","glossary","jargons"],slug:"glossary",image:"https://wiki.polygon.technology/img/polygon-logo.png"},s=void 0,d={unversionedId:"maintain/glossary",id:"maintain/glossary",title:"Glossary",description:"Key Polygon terms",source:"@site/docs/maintain/glossary.md",sourceDirName:"maintain",slug:"/maintain/glossary",permalink:"/matic-docs/docs/maintain/glossary",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/maintain/glossary.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"glossary",title:"Glossary",description:"Key Polygon terms",keywords:["docs","matic","polygon","glossary","jargons"],slug:"glossary",image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"maintain",previous:{title:"Reporting Issues",permalink:"/matic-docs/docs/maintain/reporting-issues"}},p={},c=[{value:"Block Producer",id:"block-producer",level:2},{value:"Bor",id:"bor",level:2},{value:"Checkpoint Transaction",id:"checkpoint-transaction",level:2},{value:"Commission",id:"commission",level:2},{value:"Delegator",id:"delegator",level:2},{value:"Full Node",id:"full-node",level:2},{value:"Heimdall",id:"heimdall",level:2},{value:"Owner Address",id:"owner-address",level:2},{value:"Proposer",id:"proposer",level:2},{value:"Sentry",id:"sentry",level:2},{value:"Span",id:"span",level:2},{value:"Staking",id:"staking",level:2},{value:"Signer address",id:"signer-address",level:2},{value:"Validator",id:"validator",level:2}],m={toc:c};function h(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"block-producer"},"Block Producer"),(0,r.kt)("p",null,"A block producer is an active ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validator")," selected to act as block producer for a ",(0,r.kt)("a",{parentName:"p",href:"#span"},"span"),"."),(0,r.kt)("p",null,"A block producer is responsible for creating blocks and broadcasting the created blocks to the network."),(0,r.kt)("h2",{id:"bor"},"Bor"),(0,r.kt)("p",null,"A Bor node is a node producing blocks on the Polygon Network."),(0,r.kt)("p",null,"Bor is based on ",(0,r.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/"},"Go Ethereum"),"."),(0,r.kt)("h2",{id:"checkpoint-transaction"},"Checkpoint Transaction"),(0,r.kt)("p",null,"A checkpoint transaction is a transaction containing the Merkle root of blocks of the ",(0,r.kt)("a",{parentName:"p",href:"#bor"},"Bor")," layer between the checkpoint intervals."),(0,r.kt)("p",null,"The transaction is committed to the Polygon staking contracts on the Ethereum mainnet by a ",(0,r.kt)("a",{parentName:"p",href:"#heimdall"},"Heimdall")," node."),(0,r.kt)("p",null,"See also:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/pos/heimdall/checkpoint"},"Heimdall architecture: Checkpoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/maintain/validator/core-components/checkpoint-mechanism"},"Checkpoint Mechanism"))),(0,r.kt)("h2",{id:"commission"},"Commission"),(0,r.kt)("p",null,"A commission is the percentage of the rewards taken by ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validators")," from the ",(0,r.kt)("a",{parentName:"p",href:"#delegator"},"delegators")," who stake with the validators."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/validate/validator-commission-operations"},"Validator Commission Operations"),"."),(0,r.kt)("h2",{id:"delegator"},"Delegator"),(0,r.kt)("p",null,"The delegator role stakes the MATIC tokens to secure the Polygon Network with existing ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validators")," without running the nodes themselves."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/polygon-basics/who-is-delegator"},"Who Is a Delegator"),"."),(0,r.kt)("h2",{id:"full-node"},"Full Node"),(0,r.kt)("p",null,"A full node is a fully synced ",(0,r.kt)("a",{parentName:"p",href:"#sentry"},"sentry node")," running both ",(0,r.kt)("a",{parentName:"p",href:"#heimdall"},"Heimdall")," and ",(0,r.kt)("a",{parentName:"p",href:"#bor"},"Bor"),"."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/docs/operate/full-node-deployment"},"Full Node Deployment"),"."),(0,r.kt)("h2",{id:"heimdall"},"Heimdall"),(0,r.kt)("p",null,"A Heimdall node is a node running in parallel to the Ethereum mainnet, monitoring the set of contracts deployed on the Ethereum mainnet, and committing the Polygon Network ",(0,r.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoints")," to the Ethereum mainnet."),(0,r.kt)("p",null,"Heimdall is based on ",(0,r.kt)("a",{parentName:"p",href:"https://tendermint.com/"},"Tendermint"),"."),(0,r.kt)("h2",{id:"owner-address"},"Owner Address"),(0,r.kt)("p",null,"An owner address is the address used to stake, restake, change the signer address, withdraw rewards and manage delegation related parameters on the Ethereum mainnet."),(0,r.kt)("p",null,"While the ",(0,r.kt)("a",{parentName:"p",href:"#signer-address"},"signer key")," is kept on the node and is considered a ",(0,r.kt)("strong",{parentName:"p"},"hot")," wallet, the owner key must be kept very secure, used infrequently, and is considered a ",(0,r.kt)("strong",{parentName:"p"},"cold")," wallet."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validator/core-components/key-management"},"Key Management"),"."),(0,r.kt)("h2",{id:"proposer"},"Proposer"),(0,r.kt)("p",null,"A proposer is the ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validator")," selected by the algorithm to propose a new block."),(0,r.kt)("p",null,"A proposer is also responsible for collecting all signatures for a particular ",(0,r.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoint")," and committing the checkpoint to the Ethereum mainnet."),(0,r.kt)("h2",{id:"sentry"},"Sentry"),(0,r.kt)("p",null,"A sentry node is a node running both the ",(0,r.kt)("a",{parentName:"p",href:"#heimdall"},"Heimdall")," node and the ",(0,r.kt)("a",{parentName:"p",href:"#bor"},"Bor")," node to download the data from other nodes on the network and to propagate the ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validator")," data on the network."),(0,r.kt)("p",null,"A sentry node is open to all other sentry nodes on the network."),(0,r.kt)("h2",{id:"span"},"Span"),(0,r.kt)("p",null,"A logically defined set of blocks for which a set of validators is chosen from all the available ",(0,r.kt)("a",{parentName:"p",href:"#validator"},"validators"),"."),(0,r.kt)("p",null,"The selection of each span is decided by at least 2/3 of the validators in terms of the staking power."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/pos/bor/consensus#span"},"Bor Consensus: Span"),"."),(0,r.kt)("h2",{id:"staking"},"Staking"),(0,r.kt)("p",null,"Staking is the process of locking up tokens into a deposit to earn the right to validate and produce blocks on a blockchain. Typically staking is done in the native token for the network \u2014 for the MATIC token is locked up by validators / stakers in the Polygon Network. Other examples include ETH in Ethereum (post-merge), ATOM in Cosmos, etc."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/polygon-basics/what-is-proof-of-stake"},"What Is Proof of Stake"),"."),(0,r.kt)("h2",{id:"signer-address"},"Signer address"),(0,r.kt)("p",null,"A signer address is the address of an Ethereum account of the ",(0,r.kt)("a",{parentName:"p",href:"#heimdall"},"Heimdall")," validator node. The signer address signs and submits the ",(0,r.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoint transactions"),"."),(0,r.kt)("p",null,"While the signer key is kept on the node and is considered a ",(0,r.kt)("strong",{parentName:"p"},"hot")," wallet, the ",(0,r.kt)("a",{parentName:"p",href:"#owner-address"},"owner key")," must be kept very secure, used infrequently, and is considered a ",(0,r.kt)("strong",{parentName:"p"},"cold")," wallet."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/validator/core-components/key-management"},"Key Management"),"."),(0,r.kt)("h2",{id:"validator"},"Validator"),(0,r.kt)("p",null,"Validators ",(0,r.kt)("a",{parentName:"p",href:"/docs/maintain/validate/validator-staking-operations"},"stake their MATIC tokens")," via staking contracts deployed on the Ethereum mainnet and are running both the ",(0,r.kt)("a",{parentName:"p",href:"#heimdall"},"Heimdall")," node and the ",(0,r.kt)("a",{parentName:"p",href:"#bor"},"Bor")," node to commit the network checkpoints to the Ethereum mainnet and to produce blocks on the network."),(0,r.kt)("p",null,"A validator node is only open to its ",(0,r.kt)("a",{parentName:"p",href:"#sentry"},"sentry")," node and closed to the rest of the network."),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/matic-docs/docs/maintain/polygon-basics/who-is-validator"},"Who Is a Validator"),"."))}h.isMDXComponent=!0}}]);