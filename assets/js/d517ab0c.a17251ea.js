"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[328],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(n),h=o,k=u["".concat(l,".").concat(h)]||u[h]||c[h]||r;return n?a.createElement(k,s(s({ref:t},d),{},{components:n})):a.createElement(k,s({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},39580:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),s=["components"],i={id:"pos-stake-unstake",title:"Set up and use Proof of Stake (PoS)",description:"Stake, unstake and other staking-related instructions.",keywords:["docs","polygon","edge","stake","unstake","validator","epoch"]},l=void 0,p={unversionedId:"edge/consensus/pos-stake-unstake",id:"edge/consensus/pos-stake-unstake",title:"Set up and use Proof of Stake (PoS)",description:"Stake, unstake and other staking-related instructions.",source:"@site/docs/edge/consensus/pos-stake-unstake.md",sourceDirName:"edge/consensus",slug:"/edge/consensus/pos-stake-unstake",permalink:"/matic-docs/docs/edge/consensus/pos-stake-unstake",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/edge/consensus/pos-stake-unstake.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"pos-stake-unstake",title:"Set up and use Proof of Stake (PoS)",description:"Stake, unstake and other staking-related instructions.",keywords:["docs","polygon","edge","stake","unstake","validator","epoch"]},sidebar:"edge",previous:{title:"Proof of Stake",permalink:"/matic-docs/docs/edge/consensus/pos-concepts"},next:{title:"Migration from PoA to PoS",permalink:"/matic-docs/docs/edge/consensus/migration-to-pos"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"Staking Smart Contract",id:"staking-smart-contract",level:2},{value:"Setting up an N node cluster",id:"setting-up-an-n-node-cluster",level:2},{value:"Setting the length of an epoch",id:"setting-the-length-of-an-epoch",level:2},{value:"Using the Staking Smart Contract scripts",id:"using-the-staking-smart-contract-scripts",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setting up the provided helper scripts",id:"setting-up-the-provided-helper-scripts",level:3},{value:"Staking funds",id:"staking-funds",level:3},{value:"Unstaking funds",id:"unstaking-funds",level:3},{value:"Fetching the list of stakers",id:"fetching-the-list-of-stakers",level:3}],u={toc:c};function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This guide goes into detail on how to set up a Proof of Stake network with the Polygon Edge, how to stake funds for nodes\nto become validators and how to unstake funds."),(0,r.kt)("p",null,"It is ",(0,r.kt)("strong",{parentName:"p"},"highly encouraged")," to read and go through\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/get-started/set-up-ibft-locally"},"Local Setup"),"\n/ ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/get-started/set-up-ibft-on-the-cloud"},"Cloud Setup")," sections, before going along\nwith this PoS guide. These sections outline the steps needed to start a Proof of Authority (PoA) cluster with the\nPolygon Edge."),(0,r.kt)("p",null,"Currently, there is no limit to the number of validators that can stake funds on the Staking Smart Contract."),(0,r.kt)("h2",{id:"staking-smart-contract"},"Staking Smart Contract"),(0,r.kt)("p",null,"The repo for the Staking Smart Contract is located ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xPolygon/staking-contracts"},"here"),"."),(0,r.kt)("p",null,"It holds the necessary testing scripts, ABI files and most importantly the Staking Smart Contract itself."),(0,r.kt)("h2",{id:"setting-up-an-n-node-cluster"},"Setting up an N node cluster"),(0,r.kt)("p",null,"Setting up a network with the Polygon Edge is covered in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/get-started/set-up-ibft-locally"},"Local Setup"),"\n/ ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/get-started/set-up-ibft-on-the-cloud"},"Cloud Setup")," sections."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"only difference")," between setting up a PoS and PoA cluster is in the genesis generation part."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"When generating the genesis file for a PoS cluster, an additional flag is needed ",(0,r.kt)("inlineCode",{parentName:"strong"},"--pos")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge genesis --pos ...\n")),(0,r.kt)("h2",{id:"setting-the-length-of-an-epoch"},"Setting the length of an epoch"),(0,r.kt)("p",null,"Epochs are covered in detail in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/consensus/pos-concepts#epoch-blocks"},"Epoch Blocks")," section."),(0,r.kt)("p",null,"To set the size of an epoch for a cluster (in blocks), when generating the genesis file, an additional flag is\nspecified ",(0,r.kt)("inlineCode",{parentName:"p"},"--epoch-size"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"polygon-edge genesis --epoch-size 50\n")),(0,r.kt)("p",null,"This value specified in the genesis file that the epoch size should be ",(0,r.kt)("inlineCode",{parentName:"p"},"50")," blocks."),(0,r.kt)("p",null,"The default value for the size of an epoch (in blocks) is ",(0,r.kt)("inlineCode",{parentName:"p"},"100000"),"."),(0,r.kt)("admonition",{title:"Lowering the epoch length ",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"As outlined in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/consensus/pos-concepts#epoch-blocks"},"Epoch Blocks")," section,\nepoch blocks are used to update the validator sets for nodes."),(0,r.kt)("p",{parentName:"admonition"},"The default epoch length in blocks (",(0,r.kt)("inlineCode",{parentName:"p"},"100000"),") may be a long time to way for validator set updates. Considering that new\nblocks are added ~2s, it would take ~55.5h for the validator set to possibly change."),(0,r.kt)("p",{parentName:"admonition"},"Setting a lower value for the epoch length ensures that the validator set is updated more frequently.")),(0,r.kt)("h2",{id:"using-the-staking-smart-contract-scripts"},"Using the Staking Smart Contract scripts"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"The Staking Smart Contract repo is a Hardhat project, which requires NPM."),(0,r.kt)("p",null,"To initialize it correctly, in the main directory run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,r.kt)("h3",{id:"setting-up-the-provided-helper-scripts"},"Setting up the provided helper scripts"),(0,r.kt)("p",null,"Scripts for interacting with the deployed Staking Smart Contract are located on\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/0xPolygon/staking-contracts"},"Staking Smart Contract repo"),"."),(0,r.kt)("p",null,"Create an ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file with the following parameters in the Smart Contracts repo location:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"JSONRPC_URL=http://localhost:10002\nPRIVATE_KEYS=0x0454f3ec51e7d6971fc345998bb2ba483a8d9d30d46ad890434e6f88ecb97544\nSTAKING_CONTRACT_ADDRESS=0x0000000000000000000000000000000000001001\nBLS_PUBLIC_KEY=0xa..\n")),(0,r.kt)("p",null,"Where the parameters are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"JSONRPC_URL")," - the JSON-RPC endpoint for the running node"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PRIVATE_KEYS")," - private keys of the staker address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"STAKING_CONTRACT_ADDRESS")," - the address of the staking smart contract (\ndefault ",(0,r.kt)("inlineCode",{parentName:"li"},"0x0000000000000000000000000000000000001001"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"BLS_PUBLIC_KEY")," - BLS public key of the staker. Only needed if the network is running with BLS")),(0,r.kt)("h3",{id:"staking-funds"},"Staking funds"),(0,r.kt)("admonition",{title:"Staking address ",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The Staking Smart Contract is pre-deployed at\naddress ",(0,r.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000001001"),"."),(0,r.kt)("p",{parentName:"admonition"},"Any kind of interaction with the staking mechanism is done through the Staking Smart Contract at the specified address."),(0,r.kt)("p",{parentName:"admonition"},"To learn more about the Staking Smart Contract, please visit\nthe ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/edge/consensus/pos-concepts#contract-pre-deployment"},"Staking Smart Contract")),"\nsection.")),(0,r.kt)("p",null,"In order to become part of the validator set, an address needs to stake a certain amount of funds above a threshold."),(0,r.kt)("p",null,"Currently, the default threshold for becoming part of the validator set is ",(0,r.kt)("inlineCode",{parentName:"p"},"1 ETH"),"."),(0,r.kt)("p",null,"Staking can be initiated by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"stake")," method of the Staking Smart Contract, and specifying a value ",(0,r.kt)("inlineCode",{parentName:"p"},">= 1 ETH"),"."),(0,r.kt)("p",null,"After the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file mentioned in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/consensus/pos-stake-unstake#setting-up-the-provided-helper-scripts"},"previous section")," has been set up, and a\nchain has been started in PoS mode, staking can be done with the following command in the Staking Smart Contract repo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run stake\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"stake")," Hardhat script stakes a default amount of ",(0,r.kt)("inlineCode",{parentName:"p"},"1 ETH"),", which can be changed by modifying the ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts/stake.ts"),"\nfile."),(0,r.kt)("p",null,"If the funds being staked are ",(0,r.kt)("inlineCode",{parentName:"p"},">= 1 ETH"),", the validator set on the Staking Smart Contract is updated, and the address\nwill be part of the validator set starting from the next epoch."),(0,r.kt)("admonition",{title:"Registering BLS keys",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If the network is running in BLS mode, in order for nodes to become validators, they need to register their BLS public keys after staking"),(0,r.kt)("p",{parentName:"admonition"},"This can be done with the following command:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run register-blskey\n"))),(0,r.kt)("h3",{id:"unstaking-funds"},"Unstaking funds"),(0,r.kt)("p",null,"Addresses that have a stake can ",(0,r.kt)("strong",{parentName:"p"},"only unstake all of their funds")," at once."),(0,r.kt)("p",null,"After the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file mentioned in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/consensus/pos-stake-unstake#setting-up-the-provided-helper-scripts"},"previous section"),"\nhas been set up, and a chain has been started in PoS mode, unstaking can be done with the following command in the\nStaking Smart Contract repo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run unstake\n")),(0,r.kt)("h3",{id:"fetching-the-list-of-stakers"},"Fetching the list of stakers"),(0,r.kt)("p",null,"All addresses that stake funds are saved to the Staking Smart Contract."),(0,r.kt)("p",null,"After the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file mentioned in\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/edge/consensus/pos-stake-unstake#setting-up-the-provided-helper-scripts"},"previous section"),"\nhas been set up, and a chain has been started in PoS mode, fetching the list of validators can be done with the\nfollowing command in the Staking Smart Contract repo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run info\n")))}h.isMDXComponent=!0}}]);