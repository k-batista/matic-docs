"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[52041],{3905:function(t,e,o){o.d(e,{Zo:function(){return c},kt:function(){return f}});var n=o(67294);function r(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function i(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function l(t,e){if(null==t)return{};var o,n,r=function(t,e){if(null==t)return{};var o,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||(r[o]=t[o]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}var d=n.createContext({}),s=function(t){var e=n.useContext(d),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},c=function(t){var e=s(t.components);return n.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var o=t.components,r=t.mdxType,i=t.originalType,d=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=s(o),f=r,m=u["".concat(d,".").concat(f)]||u[f]||p[f]||i;return o?n.createElement(m,a(a({ref:e},c),{},{components:o})):n.createElement(m,a({ref:e},c))}));function f(t,e){var o=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=o.length,a=new Array(i);a[0]=u;var l={};for(var d in e)hasOwnProperty.call(e,d)&&(l[d]=e[d]);l.originalType=t,l.mdxType="string"==typeof t?t:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},23535:function(t,e,o){o.r(e),o.d(e,{assets:function(){return c},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var n=o(87462),r=o(63366),i=(o(67294),o(3905)),a=["components"],l={id:"port-config",title:"Port Configuration Details for Nodes",sidebar:"Port Configuration",description:"How to configure ports for Sentry and validator nodes",keywords:["wiki","polygon","matic","sentry","validator","port"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},d=void 0,s={unversionedId:"maintain/validate/kb/additional-info/port-config",id:"maintain/validate/kb/additional-info/port-config",title:"Port Configuration Details for Nodes",description:"How to configure ports for Sentry and validator nodes",source:"@site/docs/maintain/validate/kb/additional-info/port.config.md",sourceDirName:"maintain/validate/kb/additional-info",slug:"/maintain/validate/kb/additional-info/port-config",permalink:"/matic-docs/docs/maintain/validate/kb/additional-info/port-config",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/maintain/validate/kb/additional-info/port.config.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"port-config",title:"Port Configuration Details for Nodes",sidebar:"Port Configuration",description:"How to configure ports for Sentry and validator nodes",keywords:["wiki","polygon","matic","sentry","validator","port"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"maintain",previous:{title:"Additional Information",permalink:"/matic-docs/docs/category/additional-information"},next:{title:"Technical Prerequisites",permalink:"/matic-docs/docs/maintain/validate/technical-prerequisites"}},c={},p=[{value:"For Sentry nodes",id:"for-sentry-nodes",level:2},{value:"For Validator nodes",id:"for-validator-nodes",level:2}],u={toc:p};function f(t){var e=t.components,o=(0,r.Z)(t,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here are a few instructions on how to configure ports for Sentry and Validator nodes."),(0,i.kt)("h2",{id:"for-sentry-nodes"},"For Sentry nodes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 22"),": Opening this to the public is not a good idea as the default SSH port 22 is prone to attacks. It is better to secure it by allowing it only in a closed network (VPN)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 30303"),": To be opened to the public for Bor p2p discovery."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 26656"),": To be opened to the public for Heimdall/Tendermint p2p discovery."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 26660"),": Prometheus port for Tendermint/Heimdall. Not required to be opened to the public. Only allow for the monitoring systems (Prometheus/Datadog)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 7071"),": Metric port for Bor. Only needs to be opened for the Monitoring system."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Ports 8545, 8546, 1317"),": Can be opened for Bor HTTP RPC, Bor WS RPC, and Heimdall API respectively; but only if really necessary.")),(0,i.kt)("h2",{id:"for-validator-nodes"},"For Validator nodes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 22"),": Opening this to the public is not a good idea as the default SSH port 22 is prone to attacks. It is better to secure it by allowing it only in a closed network (VPN)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 30303"),": To be opened to only Sentry to which the validator is connected for Bor p2p discovery."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 26656"),": To be opened to only Sentry to which the validator is connected for Heimdall/Tendermint p2p discovery."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 26660"),": Prometheus port for Tendermint/Heimdall. Not required to be opened to the public. Only allow for the monitoring systems (Prometheus/Datadog)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port 7071"),": Metric port for Bor. Only needs to be opened for the monitoring system.")))}f.isMDXComponent=!0}}]);