"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[29374],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=r.createContext({}),d=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},l=function(t){var e=d(t.components);return r.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=d(n),m=a,h=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(h,c(c({ref:e},l),{},{components:n})):r.createElement(h,c({ref:e},l))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,c=new Array(o);c[0]=u;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:a,c[1]=s;for(var d=2;d<o;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},69098:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),c=["components"],s={id:"important-contracts",title:"Important contracts",description:"State Syncer, Deposit manager, Childchain and ChildERC20/721",keywords:["docs","matic","polygon","Important contracts"],image:"https://matic.network/banners/matic-network-16x9.png"},i="Important Contracts",d={unversionedId:"pos/contracts/plasma_contracts/important-contracts",id:"pos/contracts/plasma_contracts/important-contracts",title:"Important contracts",description:"State Syncer, Deposit manager, Childchain and ChildERC20/721",source:"@site/docs/pos/contracts/plasma_contracts/important-contracts.md",sourceDirName:"pos/contracts/plasma_contracts",slug:"/pos/contracts/plasma_contracts/important-contracts",permalink:"/matic-docs/docs/pos/contracts/plasma_contracts/important-contracts",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/contracts/plasma_contracts/important-contracts.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"important-contracts",title:"Important contracts",description:"State Syncer, Deposit manager, Childchain and ChildERC20/721",keywords:["docs","matic","polygon","Important contracts"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"Predicates in Polygon Plasma",permalink:"/matic-docs/docs/pos/contracts/plasma_contracts/predicates"},next:{title:"State Sync",permalink:"/matic-docs/docs/category/state-sync"}},l={},p=[{value:"State Syncer",id:"state-syncer",level:2},{value:"Deposit Manager",id:"deposit-manager",level:2},{value:"ChildChain (Bor)",id:"childchain-bor",level:2},{value:"ChildERC20/721",id:"childerc20721",level:2}],u={toc:p};function m(t){var e=t.components,n=(0,a.Z)(t,c);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"important-contracts"},"Important Contracts"),(0,o.kt)("h2",{id:"state-syncer"},"State Syncer"),(0,o.kt)("p",null,"This contract is used to relay state changes from Ethereum mainchain to Bor. Heimdall listens to ",(0,o.kt)("inlineCode",{parentName:"p"},"StateSynced")," events on the ",(0,o.kt)("inlineCode",{parentName:"p"},"StateSender")," contract and relays them to Bor using a system call."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"contract StateSender {\n    function syncState(address receiver, bytes calldata data)\n    external\n    {\n        counter = counter.add(1);\n        emit StateSynced(counter, receiver, data);\n    }\n}\n")),(0,o.kt)("h2",{id:"deposit-manager"},"Deposit Manager"),(0,o.kt)("p",null,"For depositing assets from mainchain to Bor. This contract acts as an escrow contract where the assets are held until they are withdrawn (via the withdraw manager and predicates)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function depositERC20ForUser(address _token, address _user, uint256 _amount)\n        public\n{\n    require(\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount),\n        "TOKEN_TRANSFER_FAILED"\n    );\n    _createDepositBlock(_user, _token, _amount);\n}\n\nfunction _createDepositBlock(\n    address _user,\n    address _token,\n    uint256 _amountOrToken,\n    uint256 _depositId\n) internal {\n    ...\n    stateSender.syncState(\n        childChain,\n        abi.encode(_user, _token, _amountOrToken, _depositId /* sequential ID */)\n    );\n        ...\n}\n')),(0,o.kt)("h2",{id:"childchain-bor"},"ChildChain (Bor)"),(0,o.kt)("p",null,"These deposits from above are minted to ERC20/721 token contracts on the bor. This happens via the ",(0,o.kt)("a",{parentName:"p",href:"https://www.notion.so/maticnetwork/Bor-Overview-c8bdb110cd4d4090a7e1589ac1006bab#aa94e6a9373943068b93d2c0e7f3d2e6"},"state receiver contract")," that calls ",(0,o.kt)("inlineCode",{parentName:"p"},"onStateReceive")," method in ",(0,o.kt)("inlineCode",{parentName:"p"},"ChildChain"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"contract ChildChain {\n    ...\n    function onStateReceive(\n      uint256, /* id */\n      bytes calldata data\n    ) external onlyStateSyncer {\n      (address user, address rootToken, uint256 amountOrTokenId, uint256 depositId)\n            = abi.decode(data, (address, address, uint256, uint256));\n      depositTokens(rootToken, user, amountOrTokenId, depositId);\n    }\n\n    function depositTokens(\n      address rootToken,\n      address user,\n      uint256 amountOrTokenId,\n      uint256 depositId)\n    {\n        ...\n        if (isERC721[rootToken]) {\n        obj = ChildERC721(childToken);\n    } else {\n        obj = ChildERC20(childToken);\n    }\n    obj.deposit(user, amountOrTokenId); \n    }\n}\n")),(0,o.kt)("h2",{id:"childerc20721"},"ChildERC20/721"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"contract ChildERC20 is ERC20 {\n    function deposit(address user, uint256 amount) public onlyOwner {\n      ...\n    _mint(user, amount);\n        ...\n  }\n\n    function withdraw(uint256 amount) public payable {\n    ...\n    _burn(user, amount);\n        ...\n    }\n}\n")))}m.isMDXComponent=!0}}]);