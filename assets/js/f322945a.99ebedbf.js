"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[11036],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?o.createElement(f,i(i({ref:t},p),{},{components:r})):o.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},49528:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var o=r(87462),n=r(63366),a=(r(67294),r(3905)),i=["components"],c={id:"razor",title:"Razor",sidebar_label:"Razor",description:"Razor Network is a decentralized oracle providing data to the smart contracts using a network of stakers",keywords:["wiki","polygon","razor","oracle"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},s=void 0,l={unversionedId:"develop/oracles/razor",id:"develop/oracles/razor",title:"Razor",description:"Razor Network is a decentralized oracle providing data to the smart contracts using a network of stakers",source:"@site/docs/develop/oracles/razor.md",sourceDirName:"develop/oracles",slug:"/develop/oracles/razor",permalink:"/matic-docs/docs/develop/oracles/razor",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/oracles/razor.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686625626,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"razor",title:"Razor",sidebar_label:"Razor",description:"Razor Network is a decentralized oracle providing data to the smart contracts using a network of stakers",keywords:["wiki","polygon","razor","oracle"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"develop",previous:{title:"UMA",permalink:"/matic-docs/docs/develop/oracles/optimisticoracle"},next:{title:"Tellor",permalink:"/matic-docs/docs/develop/oracles/tellor"}},p={},d=[{value:"Usage",id:"usage",level:2}],u={toc:d};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Content disclaimer",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Please view the third-party content disclaimer ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic-docs/blob/master/CONTENT_DISCLAIMER.md"},(0,a.kt)("ins",null,"here")),".")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Razor Network")," is a decentralized oracle providing data to the smart contracts using a network of stakers. The network consists of validators who lock in their tokens as a ",(0,a.kt)("strong",{parentName:"p"},"Stake")," and provide data to the network. The honest validators are rewarded and those who report incoherently are penalized."),(0,a.kt)("p",null,"The core of Razor Network is a set of smart contracts that can run on any Ethereum-compatible blockchain. Razor relies on the underlying blockchain for providing certain properties such as censorship resistance, security from network partition attacks, etc."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"This oracle network is currently running on the Polygon Mumbai testnet. To get started with connecting to the data feed, check out this ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://docs.razor.network/"},"tutorial")),"."),(0,a.kt)("p",null,"The Razor Network can be explored using ",(0,a.kt)("a",{parentName:"p",href:"https://razorscan.io/"},"Razorscan"),"."))}m.isMDXComponent=!0}}]);