"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[83205],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},60154:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],s={id:"sealer",title:"Sealer",description:"Explanation for the sealer module of Polygon Edge.",keywords:["docs","polygon","edge","architecture","module","sealer","sealing"]},l=void 0,c={unversionedId:"main-edge/architecture/modules/sealer",id:"main-edge/architecture/modules/sealer",title:"Sealer",description:"Explanation for the sealer module of Polygon Edge.",source:"@site/docs/main-edge/architecture/modules/sealer.md",sourceDirName:"main-edge/architecture/modules",slug:"/main-edge/architecture/modules/sealer",permalink:"/matic-docs/docs/main-edge/architecture/modules/sealer",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/main-edge/architecture/modules/sealer.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"sealer",title:"Sealer",description:"Explanation for the sealer module of Polygon Edge.",keywords:["docs","polygon","edge","architecture","module","sealer","sealing"]}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Run Method",id:"run-method",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"Sealer")," is an entity that gathers the transactions, and creates a new block.",(0,a.kt)("br",null),"\nThen, that block is sent to the ",(0,a.kt)("strong",{parentName:"p"},"Consensus")," module to seal it."),(0,a.kt)("p",null,"The final sealing logic is located within the ",(0,a.kt)("strong",{parentName:"p"},"Consensus")," module."),(0,a.kt)("h2",{id:"run-method"},"Run Method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="sealer/sealer.go"',title:'"sealer/sealer.go"'},"func (s *Sealer) run(ctx context.Context) {\n    sub := s.blockchain.SubscribeEvents()\n    eventCh := sub.GetEventCh()\n\n    for {\n        if s.config.DevMode {\n            // In dev-mode we wait for new transactions to seal blocks\n            select {\n            case <-s.wakeCh:\n            case <-ctx.Done():\n                return\n            }\n        }\n\n        // start sealing\n        subCtx, cancel := context.WithCancel(ctx)\n        done := s.sealAsync(subCtx)\n\n        // wait for the sealing to be done\n        select {\n        case <-done:\n            // the sealing process has finished\n        case <-ctx.Done():\n            // the sealing routine has been canceled\n        case <-eventCh:\n            // there is a new head, reset sealer\n        }\n\n        // cancel the sealing process context\n        cancel()\n\n        if ctx.Err() != nil {\n            return\n        }\n    }\n}\n")),(0,a.kt)("admonition",{title:"Work in progress",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("strong",{parentName:"p"},"Sealer")," and the ",(0,a.kt)("strong",{parentName:"p"},"Consensus")," modules will be combined into a single entity in the near future."),(0,a.kt)("p",{parentName:"admonition"},"The new module will incorporate modular logic for different kinds of consensus mechanisms, which require different sealing implementations:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"PoS")," (Proof of Stake)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"PoA")," (Proof of Authority)")),(0,a.kt)("p",{parentName:"admonition"},"Currently, the ",(0,a.kt)("strong",{parentName:"p"},"Sealer")," and the ",(0,a.kt)("strong",{parentName:"p"},"Consensus")," modules work with PoW (Proof of Work).")))}m.isMDXComponent=!0}}]);