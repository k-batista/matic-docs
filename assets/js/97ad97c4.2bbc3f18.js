"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[49038],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=d(n),h=a,g=f["".concat(c,".").concat(h)]||f[h]||l[h]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},29593:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return l}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={id:"network-detail",title:"How to read Network Details?",description:"How to understand the JSON response to Network Details.",keywords:["docs","matic","polygon","network details","how to read"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},c="Reading Network Details",d={unversionedId:"integrate/network-detail",id:"integrate/network-detail",title:"How to read Network Details?",description:"How to understand the JSON response to Network Details.",source:"@site/docs/integrate/network-detail.md",sourceDirName:"integrate",slug:"/integrate/network-detail",permalink:"/matic-docs/docs/integrate/network-detail",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/integrate/network-detail.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"network-detail",title:"How to read Network Details?",description:"How to understand the JSON response to Network Details.",keywords:["docs","matic","polygon","network details","how to read"],image:"https://wiki.polygon.technology/img/polygon-logo.png"},sidebar:"integrate",previous:{title:"Network Details",permalink:"/matic-docs/docs/category/network-details"},next:{title:"Advanced",permalink:"/matic-docs/docs/category/advanced"}},p={},l=[{value:"Example",id:"example",level:2}],f={toc:l};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reading-network-details"},"Reading Network Details"),(0,o.kt)("p",null,"You can have the network details by visting the below shared support links."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'Network config: <static.matic.network/network/"network_name"/"version"/index.json>')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"For TestnetV3: ",(0,o.kt)("a",{parentName:"p",href:"https://static.matic.network/network/testnet/v3/index.json"},"https://static.matic.network/network/testnet/v3/index.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "Main": {\n    "NetworkName": "Ropsten testnet",                                           // Network Name\n    "ChainId": 3,                                                               // ChainId\n    "RPC": "https://ropsten.infura.io/v3/70645f042c3a409599c60f96f6dd9fbc",     // This is the Ropsten testnet RPC\n    "SyncerAPI": "https://testnetv3-syncer.api.matic.network/api/v1",           // Backend service which syncs the Matic sidechain state to a MySQL database which we use for faster querying. This comes in handy especially for constructing withdrawal proofs while exiting assets from Plasma.\n    "WatcherAPI": "https://testnetv3-watcher.api.matic.network/api/v1",         // Backend service which syncs the Matic Plasma contract events on Ethereum mainchain to a MySQL database which we use for faster querying. This comes in handy especially for listening to asset deposits on the Plasma contract.\n    "DaggerEndpoint": "https://ropsten.dagger.matic.network",                   // Dagger Endpoint in Ropsten\n    "Explorer": "https://ropsten.etherscan.io",                                 // Explorer in Ropsten\n    "Contracts": {\n      "Registry": "0x56B082d0a590A7ce5d170402D6f7f88B58F71988",                 // The address for the main Registry in  Ropsten testnet\n      "RootChain": "0x82a72315E16cE224f28E1F1fB97856d3bF83f010",                // The address for the main Plasma contract in  Ropsten testnet\n      "DepositManager": "0x4b068Ac93b3b71DB13Fce4c4510Eb70D3022576A",           // An address for a DepositManager contract in Ropsten testnet\n      "DepositManagerProxy": "0x3Bc6701cA1C32BBaC8D1ffA2294EE3444Ad93989",      // An address for a DepositManagerProxy contract in Ropsten testnet\n      "WithdrawManager": "0xcBd99DfD6fbC55e7596318FC069bC3B7869Ff30a",          // An address for a WithdrawManager contract in Ropsten testnet\n      "WithdrawManagerProxy": "0x3cf9aD3395028a42EAfc949e2EC4588396b8A7D4",     // An address for a WithdrawManagerProxy contract in Ropsten testnet\n      "StakeManager": "0x0aEd86c6cA8c68C5499cec6F3570e2CA4860A918",             // An address for a StakeManager contract in Ropsten testnet\n      "SlashingManager": "0xAb1e2218EAF1b2d242ddDD047BE5f5583A68BA84",          // An address for a SlashingManager contract in Ropsten testnet\n      "DelegationManager": "0xba032CD2B41a6FDA32ad9f1DE5623694a47Db9EA",        // An address for a DelegationManager contract in Ropsten testnet\n      "ExitNFT": "0xe4202974B2d5b2f26b7A8f27098EC439d1e6C4aa",                  // An address for a ExitNFT contract in Ropsten testnet\n      "StateSender": "0x22E1f5aa1BA9e60527250FFeb35e30Aa2913727f",              // An address for a StateSender contract in Ropsten testnet\n      "Predicates": {                                                           // Predicated Contracts in Ropsten\n        "ERC20Predicate": "0xaBE79B1B44581c69cCc45146dd8681Fb82a8AA18",\n        "ERC721Predicate": "0x1F07Aa7eB46414d2F89746C7510E8597E82CF698",\n        "MarketplacePredicate": "0x2E3a58bF3644E4D790f93A01527F85E211c57841",\n        "TransferWithSigPredicate": "0x3f0dC47C79254cfCA4195519954b444F87a766E0"\n      },\n      "Tokens": {\n        "MaticWeth": "0x7BdDd37621186f1382FD59e1cCAE0316F979a866",              // Contract for WrappedEther in Ropsten\n        "TestToken": "0x28C8713DDe7F063Fdc4cA01aB2A8856e0F243Fec",              // Contract for ERC20 in Ropsten\n        "TestERC721": "0x07d799252cf13c01f602779b4dce24f4e5b08bbd"              // Contract for ERC721 in Ropsten\n      }\n    }\n  },\n  "Matic": {\n    "NetworkName": "Matic testnet",                                             // Network Name\n    "ChainId": 15001,                                                           // ChainId\n    "RPC": "https://testnetv3.matic.network",                                   // This is the MATIC testnet RPC\n    "RPCWebSocketEndpoint": "wss://testnetv3-wss.matic.network",                // This is the MATIC testnet Wss\n    "SyncerAPI": "https://testnetv3-syncer.api.matic.network/api/v1",           // Backend service which syncs the Matic sidechain state to a MySQL database which we use for faster querying. This comes in handy especially for constructing withdrawal proofs while exiting assets from Plasma.\n    "Explorer": "https://testnetv3-explorer.matic.network/",                    // Explorer in Polygon\n    "DaggerEndpoint": "https://testnetv3-dagger.matic.network",                 // Dagger Endpoint in Polygon\n    "Contracts": {\n      "ChildChain": "0xa2EF03edfA084ac9e5Bf110e409Ed5483BAe4101",               // This is child chain contract address\n      "Tokens": {\n        "MaticWeth": "0x8567184E6F9b1B77f24AfF6168453419AD22f90e",              // ChildContract for WrappedEther in Polygon testnetv3\n        "TestToken": "0x9a93c912F4eFf0254d178a18ACD980C1B05b57b0",              // ChildContract for ERC20 in Polygon testnet\n        "TestERC721": "0x8D5231e0B79edD9331e0CF0d4B9f3F30d05C47A5"              // ChildContract for ERC721 in Polygon testnet\n      }\n    }\n  }\n}\n')))}h.isMDXComponent=!0}}]);