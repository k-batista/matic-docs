"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[30417],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},27766:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"supernet-manager-interface",title:"SupernetManager",sidebar_label:"SupernetManager",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},c=void 0,l={unversionedId:"supernets/interfaces/staking/supernet-manager-interface",id:"supernets/interfaces/staking/supernet-manager-interface",title:"SupernetManager",description:"Learn about the access control module and how to allowlist validators.",source:"@site/docs/supernets/interfaces/staking/supernet-manager.md",sourceDirName:"supernets/interfaces/staking",slug:"/supernets/interfaces/staking/supernet-manager-interface",permalink:"/matic-docs/docs/supernets/interfaces/staking/supernet-manager-interface",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/supernets/interfaces/staking/supernet-manager.md",tags:[],version:"current",lastUpdatedBy:"Kennedy Batista",lastUpdatedAt:1686621530,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"supernet-manager-interface",title:"SupernetManager",sidebar_label:"SupernetManager",description:"Learn about the access control module and how to allowlist validators.",keywords:["docs","polygon","edge","consensus","interface"]},sidebar:"supernets",previous:{title:"StakeManager",permalink:"/matic-docs/docs/supernets/interfaces/staking/stake-manager-interface"},next:{title:"CustomSupernetManager",permalink:"/matic-docs/docs/supernets/interfaces/staking/custom-supernet-manager-interface"}},u={},p=[{value:"Functions",id:"functions",level:2},{value:"onInit()",id:"oninit",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"onStake()",id:"onstake",level:3},{value:"Parameters:",id:"parameters-1",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SupernetManager")," contract is an abstract contract for managing Supernets. It serves as a base contract that should be implemented with custom desired functionality."),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"oninit"},"onInit()"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function onInit(uint256 id) external;\n")),(0,i.kt)("p",null,"This function is called when a new childchain is registered. It allows the implementing contract to perform initialization logic when a new child chain is added to the Supernet."),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"id"),": The ID of the newly registered child chain."),(0,i.kt)("h3",{id:"onstake"},"onStake()"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function onStake(address validator, uint256 amount) external;\n")),(0,i.kt)("p",null,"This function is called when a validator stakes. It allows the implementing contract to perform additional logic when a validator stakes for a child chain in the supernet."),(0,i.kt)("h3",{id:"parameters-1"},"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validator"),": The address of the validator who stakes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amount"),": The amount of stake being staked by the validator.")))}m.isMDXComponent=!0}}]);