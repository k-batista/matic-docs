"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[51276],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return u}});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=a.createContext({}),l=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=l(t.components);return a.createElement(c.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(h,s(s({ref:e},p),{},{components:n})):a.createElement(h,s({ref:e},p))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},17401:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),s=["components"],i={id:"transactions",title:"Transactions",description:"What are transactions and when they are used",keywords:["docs","matic","polygon","Transactions"],image:"https://matic.network/banners/matic-network-16x9.png"},c="Transactions",l={unversionedId:"pos/heimdall/transactions",id:"pos/heimdall/transactions",title:"Transactions",description:"What are transactions and when they are used",source:"@site/docs/pos/heimdall/transactions.md",sourceDirName:"pos/heimdall",slug:"/pos/heimdall/transactions",permalink:"/matic-docs/docs/pos/heimdall/transactions",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/pos/heimdall/transactions.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686624865,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"transactions",title:"Transactions",description:"What are transactions and when they are used",keywords:["docs","matic","polygon","Transactions"],image:"https://matic.network/banners/matic-network-16x9.png"},sidebar:"pos",previous:{title:"Encoder (Pulp)",permalink:"/matic-docs/docs/pos/heimdall/encoder"},next:{title:"StdTx",permalink:"/matic-docs/docs/pos/heimdall/stdtx"}},p={},d=[{value:"Type Definition",id:"type-definition",level:2}],m={toc:d};function u(t){var e=t.components,n=(0,r.Z)(t,s);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transactions"},"Transactions"),(0,o.kt)("p",null,"Transactions are comprised of metadata held in\xa0",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/core/context.html"},"contexts"),"\xa0and\xa0",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/building-modules/messages-and-queries.html"},"messages"),"\xa0that trigger state changes within a module, through the module's\xa0Handler."),(0,o.kt)("p",null,"When users want to interact with an application and make state changes (e.g. sending coins), they create transactions. Each of a transaction's\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"message")," must be signed using the private key associated with the appropriate account before the transaction is broadcasted to the network. A transaction must then be included in a block, validated, and then approved by the network through the consensus process. To read more about the lifecycle of a transaction, click\xa0",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/basics/tx-lifecycle.html"},"here"),"."),(0,o.kt)("h2",{id:"type-definition"},"Type Definition"),(0,o.kt)("p",null,"Transaction objects are SDK types that implement the\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Tx"),"\xa0interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Tx interface {\n    // Gets all the transaction's messages.\n    GetMsgs() []Msg\n\n    // ValidateBasic does a simple and lightweight validation check that doesn't\n    // require access to any other information.\n    ValidateBasic() Error\n}\n")),(0,o.kt)("p",null,"More details on Transactions: ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/core/transactions.html"},"https://docs.cosmos.network/main/core/transactions.html")))}u.isMDXComponent=!0}}]);