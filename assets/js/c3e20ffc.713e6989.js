"use strict";(self.webpackChunkmatic_docs=self.webpackChunkmatic_docs||[]).push([[97442],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(r),m=a,d=f["".concat(i,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,s(s({ref:t},p),{},{components:r})):n.createElement(d,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},82395:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),s=["components"],c={id:"transfer",title:"transfer",keywords:["plasma client, erc20, transfer, polygon, sdk"],description:"Transfer erc20 plasma tokens"},i="Transfer",l={unversionedId:"develop/ethereum-polygon/plasma/erc20/transfer",id:"develop/ethereum-polygon/plasma/erc20/transfer",title:"transfer",description:"Transfer erc20 plasma tokens",source:"@site/docs/develop/ethereum-polygon/plasma/erc20/transfer.md",sourceDirName:"develop/ethereum-polygon/plasma/erc20",slug:"/develop/ethereum-polygon/plasma/erc20/transfer",permalink:"/matic-docs/docs/develop/ethereum-polygon/plasma/erc20/transfer",draft:!1,editUrl:"https://github.com/maticnetwork/matic-docs/tree/master/docs/develop/ethereum-polygon/plasma/erc20/transfer.md",tags:[],version:"current",lastUpdatedBy:"k-batista",lastUpdatedAt:1686626387,formattedLastUpdatedAt:"Jun 13, 2023",frontMatter:{id:"transfer",title:"transfer",keywords:["plasma client, erc20, transfer, polygon, sdk"],description:"Transfer erc20 plasma tokens"}},p={},u=[{value:"Transfer MATIC token",id:"transfer-matic-token",level:2}],f={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transfer"},"Transfer"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"transfer")," method can be used to transfer amount from one address to another address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const erc20Token = plasmaClient.erc20(<token address>);\n\nconst result = await erc20Token.transfer(<amount>,<to>);\n\nconst txHash = await result.getTransactionHash();\n\nconst txReceipt = await result.getReceipt();\n\n")),(0,o.kt)("h2",{id:"transfer-matic-token"},"Transfer MATIC token"),(0,o.kt)("p",null,"MATIC is native token on polygon. So we support transfer of matic tokens without any token address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// initialize token with null means use MATIC tokens\nconst erc20Token = plasmaClient.erc20(null);\n\nconst result = await erc20Token.transfer(<amount>,<to>);\n\nconst txHash = await result.getTransactionHash();\n\nconst txReceipt = await result.getReceipt();\n")))}m.isMDXComponent=!0}}]);